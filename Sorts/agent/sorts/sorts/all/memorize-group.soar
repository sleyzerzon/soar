sp {propose*memorize-my-group-no-conflict
   (state <s> ^io.input-link.objects.object <obj>
              ^memorize-group-cue <mgc>)
   (<mgc> ^id <id>
          ^type mine
          ^no-conflict)
   (<obj> ^id <id>)
-->
   (<s> ^operator <o> +)
   (<o> ^name memorize-my-group-no-conflict
        ^group <obj>)}

sp {apply*memorize-my-group-no-conflict
   (state <s> ^top-state <ts>
              ^io.input-link.grouping-level <gl>
              ^operator <o>)
   (<ts> ^group-memory.mine <gm>)
   (<o> ^name memorize-group-no-conflict
        ^group <g>)
   (<g> ^type <t>
        ^x-pos <xpos>
        ^y-pos <ypos>
        ^num-members <n>)
-->
   (<gm> ^group <new>)
   (<new> ^type <t>
          ^x-pos <xpos>
          ^y-pos <ypos>
          ^num-members <n>
          ^grouping-level <gl>)}

sp {propose*memorize-my-group-conflict
   (state <s> ^io.input-link.objects.object <obj>
              ^memorize-group-cue <mgc>)
   (<mgc> ^id <id>
          ^type mine
          ^conflict <old>)
   (<obj> ^id <id>)
-->
   (<s> ^operator <o> +)
   (<o> ^name memorize-my-group-conflict
        ^group <obj>
        ^old-group <old>)}

sp {apply*memorize-my-group-conflict
   (state <s> ^top-state <ts>
              ^io.input-link.grouping-level <gl>
              ^operator <o>)
   (<ts> ^group-memory.mine <gm>)
   (<o> ^name memorize-group-conflict
        ^group <g>
        ^old-group <old>)
   (<g> ^type <t>
        ^x-pos <xpos>
        ^y-pos <ypos>
        ^num-members <n>)
-->
   (<gm> ^group <old> -)
   (<gm> ^group <new>)
   (<new> ^type <t>
          ^x-pos <xpos>
          ^y-pos <ypos>
          ^num-members <n>
          ^grouping-level <gl>)}