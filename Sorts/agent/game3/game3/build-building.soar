sp {build-building*propose*init
   (state <s> ^name build-building
              ^superstate.operator <op>
              ^top-state <ts>)
   (<op> ^building-type <ty>
         ^building-dim <dim>
         ^task-id <tid>)
   (<ts> -^build-building.task-id <tid>)
-->
   (<s> ^operator <o> +)
   (<o> ^name init*build-building
        ^building-type <ty>
        ^building-dim <dim>
        ^task-id <tid>)
}

sp {build-building*apply*init
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name init*build-building
        ^task-id <tid>
        ^building-type <ty>
        ^building-dim <dim>)
-->
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^building-type <ty>
         ^building-dim <dim>)
}

sp {build-building*propose*set-cCenter-loc
   (state <s> ^name build-building
              ^io.input-link.groups <gs>
              ^task-id <tid>
              ^top-state.build-building <bb>)
   (<bb> ^task-id <tid>
        -^cCenter <cc>)
   (<gs> ^group <g>)
   (<g> ^type controlCenter
        ^owner 0
        ^x-pos <x>
        ^y-pos <y>)
        
-->
   (<s> ^operator <o> + > =)
   (<o> ^name set-cCenter-loc
        ^x <x>
        ^y <y>
        ^bb-data <bb>)
}

sp {build-building*apply*set-cCenter-loc
   (state <s> ^operator <o>)
   (<o> ^name set-cCenter-loc
        ^x <x>
        ^y <y>
        ^bb-data <bb>)
-->
   (<bb> ^cCenter <cc>)
   (<cc> ^x <x>
         ^y <y>)
}

# this should keep looking at friendly units until a cCenter is seen
sp {build-building*propose*find-cCenter
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state.build-building <bb>)
   (<bb> ^task-id <tid>
        -^cCenter <cc>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name visual-search
        ^search-type friendly)
}

sp {build-building*propose*find-build-location
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^cCenter <cc>
        -^location <loc>
         ^building-dim <dim>
         ^building-type <t>)
  -{(<ts> ^io.output-link.command <fc>)
    (<fc> ^task-id <tid>
          ^name locate-building)}
   (<cc> ^x <x>
         ^y <y>)
        
-->
   (<s> ^operator <o> + > =)
   (<o> ^name orts-locate-building
        ^x <x>
        ^y <y>
        ^task-id <tid>
        ^distance (+ <dim> 31 40) # keep a gap of 40 cCenter->building
        ^building-type <t>) 
}
sp {build-building*propose*no-location-found
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state.io.output-link.command <fi>
              ^io.input-link <il>)
   (<fi> ^task-id <tid>
         ^name locate-building)
   (<il> ^query-results <q>)
   (<q> ^query-name locate-building
        ^param0 -1
        ^param1 -1)
-->
   (<s> ^operator <o> + >) # prefer to location-found
   (<o> ^name bb*no-location-found
        ^task-id <tid>
        ^finished-command <fi>)
}

sp {build-building*apply*no-location-found
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bb*no-location-found
        ^task-id <tid>
        ^finished-command <fi>)
   (<ts> ^build-building <bb>
         ^io.output-link <ol>)
   (<bb> ^task-id <tid>)
   
-->
   (<ol> ^command <fi> -)
}

sp {build-building*propose*location-found
   (state <s> ^name build-building
              ^task-id <tid>
              ^io.output-link.command <cm>
              ^io.input-link <il>)
   (<cm> ^task-id <tid>
         ^name locate-building
         ^status complete)
   (<il> ^query-results <q>)
   (<q> ^query-name locate-building
        ^param0 <x>
        ^param1 <y>)
-->
   (<s> ^operator <o> +)
   (<o> ^name building-location-found
        ^x <x>
        ^y <y>
        ^task-id <tid>
        ^command <cm>)
}

sp {build-building*apply*location-found
   (state <s> ^operator <o>
              ^top-state <ts>
              ^io.output-link <ol>)
   (<o> ^name building-location-found
        ^x <x>
        ^y <y>
        ^task-id <tid>
        ^command <cm>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
   (<ol> ^command <cm>)
   
-->
   (<bb> ^location <l>)
   (<l> ^x <x>
        ^y <y>)
   (<ol> ^command <cm> -)
}
   

sp {build-building*propose*change-grouping-level
   (state <s> ^name build-building
              -^top-state.grouping-level individuals
               ^io.input-link.groups <gs>)
  -{(<gs> ^group <g>)
     (<g> ^type worker
          ^owner 0
          ^command_running 0
          ^num_members 1)}
-->
   (<s> ^operator <o> + > =)
   (<o> ^name set-grouping-individuals)
}

sp {build-building*propose*find-worker
   (state <s> ^name build-building
              ^top-state <ts>
              ^io.input-link <il>
              ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^location.x <x>
         ^location.y <y>
        -^worker)
   (<il> ^groups <gs>)
   -{(<gs> ^group <g>)
     (<g> ^type worker
          ^owner 0
          ^command_running 0
          ^num_members 1)}
-->
   (<s> ^operator <o> + < =) # prefer changing group level
   (<o> ^name visual-search
        ^search-type friendly_workers)
}

sp {build-building*propose*remember-id
   (state <s> ^name build-building
              ^top-state <ts>
              ^io.input-link.groups.group <g>
              ^task-id <tid>)
   (<g> ^type worker
        ^id <id>
        ^owner 0
        ^command_running 0
        ^num_members 1)
   (<ts> ^build-building <bb>)
      #  -^reserved-worker <id>)
   (<bb> ^task-id <tid>
         ^location.x <x>
         ^location.y <y>
        -^worker <wrk>)
  
-->
    (<s> ^operator <o> +  =)
    (<o> ^name bb*remember-id
         ^worker <id>
         ^task-id <tid>)
}

sp {build-building*apply*remember-id
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<ts> ^build-building <bb>)
   (<o> ^name bb*remember-id
        ^worker <id>
        ^task-id <tid>)
   (<bb> ^task-id <tid>)
-->
   (<bb> ^worker <id>)
  # (<ts> ^reserved-worker <id>)
}

sp {build-building*propose*clear-worker-id # worker disappears
   (state <s> ^name build-building
              ^top-state <ts>
              ^io.input-link.groups <gs>
              ^task-id <tid>)
   (<bb> ^task-id <tid>
         ^worker <id>)
  -{(<gs> ^group <g>)
    (<g> ^type worker
        ^id <id>)}
   (<ts> ^build-building <bb>)
  
-->
   (<s> ^operator <o> + > =)
    (<o> ^name bb*clear-worker-id
         ^task-id <tid>)
}

sp {build-building*apply*clear-worker-id
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<ts> ^build-building <bb> )
#         ^reserved-worker <id>)
   (<o> ^name bb*clear-worker-id
        ^task-id <tid>)
   (<bb> ^task-id <tid>
         ^worker <id>)
-->
   (<bb> ^worker <id> -)
  # (<ts> ^reserved-worker <id> -)
}

sp {build-building*propose*start-build
   (state <s> ^name build-building
              ^top-state <ts>
              ^task-id <tid>
              ^io.input-link <il>
              ^io.output-link <ol>)
   (<il> ^groups <gs>)
   (<gs> ^group <g>)
   (<g> ^type worker
        ^id <id>
        ^owner 0
        ^command_running 0
        ^num_members 1)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^location.x <x>
         ^location.y <y>
        -^started-build true
         ^building-type <tp>
         ^worker <id>)
  -{(<ol> ^command <c>)
    (<c> ^task-id <tid>
          ^name build)}
-->
    (<s> ^operator <o> +  =)
    (<o> ^name orts-build
         ^worker <id>
         ^x <x>
         ^y <y>
         ^building-type <tp>
         ^task-id <tid>)
}

sp {build-building*propose*mark-started
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>
              ^io.output-link <ol>)
   (<ol> ^command <fc>)
   (<fc> ^task-id <tid>
         ^name build)
-->
   (<s> ^operator <o> + >)
   (<o> ^name build-building*mark-started
        ^task-id <tid>)
}

sp {build-building*apply*mark-started
   (state <s> ^operator <o> 
              ^top-state <ts>)
   (<o> ^name build-building*mark-started
        ^task-id <tid>)
   (<ts> ^io.output-link <ol>
         ^build-building <bb>)
   (<ol> ^command <fc>)
   (<fc> ^task-id <tid>
         ^name build)
   (<bb> ^task-id <tid>)
-->
   (<bb> ^started-build true)
   (<ol> ^command <fc> -)
}

sp {build-building*propose*retry-failed
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>
              ^io.input-link.groups.group <g>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^worker <id>
         ^started-build true)
   (<g> ^id <id>
        ^command_failure 1)
-->
   (<s> ^operator <o> +)
   (<o> ^name bb*retry-failed
        ^task-id <tid>)
}


sp {build-building*apply*retry-failed
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bb*retry-failed
        ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
-->
   (<ts> ^build-building <bb> -)
}

sp {build-building*propose*done
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>
              ^io.input-link.groups.group <g>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^worker <id>
         ^started-build true)
   (<g> ^id <id>
        ^command_success 1)
-->
   (<s> ^operator <o> +)
   (<o> ^name bb*done
        ^task-id <tid>)
}


sp {build-building*apply*done
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bb*done
        ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
   (<ts> ^planning.execution-buffer.task <t>)
   (<t> ^id <tid>)
-->
   (<ts> ^build-building <bb> -)
   (<t> ^completed true)
}