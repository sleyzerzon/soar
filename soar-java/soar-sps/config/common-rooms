# this file does not define:
#  control_config
#  all

env {
	# For debugging
	command = "env";
}

svn {
	command = ["svn","up"];
}

ant {
	command = ["ant"];
}

# next, define each module
spy {
	# what command to run
	command = "lcm-spy";
}

sim {
	command = ["java","-Xmx256m", "april.sim.Simulator"];
	config = april_config; # what config to use, maps to top-level key
}
viewer {
	# what command to run
	command = ["/usr/lib/jvm/java-6-sun/bin/java","-Xmx512m","april.viewer.Viewer"];
	config = april_config; # what config to use, maps to top-level key
	
	# write this config out to file and append its filename to the command
}
april_config {
	# viewer and sim use this config
	simulator {
	    obstacle_image {
	        path = "sim/map_indoor_01_twobedroomapt.png";
	        meters_per_pixel = 0.01;
	        origin = [3890, 1170];
	    }
		
	    lasers = [ "LIDAR_FRONT" ];    
	    laser_max_range_m = 30;
	}
	
	# the robot's coordinate frame has the vehicle at the origin, looking
	# down the X axis, with +Y = left and +Z = up.
	LIDAR_FRONT {
	    position = [ 0, 0, 0.5 ];
	    rollpitchyaw_degrees = [ 0, 0, 0 ];
	    color = [1, 0, 0];
	}

	viewer {
	    avatar_hubi {
	        path = "sim/meshmodels/hubi.rwx";
	        scale = 7;
	
	        position = [ 0, 0, 0.63 ];
	        rollpitchyaw_degrees = [ 90, 0, 90 ];
	    }
	
	    avatar {
	        path = "sim/meshmodels/cy.rwx";
	        scale = 7;
	        
	        position = [ 0, 0, 0 ];
	        rollpitchyaw_degrees = [ 90, 0, 90 ];
	    }
	}
}

splinter {
	command = ["java","org.msoar.sps.splinter.Splinter"];
	config = splinter_config;
}
splintercap {
	command = ["java","org.msoar.sps.splinter.Splinter"];
	config = [splinter_config, splinter_config_capture];
}
splinter_config {
	orcHostname = "192.168.237.7";
	updateHz = 30;
	ports = [0, 1]; # LEFT, RIGHT
	invert = [true, true];# LEFT, RIGHT
	# should initial pose be here?
	tickMeters = 0.0000428528;
	baselineMeters = 0.37405;
	maxThrottleAccelleration = 2.0;
}
splinter_config_capture {
	captureOdometry = true;
}

sick {
	command = ["../../april-code/bin/sick","-c","LIDAR_FRONT"];
}

control {
	command = ["java","org.msoar.sps.control.Controller"];
	config = control_config;
}

debugger {
	command = ["java","-jar","../../SoarSuite/SoarLibrary/bin/SoarJavaDebugger.jar","-remote"];
}
