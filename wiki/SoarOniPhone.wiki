#summary Soar on iOS

= Introduction =

This page will guide you through the process of having a Soar-enabled application on iOS. Here are the basic steps, with more detail below:

  # Add Soar includes to the XCode header search path
  # Add static Soar libraries to the XCode project
  # Rename appropriate source files to .mm (to enable C++)
  # Include the appropriate headers in your source

= Soar Includes =

The easiest way to do this is to download a release and point XCode to the "include" directory. In Build Path, look for "Header Search Paths".

= Soar Static Libraries =

The basic process is to compile Soar statically for an iPhone-specific architecture and SDK:

  # Checkout Core from SVN
  # `make ios-simulator` or `make ios-device`

All lib`*`.a files in the out/lib folder should be added to your project (drag+drop), except for SQLite.

= Rename Source Files =

XCode allows you to use C++ if your source file is named with a .mm (vs. .m) extension. This will make for the easiest transition for non-Objective-C programmers.

= Include Headers =

In addition to the usual SML headers:

  * sml_Connection.h
  * sml_Client.h
  * ElementXML.h

XCode needs one more, which must go before the others:

  * portability.h

= Demo Application =

The following link allows you to download a self-contained sample application that works out-of-the-box on the iOS simulator.

[http://www.eecs.umich.edu/~soar/sitemaker/misc/ios-example.tar.gz iSoar]