= Mac OS X =

== Install the Prerequisites ==

=== Java Developers Package ===
*Who Needs It*: Everyone.

*Where is it*: 10.6 is the only one we support. You can find this at http://connect.apple.com/ under Java downloads.  You do not have to pay for a developers account.  There's a link at the bottom that will let you register for free resources.

*How to install*: Follow the instructions on the download page.
  * *Note*: If you get an error with "jni.h", visit the [http://discussions.apple.com/thread.jspa?threadID=2630649&tstart=0 following page] to see how to resolve it.

=== XCode ===
*Who Needs It*: Everyone.  XCode is the Mac OS development environment under which you'll build Soar.  It is free with the latest version of MacOS.

*Where is it*: [http://developer.apple.com/tools/xcode/ XCode].

*How to install*: Follow the instructions on the download page.

== Build Soar ==

Run `scons` in the top-level folder, see the [FAQ] for common solutions to errors.

== Set Up Environment Variables ==

While you don't need any environment variables to build Soar, you may need a few set when running or developing for Soar.  To make these changes permenant, edit the `.bashrc` file in your home diretory and put them at the bottom.

Soar binaries are, by default, installed to a prefix `SoarSuite/out`.  Java-based Soar application may need to be able to load relevant dynamic libraries on the fly, so you need to make sure that it can find the libraries it needs. Java will look `DYLD_LIBRARY_PATH`, so you can use that to tell it where to look.

{{{
# The exact path here will depend on your system settings.
export DYLD_LIBRARY_PATH=/home/$USER/soar/SoarSuite/out/
}}}

Certain functions in the kernel may also use the SOAR_HOME environment variable to find binaries.  For example, SpawnDebugger uses it to find the SoarDebugger.jar.

{{{
# The exact path here will depend on your system settings.
export SOAR_HOME=/home/$USER/soar/SoarSuite/out/
}}}
