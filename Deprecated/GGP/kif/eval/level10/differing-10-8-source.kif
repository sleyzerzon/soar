(role hero)
(monster hobgoblin1 hobgoblin)
(monster bat1 bat)
(init (health hobgoblin1 5))
(init (health bat1 4))
(item armor1)
(item potion1)
(item potion2)
(item scroll1)
(item scroll2)
(armor armor1 ringmail)
(potion potion1 strength)
(potion potion2 invisibility)
(scroll scroll2 armorenhance)
(scroll scroll1 sleep)
(init (location armor1 1 1))
(init (location scroll2 2 1))
(init (location bat1 3 1))
(init (location potion1 1 2))
(init (location hero 2 2))
(init (location gold 4 2))
(init (location exit 1 4))
(init (location hobgoblin1 2 4))
(init (location amulet 4 4))
(init (location scroll1 3 5))
(init (location potion2 4 5))
(room 0 0 5 2)
(room 0 4 5 5)
(corridor 3 3)
(init (blocked west 3 3))
(init (blocked east 3 3))
(init (blocked west 0 0))
(init (blocked west 0 1))
(init (blocked west 0 2))
(init (blocked north 0 0))
(init (blocked north 1 0))
(init (blocked north 2 0))
(init (blocked north 3 0))
(init (blocked north 4 0))
(init (blocked north 5 0))
(init (blocked east 5 0))
(init (blocked east 5 1))
(init (blocked east 5 2))
(init (blocked south 0 2))
(init (blocked south 1 2))
(init (blocked south 2 2))
(init (blocked south 4 2))
(init (blocked south 5 2))
(init (blocked west 0 4))
(init (blocked west 0 5))
(init (blocked north 0 4))
(init (blocked north 1 4))
(init (blocked north 2 4))
(init (blocked north 4 4))
(init (blocked north 5 4))
(init (blocked east 5 4))
(init (blocked east 5 5))
(init (blocked south 0 5))
(init (blocked south 1 5))
(init (blocked south 2 5))
(init (blocked south 3 5))
(init (blocked south 4 5))
(init (blocked south 5 5))
(init (step 1))
(item amulet)
(item gold)
(init (health hero 4))
(init (burden 0))
(init (quiversize 5))
(init odd)
(init (slomo-time 1))
(exittype exit)
(maxburden 5)
(maxhealth hero 4)
(maxtime 30)
(<= (healthincrease hero 1)
    (totalmonsterdamage 0)
    (not (healthrestoredbyscroll))
    (true (health hero ?hp))
    (maxhealth hero ?maxhealth)
    (> ?maxhealth ?hp))
(<= (goal hero 0)
    (dead hero))
(<= (goal hero 30)
    (not (dead hero))
    (not (true (carrying amulet)))
    (not atexit))
(<= (goal hero 50)
    (not (dead hero))
    (true (carrying amulet))
    (not atexit))
(<= (goal hero 50)
    (not (dead hero))
    (not (true (carrying amulet)))
    atexit)
(<= (goal hero 100)
    (not (dead hero))
    (true (carrying amulet))
    atexit)
(<= (next (blocked ?dir ?x ?y))
    (true (blocked ?dir ?x ?y)))
(<= (next (location hero ?x ?y))
    (nextherolocation ?x ?y))
(<= (next (location ?monster ?x ?y))
    (type ?monster monster-type)
    (true (health ?monster ?health))
    (> ?health 0)
    (nextmonsterlocation ?monster ?x ?y))
(<= (next (location ?exit ?x ?y))
    (exittype ?exit)
    (true (location ?exit ?x ?y)))
(<= (next (location ?item ?x ?y))
    (item ?item)
    (true (location ?item ?x ?y))
    (not (pickedup ?item)))
(<= (next (location ?item ?x ?y))
    (does hero (drop ?item))
    (true (location hero ?x ?y)))
(<= (next (location ?oldweapon ?x ?y))
    (changeweapon ?oldweapon)
    (true (location hero ?x ?y)))
(<= (healthdecrease hero ?dec)
    (totalmonsterdamage ?dec))
(<= (healthincrease hero 0)
    (totalmonsterdamage 0)
    (not (healthrestoredbyscroll))
    (true (health hero ?hp))
    (maxhealth hero ?maxhealth)
    (>= ?hp ?maxhealth))
(<= (healthincrease hero 0)
    (totalmonsterdamage ?x)
    (distinct ?x 0))
(<= (healthincrease hero ?increase)
    (totalmonsterdamage 0)
    (healthrestoredbyscroll)
    (true (health hero ?health))
    (maxhealth hero ?maxhealth)
    (- ?maxhealth ?health ?increase))
(<= (healthdecrease ?monster ?dec)
    (type ?monster monster-type)
    (monsterattacked ?monster)
    (herooffense ?dec))
(<= (healthdecrease ?monster 2)
    (type ?monster monster-type)
    (hitbyarrow ?monster))
(<= (healthdecrease ?monster ?hp)
    (type ?monster monster-type)
    (hitbyfireball ?monster)
    (true (health ?monster ?hp)))
(<= (healthdecrease ?monster 0)
    (type ?monster monster-type)
    (not (monsterattacked ?monster))
    (not (hitbyarrow ?monster))
    (not (hitbyfireball ?monster)))
(<= (healthincrease ?monster 0)
    (type ?monster monster-type))
(<= (next (health ?anyone ?newhealth))
    (true (health ?anyone ?oldhealth))
    (healthincrease ?anyone ?increase)
    (healthdecrease ?anyone ?decrease)
    (- ?increase ?decrease ?totalchange)
    (+ ?oldhealth ?totalchange ?unboundedhealth)
    (max ?unboundedhealth 0 ?newhealth))
(<= (next (carrying ?item))
    (item ?item)
    (pickedup ?item))
(<= (next (carrying ?item))
    (true (carrying ?item))
    (not (changeweapon ?item))
    (not (use ?item)))
(<= (next (burden ?burden))
    (not burdenchanged)
    (true (burden ?burden)))
(<= (next (burden ?newburden))
    (pickedup ?item)
    (distinct ?item gold)
    (not (weaponchange ?item))
    (true (burden ?oldburden))
    (succ ?oldburden ?newburden))
(<= (next (burden ?newburden))
    (decrementsburden ?item)
    (true (burden ?oldburden))
    (succ ?newburden ?oldburden))
(<= (next (quiversize ?oldsize))
    (not arrowthrown)
    (true (quiversize ?oldsize)))
(<= (next (quiversize ?newsize))
    (does hero (shoot-monster ?monster))
    (true (quiversize ?oldsize))
    (- ?oldsize 1 ?newsize))
(<= (next (wearing ?item))
    (true (wearing ?item))
    (not (does hero (drop ?item))))
(<= (next (wearing ?armor))
    (armor ?armor ?armor-type)
    (pickedup ?armor))
(<= (next (wielding ?weapon))
    (true (wielding ?weapon))
    (not (changeweapon ?weapon))
    (not (does hero (drop ?weapon))))
(<= (next (wielding ?weapon))
    (type ?weapon weapon-type)
    (pickedup ?weapon))
(<= (next (asleep hero 2))
    (does hero (read ?scroll))
    (scroll ?scroll sleepinduce))
(<= (next (asleep hero ?n))
    (true (asleep hero ?old-n))
    (distinct ?old-n 1)
    (- ?old-n 1 ?n))
(<= (next (asleep ?monster ?n))
    (type ?monster monster-type)
    (true (asleep ?monster ?n))
    (true (health ?monster ?hp))
    (distinct ?hp 0)
    (not (provoked ?monster)))
(<= (next (invisible hero 5))
    (does hero (quaff ?potion))
    (potion ?potion invisibility))
(<= (next (invisible hero ?n))
    (true (invisible hero ?old-n))
    (distinct ?old-n 1)
    (- ?old-n 1 ?n))
(<= (next (enhancedspeed hero 5))
    (does hero (quaff ?potion))
    (potion ?potion speed))
(<= (next (enhancedspeed hero ?n))
    (true (enhancedspeed hero ?old-n))
    (distinct ?old-n 1)
    (- ?old-n 1 ?n))
(<= (next (enhancedstrength hero 5))
    (does hero (quaff ?potion))
    (potion ?potion strength))
(<= (next (enhancedstrength hero ?n))
    (true (enhancedstrength hero ?old-n))
    (distinct ?old-n 1)
    (- ?old-n 1 ?n))
(<= (next (enhancedarmor hero 5))
    (does hero (read ?scroll))
    (scroll ?scroll armorenhance)
    (true (wearing ?armor))
    (armor ?armor ?armor-type)
    (armorstrength ?armor-type ?amt)
    (>= 3 ?amt))
(<= (next (enhancedarmor hero ?n))
    (true (enhancedarmor hero ?old-n))
    (distinct ?old-n 1)
    (- ?old-n 1 ?n))
(<= (next (step ?next))
    (true (step ?current))
    (+ ?current 1 ?next))
(<= (monsterismoving)
    (provoked ?monster))
(<= (slomomonstermoving ?monster)
    (currentlyenhancedspeed hero)
    (provoked ?monster)
    (monster ?monster ?monster-type)
    (monsterspeed ?monster-type 0.5))
(<= (next odd)
    (monsterismoving)
    (true even))
(<= (next even)
    (monsterismoving)
    (true odd))
(<= (next even)
    (not (monsterismoving))
    (true even))
(<= (next odd)
    (not (monsterismoving))
    (true odd))
(<= (next (slomo-time 1))
    (slomomonstermoving ?monster)
    (true (slomo-time 4)))
(<= (next (slomo-time 2))
    (slomomonstermoving ?monster)
    (true (slomo-time 1)))
(<= (next (slomo-time 3))
    (slomomonstermoving ?monster)
    (true (slomo-time 2)))
(<= (next (slomo-time 4))
    (slomomonstermoving ?monster)
    (true (slomo-time 3)))
(<= (next (slomo-time ?t))
    (true (slomo-time ?t))
    (not (currentlyenhancedspeed hero)))
(<= (canshootat ?monster)
    (type ?monster monster-type)
    (true (location hero ?x ?y1))
    (true (location ?monster ?x ?y2))
    (not (y-blocked ?x ?y1 ?y2)))
(<= (canshootat ?monster)
    (type ?monster monster-type)
    (true (location hero ?x1 ?y))
    (true (location ?monster ?x2 ?y))
    (not (x-blocked ?x1 ?x2 ?y)))
(<= (x-blocked ?x1 ?x2 ?y)
    (int ?y)
    (between ?x1 ?x3 ?x2)
    (not (traversible ?x3 ?y)))
(<= (y-blocked ?x ?y1 ?y2)
    (int ?x)
    (between ?y1 ?y3 ?y2)
    (not (traversible ?x ?y3)))
(<= (legal hero (move ?dir))
    (not (currentlyasleep hero))
    (true (location hero ?xold ?yold))
    (direction ?dir)
    (not (stepblocked ?dir ?xold ?yold))
    (nextcell ?dir ?xold ?yold ?xnew ?ynew))
(<= (legal hero (drop ?item))
    (true (burden ?max-burden))
    (maxburden ?max-burden)
    (not (currentlyasleep hero))
    (true (carrying ?item)))
(<= (legal hero (read ?scroll))
    (not (currentlyasleep hero))
    (true (carrying ?scroll))
    (type ?scroll scroll-type))
(<= (legal hero (quaff ?potion))
    (not (currentlyasleep hero))
    (true (carrying ?potion))
    (type ?potion potion-type))
(<= (legal hero (shoot-monster ?monster))
    (not (currentlyasleep hero))
    (true (wielding ?weapon))
    (weapon ?weapon bow)
    (true (quiversize ?numarrows))
    (> ?numarrows 0)
    (canshootat ?monster))
(<= terminal
    timeout)
(<= terminal
    (dead hero))
(<= terminal
    atexit)
(<= (type ?monster monster-type)
    (monster ?monster ?monster-type))
(<= (type ?weapon weapon-type)
    (weapon ?weapon ?weapon-type))
(<= (type ?scroll scroll-type)
    (scroll ?scroll ?scroll-type))
(<= (type ?potion potion-type)
    (potion ?potion ?potion-type))
(<= (totalmonsterdamage 0)
    (nextherolocation ?x ?y)
    (not (attackedbysomemonster ?x ?y)))
(<= (totalmonsterdamage ?damage)
    (nextherolocation ?x ?y)
    (monster ?monster ?monster-type)
    (attackedbymonster ?monster ?x ?y)
    (monsterstrength ?monster-type ?strength)
    (totalmonsterdamage1 ?monster ?strength ?x ?y ?damage))
(<= (totalmonsterdamage1 ?monster ?strength ?x ?y ?damage)
    (nextherolocation ?x ?y)
    (type ?monster monster-type)
    (attackedbymonster ?monster ?x ?y)
    (not (attackedby2ndmonster ?monster ?x ?y))
    (amountofmonsterdamage ?strength ?d1)
    (true (health hero ?hp))
    (min ?d1 ?hp ?damage))
(<= (totalmonsterdamage1 ?monster1 ?strength ?x ?y ?damage)
    (totalmonsterdamage2 ?monster1 ?strength ?x ?y ?damage))
(<= (totalmonsterdamage2 ?monster1 ?strength1 ?x ?y ?damage)
    (nextherolocation ?x ?y)
    (monster ?monster2 ?monster-type)
    (monster ?monster1 ?monster-type)
    (distinct ?monster2 ?monster1)
    (attackedbymonster ?monster1 ?x ?y)
    (attackedbymonster ?monster2 ?x ?y)
    (monsterstrength ?monster-type ?strength1)
    (monsterstrength ?monster-type ?strength2)
    (+ ?strength1 ?strength2 ?strength)
    (amountofmonsterdamage ?strength ?combined-damage)
    (true (health hero ?hp))
    (min ?combined-damage ?hp ?damage))
(<= (attackedbysomemonster ?x ?y)
    (type ?monster monster-type)
    (attackedbymonster ?monster ?x ?y))
(<= (attackedbymonster ?monster ?x2 ?y2)
    (provoked ?monster)
    (nextherolocation ?x2 ?y2)
    (true (location ?monster ?x1 ?y1))
    (adjacent ?x1 ?y1 ?x2 ?y2))
(<= (attackedby2ndmonster ?monster1 ?x ?y)
    (type ?monster2 monster-type)
    (type ?monster1 monster-type)
    (distinct ?monster2 ?monster1)
    (attackedbymonster ?monster2 ?x ?y)
    (attackedbymonster ?monster1 ?x ?y))
(<= (amountofmonsterdamage ?offensive-strength 0)
    (attackedbymonster ?monster ?x ?y)
    (monster ?monster ?monster-type)
    (monsterstrength ?monster-type ?offensive-strength)
    (herodefense ?defense)
    (> ?defense ?offensive-strength))
(<= (amountofmonsterdamage ?offensive-strength ?hitpointslost)
    (attackedbymonster ?monster ?x ?y)
    (monster ?monster ?monster-type)
    (monsterstrength ?monster-type ?offensive-strength)
    (herodefense ?defense)
    (>= ?offensive-strength ?defense)
    (- ?offensive-strength ?defense ?diff)
    (+ ?diff 1 ?hitpointslost))
(<= (herodefense 1)
    (not (armored hero)))
(<= (herodefense ?defense)
    (not (currentlyenhancedarmor hero))
    (true (wearing ?item))
    (armor ?item ?armor-type)
    (armorstrength ?armor-type ?defense))
(<= (herodefense ?defense)
    (int ?n)
    (true (enhancedarmor hero ?n))
    (true (wearing ?item))
    (armor ?item ?armor-type)
    (armorstrength ?armor-type ?base-defense)
    (+ ?base-defense 1 ?defense))
(<= (herooffense 1)
    (not (armed hero)))
(<= (herooffense ?offense)
    (not (currentlyenhancedstrength hero))
    (true (wielding ?weapon))
    (weapon ?weapon ?weapon-type)
    (weaponstrength ?weapon-type ?offense))
(<= (herooffense ?offense)
    (currentlyenhancedstrength hero)
    (true (wielding ?weapon))
    (weapon ?weapon ?weapon-type)
    (weaponstrength ?weapon-type ?offense))
(<= (monsterattacked ?monster)
    (true (location hero ?x1 ?y1))
    (true (location ?monster ?x2 ?y2))
    (type ?monster monster-type)
    (adjacent ?x1 ?y1 ?x2 ?y2)
    (does hero (move ?dir))
    (nextcell ?dir ?x1 ?y1 ?x2 ?y2))
(<= (nstepstowardshero 0 ?startx ?starty ?startx ?starty)
    (cellnearmonster ?startx ?starty))
(<= (nstepstowardshero 1 ?startx ?starty ?finalx ?finaly)
    (cellnearmonster ?startx ?starty)
    (cellnearmonster ?finalx ?finaly)
    (singlesteptowardshero ?startx ?starty ?finalx ?finaly))
(<= (nstepstowardshero 2 ?startx ?starty ?finalx ?finaly)
    (cellnearmonster ?startx ?starty)
    (cellnearmonster ?finalx ?finaly)
    (singlesteptowardshero ?startx ?starty ?x2 ?y2)
    (cellnearmonster ?x2 ?y2)
    (singlesteptowardshero ?x2 ?y2 ?finalx ?finaly))
(<= (singlesteptowardshero ?startx ?starty ?nextx ?nexty)
    (onesteptowardshero ?startx ?starty ?nextx ?nexty)
    (traversible ?nextx ?nexty)
    (nextherolocation ?herox ?heroy)
    (not (samelocation ?nextx ?nexty ?herox ?heroy)))
(<= (singlesteptowardshero ?startx ?starty ?startx ?starty)
    (nextherolocation ?herox ?heroy)
    (onesteptowardshero ?startx ?starty ?herox ?heroy))
(<= (onesteptowardshero ?x1 ?y1 ?x3 ?y1)
    (nextherolocation ?x2 ?y1)
    (cellnearmonster ?x1 ?y1)
    (> ?x1 ?x2)
    (- ?x1 1 ?x3))
(<= (onesteptowardshero ?x1 ?y1 ?x3 ?y1)
    (nextherolocation ?x2 ?y1)
    (cellnearmonster ?x1 ?y1)
    (> ?x2 ?x1)
    (+ ?x1 1 ?x3))
(<= (onesteptowardshero ?x1 ?y1 ?x1 ?y3)
    (nextherolocation ?x1 ?y2)
    (cellnearmonster ?x1 ?y1)
    (> ?y1 ?y2)
    (- ?y1 1 ?y3))
(<= (onesteptowardshero ?x1 ?y1 ?x1 ?y3)
    (nextherolocation ?x1 ?y2)
    (cellnearmonster ?x1 ?y1)
    (> ?y2 ?y1)
    (+ ?y1 1 ?y3))
(<= (onesteptowardshero ?x1 ?y1 ?x3 ?y1)
    (nextherolocation ?x2 ?y2)
    (cellnearmonster ?x1 ?y1)
    (> ?x1 ?x2)
    (distinct ?y1 ?y2)
    (true odd)
    (- ?x1 1 ?x3))
(<= (onesteptowardshero ?x1 ?y1 ?x3 ?y1)
    (nextherolocation ?x2 ?y2)
    (cellnearmonster ?x1 ?y1)
    (> ?x2 ?x1)
    (distinct ?y1 ?y2)
    (true odd)
    (+ ?x1 1 ?x3))
(<= (onesteptowardshero ?x1 ?y1 ?x1 ?y3)
    (nextherolocation ?x2 ?y2)
    (cellnearmonster ?x1 ?y1)
    (> ?y1 ?y2)
    (distinct ?x1 ?x2)
    (true even)
    (- ?y1 1 ?y3))
(<= (onesteptowardshero ?x1 ?y1 ?x1 ?y3)
    (nextherolocation ?x2 ?y2)
    (cellnearmonster ?x1 ?y1)
    (> ?y2 ?y1)
    (distinct ?x1 ?x2)
    (true even)
    (+ ?y1 1 ?y3))
(<= (nextcell north ?x ?y1 ?x ?y2)
    (int ?x)
    (int ?y1)
    (- ?y1 1 ?y2))
(<= (nextcell south ?x ?y1 ?x ?y2)
    (int ?x)
    (int ?y1)
    (+ ?y1 1 ?y2))
(<= (nextcell east ?x1 ?y ?x2 ?y)
    (int ?y)
    (int ?x1)
    (+ ?x1 1 ?x2))
(<= (nextcell west ?x1 ?y ?x2 ?y)
    (int ?y)
    (int ?x1)
    (- ?x1 1 ?x2))
(<= (roomlocation ?x ?y)
    (room ?tlx ?tly ?brx ?bry)
    (between ?tlx ?x ?brx)
    (between ?tly ?y ?bry))
(<= (between ?a ?b ?c)
    (int ?a)
    (int ?b)
    (int ?c)
    (>= ?b ?a)
    (>= ?c ?b))
(<= (traversible ?x ?y)
    (roomlocation ?x ?y))
(<= (traversible ?x ?y)
    (corridor ?x ?y))
(direction north)
(direction south)
(direction east)
(direction west)
(verticaldir north)
(verticaldir south)
(horizontaldir east)
(horizontaldir west)
(<= (samelocation ?x ?y ?x ?y)
    (int ?x)
    (int ?y))
(<= (adjacent ?x ?y1 ?x ?y2)
    (int ?x)
    (diff ?y1 ?y2 1))
(<= (adjacent ?x1 ?y ?x2 ?y)
    (int ?y)
    (diff ?x1 ?x2 1))
(<= (stepblocked ?dir ?x ?y)
    (true (blocked ?dir ?x ?y)))
(initialhealth bat 3)
(monsterstrength bat 2)
(monsterspeed bat 1)
(initialhealth hobgoblin 5)
(monsterstrength hobgoblin 3)
(monsterspeed hobgoblin 1)
(initialhealth kestral 2)
(monsterstrength kestral 2)
(monsterspeed kestral 2)
(initialhealth snake 4)
(monsterstrength snake 2)
(monsterspeed snake 0.5)
(speednumber 0.5)
(speednumber 1)
(speednumber 2)
(<= (provoked ?monster)
    (type ?monster monster-type)
    (not (currentlyasleep ?monster))
    (true (location ?monster ?x ?y))
    (room ?lx ?ty ?rx ?by)
    (between ?lx ?x ?rx)
    (between ?ty ?y ?by)
    (nextherolocation ?hx ?hy)
    (between ?lx ?hx ?rx)
    (between ?ty ?hy ?by))
(<= (provoked ?monster)
    (type ?monster monster-type)
    (true (asleep ?monster ?n))
    (monsterattacked ?monster))
(<= (provoked ?monster)
    (type ?monster monster-type)
    (true (asleep ?monster ?n))
    (hitbyarrow ?monster))
(armorstrength ringmail 2)
(armorstrength bandedmail 3)
(weaponstrength mace 2)
(weaponstrength sword 3)
(weaponstrength bow 1)
(<= atexit
    (true (location hero ?x ?y))
    (true (location exit ?x ?y)))
(<= timeout
    (true (step ?t))
    (maxtime ?t))
(<= (dead ?anyone)
    (true (health ?anyone 0)))
(<= killedmonster
    (type ?anymonster monster-type)
    (dead ?anymonster))
(<= (diff ?n1 ?n2 ?diff)
    (int ?n1)
    (int ?n2)
    (> ?n1 ?n2)
    (- ?n1 ?n2 ?diff))
(<= (diff ?n1 ?n2 ?diff)
    (int ?n1)
    (int ?n2)
    (>= ?n2 ?n1)
    (- ?n2 ?n1 ?diff))
(<= (min ?n1 ?n2 ?n2)
    (int ?n1)
    (int ?n2)
    (> ?n1 ?n2))
(<= (min ?n1 ?n2 ?n1)
    (int ?n1)
    (int ?n2)
    (>= ?n2 ?n1))
(<= (max ?x ?y ?x)
    (int ?x)
    (int ?y)
    (> ?x ?y))
(<= (max ?x ?y ?y)
    (int ?x)
    (int ?y)
    (> ?y ?x))
(<= (max ?x ?x ?x)
    (int ?x))
(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)
(succ 12 13)
(succ 13 14)
(succ 14 15)
(succ 15 16)
(succ 16 17)
(succ 17 18)
(succ 18 19)
(succ 19 20)
(succ 20 21)
(succ 21 22)
(succ 22 23)
(succ 23 24)
(succ 24 25)
(succ 25 26)
(succ 26 27)
(succ 27 28)
(succ 28 29)
(succ 29 30)
(succ 30 31)
(succ 31 32)
(succ 32 33)
(succ 33 34)
(succ 34 35)
(succ 35 36)
(succ 36 37)
(succ 37 38)
(succ 38 39)
(succ 39 40)
(succ 40 41)
(succ 41 42)
(succ 42 43)
(succ 43 44)
(succ 44 45)
(succ 45 46)
(succ 46 47)
(succ 47 48)
(succ 48 49)
(succ 49 50)
(succ 50 51)
(int -5)
(int -4)
(int -3)
(int -2)
(int -1)
(int 0)
(int 1)
(int 2)
(int 3)
(int 4)
(int 5)
(int 6)
(int 7)
(<= (nextherolocation ?x2 ?y2)
    (true (location hero ?x1 ?y1))
    (does hero (move ?dir))
    (nextcell ?dir ?x1 ?y1 ?x2 ?y2)
    (not (monsterat ?x2 ?y2)))
(<= (nextherolocation ?x1 ?y1)
    (true (location hero ?x1 ?y1))
    (does hero (move ?dir))
    (nextcell ?dir ?x1 ?y1 ?x2 ?y2)
    (monsterat ?x2 ?y2))
(<= (nextherolocation ?x ?y)
    (true (location hero ?x ?y))
    (not (heromoves)))
(<= (heromoves)
    (does hero (move ?dir)))
(<= (monsterat ?x ?y)
    (true (location ?monster ?x ?y))
    (type ?monster monster-type))
(<= (nextmonsterlocation ?monster ?x2 ?y2)
    (not (currentlyinvisible hero))
    (provoked ?monster)
    (true (location ?monster ?x1 ?y1))
    (monster ?monster ?monster-type)
    (monsterspeed ?monster-type ?base-speed)
    (relativespeed ?base-speed ?speed)
    (nstepstowardshero ?speed ?x1 ?y1 ?x2 ?y2))
(<= (nextmonsterlocation ?monster ?x ?y)
    (type ?monster monster-type)
    (not (provoked ?monster))
    (true (location ?monster ?x ?y)))
(<= (nextmonsterlocation ?monster ?x ?y)
    (type ?monster monster-type)
    (provoked ?monster)
    (true (invisible hero ?n))
    (true (location ?monster ?x ?y)))
(<= (relativespeed 0.5 ?speed)
    (not (currentlyenhancedspeed hero))
    (halfspeed ?speed))
(<= (relativespeed 0.5 ?speed)
    (true (enhancedspeed hero ?n))
    (quarterspeed ?speed))
(<= (relativespeed ?base-speed ?base-speed)
    (speednumber ?base-speed)
    (distinct ?base-speed 0.5)
    (not (currentlyenhancedspeed hero)))
(<= (relativespeed 1 ?speed)
    (true (enhancedspeed hero ?n))
    (halfspeed ?speed))
(<= (relativespeed 2 1)
    (true (enhancedspeed hero ?n)))
(<= (halfspeed 1)
    (true odd))
(<= (halfspeed 0)
    (true even))
(<= (quarterspeed 1)
    (true (slomo-time 4)))
(<= (quarterspeed 0)
    (true (slomo-time ?n))
    (distinct ?n 4))
(<= (healthrestoredbyscroll)
    (does hero (read ?scroll))
    (scroll ?scroll restorehealth)
    (true (health hero ?health))
    (maxhealth hero ?maxhealth)
    (distinct ?health ?maxhealth))
(<= (hitbyarrow ?monster)
    (does hero (shoot-monster ?monster)))
(<= (hitbyfireball ?monster)
    (does hero (read ?scroll))
    (scroll ?scroll fireball)
    (type ?monster monster-type)
    (true (location ?monster ?x1 ?y1))
    (true (location hero ?x2 ?y2))
    (adjacent ?x1 ?y1 ?x2 ?y2))
(<= (pickedup ?item)
    (item ?item)
    (distinct ?item gold)
    (true (burden ?burden))
    (maxburden ?max-burden)
    (> ?max-burden ?burden)
    (true (location hero ?x1 ?y1))
    (nextherolocation ?x2 ?y2)
    (not (samelocation ?x1 ?y1 ?x2 ?y2))
    (true (location ?item ?x2 ?y2)))
(<= (pickedup gold)
    (nextherolocation ?x ?y)
    (true (location gold ?x ?y)))
(<= (decrementsburden ?item)
    (use ?item))
(<= (decrementsburden ?item)
    (does hero (drop ?item)))
(<= burdenchanged
    (pickedup ?item)
    (not (weaponchange ?item))
    (distinct ?item gold))
(<= burdenchanged
    (decrementsburden ?item)
    (distinct ?item gold))
(<= (changeweapon ?currentweapon)
    (true (wielding ?currentweapon))
    (type ?newweapon weapon-type)
    (pickedup ?newweapon)
    (distinct ?currentweapon ?newweapon))
(<= (weaponchange ?newweapon)
    (type ?newweapon weapon-type)
    (pickedup ?newweapon)
    (true (wielding ?currentweapon))
    (distinct ?newweapon ?currentweapon))
(<= arrowthrown
    (does hero (shoot-monster ?monster)))
(<= (currentlyinvisible hero)
    (true (invisible hero ?n)))
(<= (currentlyasleep ?agent)
    (true (asleep ?agent ?n)))
(<= (currentlyenhancedarmor hero)
    (true (enhancedarmor hero ?n)))
(<= (currentlyenhancedstrength hero)
    (true (enhancedstrength hero ?n)))
(<= (currentlyenhancedspeed hero)
    (true (enhancedspeed hero ?n)))
(<= (armored hero)
    (true (wearing ?armor))
    (armor ?armor ?armor-type))
(<= (armed hero)
    (true (wielding ?weapon))
    (type ?weapon weapon-type))
(<= (use ?potion)
    (does hero (quaff ?potion)))
(<= (use ?scroll)
    (does hero (read ?scroll)))
(<= (relevantmonstercell ?x ?y)
    (type ?monster monster-type)
    (true (location ?monster ?x ?y))
    (provoked ?monster))
(<= (cellnearmonster ?x ?y)
    (relevantmonstercell ?x ?y))
(<= (cellnearmonster ?x1 ?y)
    (relevantmonstercell ?x ?y)
    (int ?d)
    (> ?d 0)
    (> 3 ?d)
    (- ?x ?d ?x1))
(<= (cellnearmonster ?x1 ?y)
    (relevantmonstercell ?x ?y)
    (int ?d)
    (> ?d 0)
    (> 3 ?d)
    (+ ?x ?d ?x1))
(<= (cellnearmonster ?x ?y1)
    (relevantmonstercell ?x ?y)
    (int ?d)
    (> ?d 0)
    (> 3 ?d)
    (- ?y ?d ?y1))
(<= (cellnearmonster ?x ?y1)
    (relevantmonstercell ?x ?y)
    (int ?d)
    (> ?d 0)
    (> 3 ?d)
    (+ ?y ?d ?y1))
(<= (cellnearmonster ?x1 ?y1)
    (relevantmonstercell ?x ?y)
    (+ ?x 1 ?x1)
    (+ ?y 1 ?y1))
(<= (cellnearmonster ?x1 ?y1)
    (relevantmonstercell ?x ?y)
    (+ ?x 1 ?x1)
    (- ?y 1 ?y1))
(<= (cellnearmonster ?x1 ?y1)
    (relevantmonstercell ?x ?y)
    (- ?x 1 ?x1)
    (- ?y 1 ?y1))
(<= (cellnearmonster ?x1 ?y1)
    (relevantmonstercell ?x ?y)
    (- ?x 1 ?x1)
    (+ ?y 1 ?y1))