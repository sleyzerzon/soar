Announcing Soar 8.6.1!
======================

This announcement describes the primary changes in this latest release. It also 
includes the announcement for your convenience. 

Soar 8.6.1 can be downloaded from the Soar homepage at:

http://sitemaker.umich.edu/soar

Requirements
============

* Java 1.4.2 or later required to use the Java debugger (javaw.exe should be 
  available in the path).
* Tcl 8.4.x or later required to run Eaters (wish.exe should be available in the
  path). OS X 10.4 comes with this pre-installed.

New in this release
===================

* General:
** Linux and Mac releases.
** Soar 7 mode now works.
** sml.jar now included in soar-library for Java developers.
** Tcl Eaters is now included.
** Java Missionaries and Cannibals is now included.
** Updated manual.
** Updated tutorials for new debugger.
** Added partial command matching for command line.
** Improved and extended kernel XML generation resulting in performance boost
   for those applications which use it (i.e. the Java debugger)
** Introduced new event-driven simulation support, removing the need for
   "start-system" command (see "SML Quick Start Guide" for details).
** Several other bugfixes.

* Java Debugger:
** Added support for filters, making the trace easier to read than ever before.
** Replaced tree trace window in debugger with faster version.
** Added lots of aliases that existed in older versions of Soar.
** Fixed bug in Java debugger resulting in massive performance boost.

Clarification regarding the "tcl" RHS function:
===============================================
While we are no longer providing a built-in "tcl" RHS function, there is nothing
to prevent someone from registering their own "tcl" RHS function which does the
same thing. Those needing to support legacy code should do this.

Known issues:
=============

* Log command only works properly from Java debugger if in text mode (as opposed
  to tree mode).
* Tanksoar is not yet available.
* Soar seems to "stutter" under Mac OS 10.4 (but it does work properly).
* On Linux sometimes the trace output can fall behind actual execution, making
  the debugger appear unresponsive (it's really just trying to catch up).
* Some rare warning messages may not appear fully in the Java debugger's tree
  view (but they appear fine in the text view).  If you find specific cases of
  this, please let us know.

If any other issues or bugs are found, please send mail to:

soar-group@lists.sourceforge.net


Announcing Soar 8.6.0!
======================

This announcement describes the primary changes in this latest release. Among
them are:

* Limitations in this release
* SML: A new XML-based API for interfacing with Soar
* A new Soar debugger written in Java
* Command line changes

Soar 8.6.0 can be downloaded from the Soar homepage at:

http://sitemaker.umich.edu/soar

Limitations in this release
===========================

* 8.6.0 is a Windows-only release.
* The manual needs more work (but it is included).
* Soar7 mode (i.e. soar8 --off) does not work yet.
* The tutorial needs to be updated so it is not included.
* Eaters and TankSoar are not included.

We anticipate an 8.6.1 release before the Soar workshop which should include
Linux and Mac releases, support for Soar7 mode, and will possibly address some
of these other issues as well.

If any other issues or bugs are found, please send mail to:

soar-sml-list@lists.sourceforge.net

SML: A new XML-based API for interfacing with Soar
==================================================

Interfacing to Soar has always been something of a challenge.  Initially we were
limited to building interfaces in the Soar implementation language (LISP then
C/C++).  We extended this to allow the use of Tcl but the extension ended up
requiring Tcl for all Soar systems.  SGIO opened up support for having a
simulation running either with Soar embedded or as a separate process but it was
limited to sending just I/O information which prevented debugging of embedded
processes.  gSKI provided a clean interface into the kernel but support for
other languages, debugging or remote I/O has yet to be implemented.

With this 8.6 release we are providing an alternative approach for interfacing
into Soar called SML (Soar Markup Language). This interface:

* supports multiple languages (Java, C++ and Tcl currently) while removing any
requirement on Tcl

* supports a uniform method for building I/O interfaces (for simulations) as
well as command interfaces (for debugging)

* supports embedding Soar kernels within a simulation or debugger and
communicating remotely between the two

* supports multiple clients (debuggers, simulations, other tools) connecting
to a single kernel instance

* supports dynamic connection and disconnection of tools (esp debuggers)
from a running kernel

* provides a uniform, high level and data-driven model for the interface while
retaining high performance

* moves command line support out of the kernel, while providing universal
access to it from any client

* includes a new, cleaned up command line syntax

* in many cases the interface is faster (sometimes an order of magnitude
faster) than our 8.5.2 interfaces

* includes gSKI in the main Soar Consortium kernel for the first time

* follows the SGIO interface model in many ways, making converting existing
simulations easier

Through these changes, the kernel itself has been largely unchanged so sets of
productions from 8.5.2 should run identically in 8.6 although some command line
arguments (e.g. "learning -off") have changed slightly so they will require
updating.  Details on that below.

The Soar Java debugger
======================
A preliminary new debugger in Java is provided which interfaces with Soar via SML.
This new debugger:

* has much higher performance than the TSI for detailed traces
* already offers a structured view of high watch traces
* can be dynamically attached to and detached from remote Soar instances
* is designed to be highly customizable by each user
* employs a plug-in architecture to allow for modular extensions in the future

At this point the debugger should be considered a beta version.

Command Line Changes
====================
One of the major changes in Soar 8.6 is syntax changes for the commands.  The
syntax was changed to increase consistency across commands and greatly
increase ease of parsing of commands (making adding new commands much easier).
Unfortunately, this means that some common commands used in Soar source files need
to be changed before those files will load in Soar 8.6.

Options now require two dashes before the unabbreviated name (e.g. run --decision 3)
and a single dash before the abbreviated name (e.g. run -d 3).

For complete documentation on the current syntax of the commands, use the "help"
command, read the manual, or read the documentation online at:
http://winter.eecs.umich.edu/soarwiki/Soar_Command_Line_Interface.

For your convenience, here are some of the most common changes that are required
to allow existing source files to load:

* learn -on => learn --on
* set warnings off => warnings --off

RHS function changes:

* "tcl" is no longer supported.  It has been replaced by "exec" (for user-provided
functions) and "cmd" to execute standard command-line commands.  User-provided
functions must be registered with the Soar kernel via a call to Kernel::AddRhsFunction.

* Built-in RHS functions like "write" and the math functionality are unchanged.

* See sections 3.3.6.6 to 3.3.6.12 (especially 3.3.6.11) for more information on RHS
functions.

These common commands have NOT changed:

* multi-attributes
* pushd
* popd
* sp

To learn more about SML, the debugger or how to build a simulation using the new
interface please see the documentation included with the release.