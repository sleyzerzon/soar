=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)

Soar v.8.3 Build Information.
 - CALLBACK_H_INCLUDED
 - MAX_SIMULTANEOUS_AGENTS
 - STD
 - USE_STDARGS

--- Input Phase --- 
=>WM: (6: I3 ^stringattr stringval)
<=WM: (6: I3 ^stringattr stringval)
=>WM: (7: I3 ^string_attr_val_w_pref yxx)
<=WM: (7: I3 ^string_attr_val_w_pref yxx)
=>WM: (8: I3 ^floatval 2.255)
<=WM: (8: I3 ^floatval 2.255)
=>WM: (9: I3 ^negfloatval -2.255)
<=WM: (9: I3 ^negfloatval -2.255)
=>WM: (10: I3 ^less0val -0.001)
<=WM: (10: I3 ^less0val -0.001)
=>WM: (11: I3 ^largeintval 123456789)
<=WM: (11: I3 ^largeintval 123456789)
=>WM: (12: I3 ^prefer yxx)
<=WM: (12: I3 ^prefer yxx)
=>WM: (13: I3 ^I4 |NewID|)
<=WM: (13: I3 ^I4 |NewID|)
=>WM: (14: I3 ^|NewVal| I5)
<=WM: (14: I3 ^|NewVal| I5)
=>WM: (15: I3 ^|StateValue| S1)
<=WM: (15: I3 ^|StateValue| S1)
=>WM: (16: I3 ^S1 |StateAttr|)
<=WM: (16: I3 ^S1 |StateAttr|)
=>WM: (17: I3 ^|VerticalBarVal| |1|)
<=WM: (17: I3 ^|VerticalBarVal| |1|)
=>WM: (18: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (18: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (19: I3 ^1.1 floatattr)
<=WM: (19: I3 ^1.1 floatattr)
=>WM: (20: I3 ^1 |"In Quotes"|)
<=WM: (20: I3 ^1 |"In Quotes"|)
=>WM: (21: I3 ^whatsthelargeststringthatisallowedstringval)
<=WM: (21: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 

--- Proposal Phase ---
=>WM: (22: I3 ^stringattr stringval)
<=WM: (22: I3 ^stringattr stringval)
=>WM: (23: I3 ^string_attr_val_w_pref yxx)
<=WM: (23: I3 ^string_attr_val_w_pref yxx)
=>WM: (24: I3 ^floatval 2.255)
<=WM: (24: I3 ^floatval 2.255)
=>WM: (25: I3 ^negfloatval -2.255)
<=WM: (25: I3 ^negfloatval -2.255)
=>WM: (26: I3 ^less0val -0.001)
<=WM: (26: I3 ^less0val -0.001)
=>WM: (27: I3 ^largeintval 123456789)
<=WM: (27: I3 ^largeintval 123456789)
=>WM: (28: I3 ^prefer yxx)
<=WM: (28: I3 ^prefer yxx)
=>WM: (29: I3 ^I6 |NewID|)
<=WM: (29: I3 ^I6 |NewID|)
=>WM: (30: I3 ^|NewVal| I7)
<=WM: (30: I3 ^|NewVal| I7)
=>WM: (31: I3 ^|StateValue| S1)
<=WM: (31: I3 ^|StateValue| S1)
=>WM: (32: I3 ^S1 |StateAttr|)
<=WM: (32: I3 ^S1 |StateAttr|)
=>WM: (33: I3 ^|VerticalBarVal| |1|)
<=WM: (33: I3 ^|VerticalBarVal| |1|)
=>WM: (34: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (34: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (35: I3 ^1.1 floatattr)
<=WM: (35: I3 ^1.1 floatattr)
=>WM: (36: I3 ^1 |"In Quotes"|)
<=WM: (36: I3 ^1 |"In Quotes"|)
=>WM: (37: I3 ^whatsthelargeststringthatisallowed567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890? stringval)
<=WM: (37: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 

--- Decision Phase ---
=>WM: (43: S2 ^quiescence t)
=>WM: (42: S2 ^choices none)
=>WM: (41: S2 ^impasse no-change)
=>WM: (40: S2 ^attribute state)
=>WM: (39: S2 ^superstate S1)
=>WM: (38: S2 ^type state)

     1:    ==>S: S2 (state no-change)=>WM: (44: I3 ^stringattr stringval)
<=WM: (44: I3 ^stringattr stringval)
=>WM: (45: I3 ^string_attr_val_w_pref yxx)
<=WM: (45: I3 ^string_attr_val_w_pref yxx)
=>WM: (46: I3 ^floatval 2.255)
<=WM: (46: I3 ^floatval 2.255)
=>WM: (47: I3 ^negfloatval -2.255)
<=WM: (47: I3 ^negfloatval -2.255)
=>WM: (48: I3 ^less0val -0.001)
<=WM: (48: I3 ^less0val -0.001)
=>WM: (49: I3 ^largeintval 123456789)
<=WM: (49: I3 ^largeintval 123456789)
=>WM: (50: I3 ^prefer yxx)
<=WM: (50: I3 ^prefer yxx)
=>WM: (51: I3 ^I8 |NewID|)
<=WM: (51: I3 ^I8 |NewID|)
=>WM: (52: I3 ^|NewVal| I9)
<=WM: (52: I3 ^|NewVal| I9)
=>WM: (53: I3 ^|StateValue| S2)
<=WM: (53: I3 ^|StateValue| S2)
=>WM: (54: I3 ^S2 |StateAttr|)
<=WM: (54: I3 ^S2 |StateAttr|)
=>WM: (55: I3 ^|VerticalBarVal| |1|)
<=WM: (55: I3 ^|VerticalBarVal| |1|)
=>WM: (56: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (56: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (57: I3 ^1.1 floatattr)
<=WM: (57: I3 ^1.1 floatattr)
=>WM: (58: I3 ^1 |"In Quotes"|)
<=WM: (58: I3 ^1 |"In Quotes"|)
=>WM: (59: I3 ^whatsthelargeststringthatisallowed567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890? stringval)
<=WM: (59: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 
      :    ==>S: S2 (state no-change)

--- Application Phase ---
=>WM: (60: I3 ^stringattr stringval)
<=WM: (60: I3 ^stringattr stringval)
=>WM: (61: I3 ^string_attr_val_w_pref yxx)
<=WM: (61: I3 ^string_attr_val_w_pref yxx)
=>WM: (62: I3 ^floatval 2.255)
<=WM: (62: I3 ^floatval 2.255)
=>WM: (63: I3 ^negfloatval -2.255)
<=WM: (63: I3 ^negfloatval -2.255)
=>WM: (64: I3 ^less0val -0.001)
<=WM: (64: I3 ^less0val -0.001)
=>WM: (65: I3 ^largeintval 123456789)
<=WM: (65: I3 ^largeintval 123456789)
=>WM: (66: I3 ^prefer yxx)
<=WM: (66: I3 ^prefer yxx)
=>WM: (67: I3 ^I10 |NewID|)
<=WM: (67: I3 ^I10 |NewID|)
=>WM: (68: I3 ^|NewVal| I11)
<=WM: (68: I3 ^|NewVal| I11)
=>WM: (69: I3 ^|StateValue| S2)
<=WM: (69: I3 ^|StateValue| S2)
=>WM: (70: I3 ^S2 |StateAttr|)
<=WM: (70: I3 ^S2 |StateAttr|)
=>WM: (71: I3 ^|VerticalBarVal| |1|)
<=WM: (71: I3 ^|VerticalBarVal| |1|)
=>WM: (72: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (72: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (73: I3 ^1.1 floatattr)
<=WM: (73: I3 ^1.1 floatattr)
=>WM: (74: I3 ^1 |"In Quotes"|)
<=WM: (74: I3 ^1 |"In Quotes"|)
=>WM: (75: I3 ^whatsthelargeststringthatisallowedstringval)
<=WM: (75: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 
      :    ==>S: S2 (state no-change)

--- Output Phase ---
=>WM: (76: I3 ^stringattr stringval)
<=WM: (76: I3 ^stringattr stringval)
=>WM: (77: I3 ^string_attr_val_w_pref yxx)
<=WM: (77: I3 ^string_attr_val_w_pref yxx)
=>WM: (78: I3 ^floatval 2.255)
<=WM: (78: I3 ^floatval 2.255)
=>WM: (79: I3 ^negfloatval -2.255)
<=WM: (79: I3 ^negfloatval -2.255)
=>WM: (80: I3 ^less0val -0.001)
<=WM: (80: I3 ^less0val -0.001)
=>WM: (81: I3 ^largeintval 123456789)
<=WM: (81: I3 ^largeintval 123456789)
=>WM: (82: I3 ^prefer yxx)
<=WM: (82: I3 ^prefer yxx)
=>WM: (83: I3 ^I12 |NewID|)
<=WM: (83: I3 ^I12 |NewID|)
=>WM: (84: I3 ^|NewVal| I13)
<=WM: (84: I3 ^|NewVal| I13)
=>WM: (85: I3 ^|StateValue| S2)
<=WM: (85: I3 ^|StateValue| S2)
=>WM: (86: I3 ^S2 |StateAttr|)
<=WM: (86: I3 ^S2 |StateAttr|)
=>WM: (87: I3 ^|VerticalBarVal| |1|)
<=WM: (87: I3 ^|VerticalBarVal| |1|)
=>WM: (88: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (88: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (89: I3 ^1.1 floatattr)
<=WM: (89: I3 ^1.1 floatattr)
=>WM: (90: I3 ^1 |"In Quotes"|)
<=WM: (90: I3 ^1 |"In Quotes"|)
=>WM: (91: I3 ^whatsthelargeststringthatisallowedstringval)
<=WM: (91: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 
      :    ==>S: S2 (state no-change)

--- Input Phase --- 
=>WM: (92: I3 ^stringattr stringval)
<=WM: (92: I3 ^stringattr stringval)
=>WM: (93: I3 ^string_attr_val_w_pref yxx)
<=WM: (93: I3 ^string_attr_val_w_pref yxx)
=>WM: (94: I3 ^floatval 2.255)
<=WM: (94: I3 ^floatval 2.255)
=>WM: (95: I3 ^negfloatval -2.255)
<=WM: (95: I3 ^negfloatval -2.255)
=>WM: (96: I3 ^less0val -0.001)
<=WM: (96: I3 ^less0val -0.001)
=>WM: (97: I3 ^largeintval 123456789)
<=WM: (97: I3 ^largeintval 123456789)
=>WM: (98: I3 ^prefer yxx)
<=WM: (98: I3 ^prefer yxx)
=>WM: (99: I3 ^I14 |NewID|)
<=WM: (99: I3 ^I14 |NewID|)
=>WM: (100: I3 ^|NewVal| I15)
<=WM: (100: I3 ^|NewVal| I15)
=>WM: (101: I3 ^|StateValue| S2)
<=WM: (101: I3 ^|StateValue| S2)
=>WM: (102: I3 ^S2 |StateAttr|)
<=WM: (102: I3 ^S2 |StateAttr|)
=>WM: (103: I3 ^|VerticalBarVal| |1|)
<=WM: (103: I3 ^|VerticalBarVal| |1|)
=>WM: (104: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (104: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (105: I3 ^1.1 floatattr)
<=WM: (105: I3 ^1.1 floatattr)
=>WM: (106: I3 ^1 |"In Quotes"|)
<=WM: (106: I3 ^1 |"In Quotes"|)
=>WM: (107: I3 ^whatsthelargeststringthatisallowed567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890? stringval)
<=WM: (107: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 
      :    ==>S: S2 (state no-change)

--- Proposal Phase ---
=>WM: (108: I3 ^stringattr stringval)
<=WM: (108: I3 ^stringattr stringval)
=>WM: (109: I3 ^string_attr_val_w_pref yxx)
<=WM: (109: I3 ^string_attr_val_w_pref yxx)
=>WM: (110: I3 ^floatval 2.255)
<=WM: (110: I3 ^floatval 2.255)
=>WM: (111: I3 ^negfloatval -2.255)
<=WM: (111: I3 ^negfloatval -2.255)
=>WM: (112: I3 ^less0val -0.001)
<=WM: (112: I3 ^less0val -0.001)
=>WM: (113: I3 ^largeintval 123456789)
<=WM: (113: I3 ^largeintval 123456789)
=>WM: (114: I3 ^prefer yxx)
<=WM: (114: I3 ^prefer yxx)
=>WM: (115: I3 ^I16 |NewID|)
<=WM: (115: I3 ^I16 |NewID|)
=>WM: (116: I3 ^|NewVal| I17)
<=WM: (116: I3 ^|NewVal| I17)
=>WM: (117: I3 ^|StateValue| S2)
<=WM: (117: I3 ^|StateValue| S2)
=>WM: (118: I3 ^S2 |StateAttr|)
<=WM: (118: I3 ^S2 |StateAttr|)
=>WM: (119: I3 ^|VerticalBarVal| |1|)
<=WM: (119: I3 ^|VerticalBarVal| |1|)
=>WM: (120: I3 ^|1.2| |VerticalBarAttr|)
<=WM: (120: I3 ^|1.2| |VerticalBarAttr|)
=>WM: (121: I3 ^1.1 floatattr)
<=WM: (121: I3 ^1.1 floatattr)
=>WM: (122: I3 ^1 |"In Quotes"|)
<=WM: (122: I3 ^1 |"In Quotes"|)
=>WM: (123: I3 ^whatsthelargeststringthatisallowedstringval)
<=WM: (123: I3 ^whatsthelargeststringthatisallowedstringval)
Error: bad integer (probably too large)

^
Expected identifier (or context variable)

^
Expected identifier (or context variable)

^
(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 
      :    ==>S: S2 (state no-change)
  496333 bytes total memory allocated
     800 bytes statistics overhead
     489 bytes for strings
  131980 bytes for hash tables
  359976 bytes for various memory pools
    3088 bytes for miscellaneous other things
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)

Soar v.8.3 Build Information.
 - CALLBACK_H_INCLUDED
 - MAX_SIMULTANEOUS_AGENTS
 - STD
 - USE_STDARGS

--- Input Phase --- 
*No chunks/justifications built yet!
Could not find the chunk.  Maybe explain was not on when it was created.
For Soar 7: set save_backtraces 1 before the chunk is created.
Soar 8.3 on peacemaker.soartech.com at Wed Aug 14 14:49:03 2002

1 productions (0 default, 1 user, 0 chunks)
   + 0 justifications
                                                                |    Derived
Phases:      Input      DLP     Pref      W/M   Output Decision |     Totals
================================================================|===========
Kernel:      0.000    0.000    0.000    0.000    0.000    0.000 |      0.000
================================================================|===========
Input fn:    0.000                                              |      0.000
================================================================|===========
Outpt fn:                                        0.000          |      0.000
================================================================|===========
Callbcks:    0.000    0.000    0.000    0.000    0.000    0.000 |      0.000
================================================================|===========
Derived---------------------------------------------------------+-----------
Totals:      0.000    0.000    0.000    0.000    0.000    0.000 |      0.000

Values from single timers:
 Kernel CPU Time:       0.000 sec. 
 Total  CPU Time:       0.000 sec.

1 decision cycles (0.000 msec/dc)
0 elaboration cycles (0.000 ec's per dc, 0.000 msec/ec)
0 p-elaboration cycles (0.000 pe's per dc, 0.000 msec/pe)
0 production firings (0.000 pf's per ec, 0.000 msec/pf)
5 wme changes (5 additions, 0 removals)
WM size: 5 current, 5.000 mean, 5 maximum

    *** Time/<x> statistics use the total kernel time from a ***
    *** single kernel timer.  Differences between this value ***
    *** and the derived total kernel time  are expected. See ***
    *** help  for the  stats command  for more  information. ***
Soar 8.3 on peacemaker.soartech.com at Wed Aug 14 14:49:03 2002

1 productions (0 default, 1 user, 0 chunks)
   + 0 justifications
                                                                |    Derived
Phases:      Input      DLP     Pref      W/M   Output Decision |     Totals
================================================================|===========
Kernel:      0.000    0.000    0.000    0.000    0.000    0.000 |      0.000
================================================================|===========
Input fn:    0.000                                              |      0.000
================================================================|===========
Outpt fn:                                        0.000          |      0.000
================================================================|===========
Callbcks:    0.000    0.000    0.000    0.000    0.000    0.000 |      0.000
================================================================|===========
Derived---------------------------------------------------------+-----------
Totals:      0.000    0.000    0.000    0.000    0.000    0.000 |      0.000

Values from single timers:
 Kernel CPU Time:       0.000 sec. 
 Total  CPU Time:       0.000 sec.

1 decision cycles (0.000 msec/dc)
0 elaboration cycles (0.000 ec's per dc, 0.000 msec/ec)
0 p-elaboration cycles (0.000 pe's per dc, 0.000 msec/pe)
0 production firings (0.000 pf's per ec, 0.000 msec/pf)
5 wme changes (5 additions, 0 removals)
WM size: 5 current, 5.000 mean, 5 maximum

    *** Time/<x> statistics use the total kernel time from a ***
    *** single kernel timer.  Differences between this value ***
    *** and the derived total kernel time  are expected. See ***
    *** help  for the  stats command  for more  information. ***
  758355 bytes total memory allocated
     848 bytes statistics overhead
     527 bytes for strings
  131980 bytes for hash tables
  621912 bytes for various memory pools
    3088 bytes for miscellaneous other things
      Node Type           Actual  If no merging
---------------------  ---------  -------------
      unhashed memory          0              1
               memory          0              2
     unhashed mem-pos          1              0
              mem-pos          2              0
    unhashed negative          0              0
             negative          0              0
    unhashed positive          0              1
             positive          0              2
            dummy top          1              1
        dummy matches          0              0
           conj. neg.          0              0
   conj. neg. partner          0              0
           production          1              1
---------------------  ---------  -------------
                Total          5              8
No Production named test*productionCurrent watch settings:
  Decisions:  on
  Phases:  on
  Production firings/retractions
    default productions:  on
    user productions:  on
    chunks:  on
    justifications:  on
    WME detail level:  2
  Working memory changes:  on
  Preferences generated by firings/retractions:  on

  Learning:  -fullprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Current watch settings:
  Decisions:  off
  Phases:  off
  Production firings/retractions
    default productions:  off
    user productions:  off
    chunks:  off
    justifications:  off
    WME detail level:  1
  Working memory changes:  off
  Preferences generated by firings/retractions:  off

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Current watch settings:
  Decisions:  on
  Phases:  off
  Production firings/retractions
    default productions:  off
    user productions:  off
    chunks:  off
    justifications:  off
    WME detail level:  1
  Working memory changes:  off
  Preferences generated by firings/retractions:  off

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Current watch settings:
  Decisions:  on
  Phases:  on
  Production firings/retractions
    default productions:  off
    user productions:  off
    chunks:  off
    justifications:  off
    WME detail level:  1
  Working memory changes:  off
  Preferences generated by firings/retractions:  off

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Current watch settings:
  Decisions:  on
  Phases:  on
  Production firings/retractions
    default productions:  on
    user productions:  on
    chunks:  on
    justifications:  on
    WME detail level:  1
  Working memory changes:  off
  Preferences generated by firings/retractions:  off

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Receive Watch 4
Current watch settings:
  Decisions:  on
  Phases:  on
  Production firings/retractions
    default productions:  on
    user productions:  on
    chunks:  on
    justifications:  on
    WME detail level:  1
  Working memory changes:  on
  Preferences generated by firings/retractions:  off

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Current watch settings:
  Decisions:  on
  Phases:  on
  Production firings/retractions
    default productions:  on
    user productions:  on
    chunks:  on
    justifications:  on
    WME detail level:  1
  Working memory changes:  on
  Preferences generated by firings/retractions:  on

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

Current watch settings:
  Decisions:  on
  Phases:  on
  Production firings/retractions
    default productions:  off
    user productions:  off
    chunks:  off
    justifications:  off
    WME detail level:  1
  Working memory changes:  on
  Preferences generated by firings/retractions:  on

  Learning:  -noprint  (watch creation of chunks/just.)
  Backtracing:  off
  Loading:  on

     0:  secondtest*production
     0:  secondtest*production
     0:  secondtest*production
     0:  secondtest*production
Preferences for S1 ^operator:
Preferences for S1 ^operator:
Preferences for S1 ^operator:
Preferences for S1 ^operator:
Preferences for S1 ^operator:
Preferences for S1 ^operator:
Preferences for S1 ^operator:
Preferences for S1 ^operator:
No production named test*production

^
sp {secondtest*production
    (state <s> ^superstate nil ^io <i*1>)
    (<i*1> ^output-link <ol>)
    -->
    (<ol> ^junk 5 +)
}

No production named nonexistent*production

^
********************* Current GDS **************************
stepping thru all wmes in rete, looking for any that are in a gds...
************************************************************
  For Goal  S1  : No GDS for this goal.
************************************************************

 Memory use for secondtest*production: 3

#=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)

Memory use for productions:

secondtest*production: 3

--- Symbolic Constants: ---
operator
accept
evaluate-object
problem-space
sqrt
mod
force-learn
goal
io
name
nil
atan2
|+|
dont-learn
constraint-failure
none
*
no-change
|-|
timestamp
secondtest*production
|/|
int
multiple
halt
strlen
output-link
float
abs
impasse
state
object
item
quiescence
conflict
superstate
sin
t
div
type
input-link
junk
make-constant-symbol
tie
choices
crlf
ifeq
cos
capitalize-symbol
write
attribute

--- Integer Constants: ---
5

--- Floating-Point Constants: ---

--- Identifiers: ---
I2
I3
S1
I1

--- Variables: ---
<ol>
<o>
<sso>
wait
<to>
<ss>
<ts>
<so>
<sss>
<s>
<i*1>
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)
=>WM: (2: S1 ^superstate nil)
=>WM: (1: S1 ^type state)

     0: ==>S: S1 =>WM: (5: I1 ^output-link I3)
=>WM: (4: I1 ^input-link I2)
=>WM: (3: S1 ^io I1)

No multi-attributes declared for this agent.


Value	Symbol
20	nonexistent*symbol*20
10	nonexistent*symbol

O Assertions:
I Assertions:
O Assertions:
I Assertions:
O Assertions:
I Assertions:
O Assertions:
I Assertions:
Retractions:
Retractions:
Retractions:
Retractions:
Testing echo command
with newline
Now testing echo commandwith no newline
Current learn settings:
   -only
   -all-levels
No Production named test*production(S1 ^io I1 ^superstate nil ^type state)
  (I1 ^input-link I2 ^output-link I3)
    (I3)
    (I2)
      : ==>S: S1 
  398170 bytes total memory allocated
     804 bytes statistics overhead
     530 bytes for strings
  131980 bytes for hash tables
  261744 bytes for various memory pools
    3112 bytes for miscellaneous other things
