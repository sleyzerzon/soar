### 
### FILE               : eight-puzzle.soar
###

###
### AUTHOR(1)          : John.E.Laird [ Soar 8.2 ]
###

###
### CREATED(1)         : Oct 20, 99
###
    
###
### Modifies the bindings, but does not create new bindings.
### State Structure: 
 ## Each state contains nine bindings.
 ## The bindings connect together a cell, one of the nine positions on 
 ## the board and a tile, one of the movable pieces. 
 ## The cells have pointers, ^cell, to each of their adjacent cells. 
 ## The state also has a pointer to the blank-cell and the cell
 ## that the last moved tile is in -- this improves efficiency and
 ## simplify computations that depend on the previous operator.
### Operator Staructure: 
 ## Each operator contains a pointer to the cell with the blank
 ## and the cell with the tile to be moved.
### 

learn -on

pushd ../default
source simple.soar
source selection.soar
popd

multi-attributes binding 10
multi-attributes operator 4

 ## Name the first subgoal eight-puzzle and create the 
 ## problem space and operators

###
### TOP GOAL:
### SOLVE-EIGHT-PUZZLE
###

###
### TOP GOAL PROBLEM SPACE:
### EIGHT-PUZZLE
###

sp {eight*elaborate*name
	(state <s> ^superstate nil)
   -->                                       
	(<s> ^name solve-eight-puzzle 
		  ^desired <d>)}

sp {eight*elaborate*problem-space
	(state <s> ^name solve-eight-puzzle)
   -->                                       
	(<s> ^problem-space <p>)
	(<p> ^name eight-puzzle 
		  ^default-state-copy yes
		  ^default-operator-copy no
		  ^one-level-attributes blank-cell
		  ^two-level-attributes binding)}

###
### EIGHT-PUZZLE PROBLEM SPACE:
### INITIAL STATE AND DESIRED STATE
###

 ## Define the initial state and the desired state:
 ## each state is a set of bindings# 
 ## each binding points to a cell and a tile#
 ## each cell points to its neighboring cells.

sp {eight*create*state*initial-and-desired-states
	(state <s> ^name solve-eight-puzzle
				  ^superstate nil
				  ^problem-space.name eight-puzzle
				  ^desired <d>)
	-->
	(<s> ^blank-cell <c23> ^tile-cell nil
		  ^binding <bb0> <bb1> <bb2> <bb3> <bb4>
					  <bb5> <bb6> <bb7> <bb8>)
	(<bb0> ^cell <c11> ^tile <t2>) 
	(<bb1> ^cell <c12> ^tile <t1>)
	(<bb2> ^cell <c13> ^tile <t7>)
	(<bb3> ^cell <c21> ^tile <t8>)
	(<bb4> ^cell <c22> ^tile <t6>)
	(<bb5> ^cell <c23> ^tile <t0>)
	(<bb6> ^cell <c31> ^tile <t3>)
	(<bb7> ^cell <c32> ^tile <t4>)
	(<bb8> ^cell <c33> ^tile <t5>)                      
	(<c11> ^name c11 ^cell <c12> ^cell <c21>)
	(<c12> ^name c12 ^cell <c11> ^cell <c13> ^cell <c22>) 
	(<c13> ^name c13 ^cell <c12> ^cell <c23>)
	(<c21> ^name c21 ^cell <c11> ^cell <c31> ^cell <c22>)
	(<c22> ^name c22 ^cell <c21> ^cell <c12>
			 ^cell <c23> ^cell <c32>)
	(<c23> ^name c23 ^cell <c22> ^cell <c33> ^cell <c13>)
	(<c31> ^name c31 ^cell <c32> ^cell <c21>)
	(<c32> ^name c32 ^cell <c31> ^cell <c22> ^cell <c33>)
	(<c33> ^name c33 ^cell <c32> ^cell <c23>)
	(<t0> ^name 0) (<t1> ^name 1) (<t2> ^name 2)
	(<t3> ^name 3) (<t4> ^name 4) (<t5> ^name 5)
	(<t6> ^name 6) (<t7> ^name 7) (<t8> ^name 8)
	(<d> ^better higher
		  ^binding <d0> <d1> <d2> <d3> <d4> <d5>
					  <d6> <d7> <d8>)
	(<d1> ^cell <c11> ^tile <t1>)
	(<d2> ^cell <c12> ^tile <t8>)
	(<d3> ^cell <c13> ^tile <t7>)
	(<d8> ^cell <c21> ^tile <t2>)
	(<d0> ^cell <c22> ^tile <t0>)
	(<d4> ^cell <c23> ^tile <t6>)
	(<d7> ^cell <c31> ^tile <t3>)
	(<d6> ^cell <c32> ^tile <t4>)
	(<d5> ^cell <c33> ^tile <t5>)}

###
### EIGHT-PUZZLE PROBLEM SPACE OPERATOR:
### MOVE-TILE
###

sp {eight*create*operator*move-tile 
   (state <s> ^problem-space.name eight-puzzle
              ^blank-cell <c1>)
   (<c1> ^cell <c2>)
   -->
   (<s> ^operator <o>)
   (<o> ^name move-tile 
        ^tile-cell <c2> 
		  ^blank-cell <c1>)}

###
### EIGHT-PUZZLE PROBLEM SPACE: 
### OPERATOR IMPLEMENTATION
###

sp {eight*apply*operator*move-tile
	(state <s> ^operator <o>
				  ^binding <b1> { <> <b1> <b2>}
				  ^blank-cell <c1>)
	(<o> ^name move-tile
		  ^tile-cell <c2> 
		  ^blank-cell <c1>)
	(<b1> ^tile <t1> ^cell <c1>)
	(<b2> ^tile <t2> ^cell <c2>)
	-->
	(<s> ^blank-cell <c1> - <c2>)
	(<b1> ^tile <t1> - <t2>)
	(<b2> ^tile <t2> - <t1>)}

sp {eight*apply*operator*remove-tile-cell
	(state <s> ^operator <o>
				  ^tile-cell <last-move>)
	(<o> ^name move-tile 
		  ^blank-cell <> <last-move>)
	-->
	(<s> ^tile-cell <last-move> -)}

sp {eight*apply*operator*add-tile-cell
	(state <s> ^operator <o>
				  ^blank-cell <c1>)
	(<o> ^name move-tile
		  ^blank-cell <c1>)
	-->
	(<s> ^tile-cell <c1>)}

###
### EIGHT-PUZZLE PROBLEM SPACE:
### STATE EVALUATION
###

 ## A numeric evaluation function,
 ## based on changes by operators, is used
 ## to evaluate state.

###
### EVALUATION: STATE POSITIVE 
###

 ## 1 point for moving tile into its desired cell
  #
sp {eight*elaborate*state*evaluation*positive*one
	(state <s> ^problem-space.name eight-puzzle
				  ^superstate.operator <so>
				  ^tile-cell <c1>
				  ^binding <b1>)
	(<b1> ^cell <c1> ^tile <v1>)
	(<b2> ^cell <c1> ^tile <v1>)
	(<so> ^name evaluate-object 
			^evaluation <e> 
			^desired.binding <b2>)
	-->
	(<e> ^numeric-value 1)}

sp {eight*elaborate*state*evaluation*positive*one
	(state <s> ^desired.binding <b2>
              ^tried-tied-operator
				  ^tile-cell <c1>
				  ^binding <b1>)
	(<b1> ^cell <c1> ^tile <v1>)
	(<b2> ^cell <c1> ^tile <v1>)
	-->
	(<s> ^numeric-value 1)}

###
### EVALUATION: STATE NEUTRAL 
###

 ## 0 points for not moving tile in or out of its desired cell
  #
sp {eight*elaborate*state*evaluation*neutral*zero
	(state <s> ^desired <d>
              ^tried-tied-operator
				  ^tile-cell <c1>
				  ^blank-cell <c0>
				  ^binding <b1> { <> <b1> <b2> } { <> <b1> <> <b2> <b3> })
	(<d> ^binding <b4> { <> <b4> <b5> })
	(<b1> ^cell <c1> ^tile <v1>)
	(<b2> ^tile <v2>)
	(<b3> ^tile <v3>)
	(<b4> ^cell <c1> ^tile { <> <v1> <v2> })
	(<b5> ^cell <c0> ^tile { <> <v1> <v3> })
	-->
	(<s> ^numeric-value 0)}

###
### EVALUATION: STATE NEGATIVE
###

 ## -1 points for moving tile out of its desired cell
  #
sp {eight*elaborate*state*evaluation*negative*one
	(state <s> ^problem-space.name eight-puzzle
				  ^superstate.operator <so>
				  ^tile-cell <c1>
				  ^binding <b1>
				  ^blank-cell <c0>)
	(<d> ^binding <b2>)
	(<b1> ^cell <c1> ^tile <v1>)
	(<b2> ^cell <c0> ^tile <v1>)
	(<so> ^name evaluate-object 
			^evaluation <e> 
			^desired <d>)
	-->
	(<e> ^numeric-value -1)}

sp {eight*elaborate*state*evaluation*negative*one
	(state <s> ^desired.binding <b2>
				  ^tried-tied-operator
				  ^tile-cell <c1>
				  ^binding <b1>
				  ^blank-cell <c0>)
	(<b1> ^cell <c1> ^tile <v1>)
	(<b2> ^cell <c0> ^tile <v1>)
	-->
	(<s> ^numeric-value -1)}

###
### EVALUATION: STATE SUCCESS/GOAL TEST
###

sp {eight*detect*state*success
	(state <s> ^problem-space.name eight-puzzle
				  ^desired <d>
				  ^binding <x11> <x12> <x13>
				  <x21> <x22> <x23>
				  <x31> <x32> <x33>)
	(<x11> ^cell.name c11 ^tile <o11>)
	(<x12> ^cell.name c12 ^tile <o12>)
	(<x13> ^cell.name c13 ^tile <o13>)
	(<x21> ^cell.name c21 ^tile <o21>)
	(<x22> ^cell.name c22 ^tile <o22>)
	(<x23> ^cell.name c23 ^tile <o23>)
	(<x31> ^cell.name c31 ^tile <o31>)
	(<x32> ^cell.name c32 ^tile <o32>)
	(<x33> ^cell.name c33 ^tile <o33>)
	(<d> ^binding <d11> <d12> <d13> 
					  <d21> <d22> <d23>
					  <d31> <d32> <d33>)
	(<d11> ^cell.name c11 ^tile <o11>)
	(<d12> ^cell.name c12 ^tile <o12>)
	(<d13> ^cell.name c13 ^tile <o13>)
	(<d21> ^cell.name c21 ^tile <o21>)
	(<d22> ^cell.name c22 ^tile <o22>)
	(<d23> ^cell.name c23 ^tile <o23>)
	(<d31> ^cell.name c31 ^tile <o31>)
	(<d32> ^cell.name c32 ^tile <o32>)
	(<d33> ^cell.name c33 ^tile <o33>)
	-->
	(<s> ^success <d>)}

###
### EIGHT-PUZZLE PROBLEM SPACE: 
### SEARCH CONTROL
###

sp {eight*operator*move-tile*inverse*reject
	"Reject the operator that was applied to create this state."
	(state <s> ^problem-space.name eight-puzzle
				  ^operator <o> + 
				  ^tile-cell <tc>)
	(<o> ^tile-cell <tc>)
	-->
	(<s> ^operator <o> - )}

###
### EIGHT-PUZZLE PROBLEM SPACE: 
### MONITOR STATE
###

 ## Want this to fire whenever an op is installed or 
 ## whenever op is applied (bindings change) but NOT both.
 ## Try requiring that operator be finished.
  #

sp {eight*monitor*state                   
	(state <s> ^binding <x11> <x12> <x13>
				  <x21> <x22> <x23>
				  <x31> <x32> <x33>)
	(<x11> ^cell.name c11 ^tile <o11>)
	(<o11> ^name <v11>)
	(<x12> ^cell.name c12 ^tile <o12>)
	(<o12> ^name <v12>)
	(<x13> ^cell.name c13 ^tile <o13>)
	(<o13> ^name <v13>)
	(<x21> ^cell.name c21 ^tile <o21>)
	(<o21> ^name <v21>)
	(<x22> ^cell.name c22 ^tile <o22>)
	(<o22> ^name <v22>)
	(<x23> ^cell.name c23 ^tile <o23>)
	(<o23> ^name <v23>)
	(<x31> ^cell.name c31 ^tile <o31>)
	(<o31> ^name <v31>)
	(<x32> ^cell.name c32 ^tile <o32>)
	(<o32> ^name <v32>)
	(<x33> ^cell.name c33 ^tile <o33>)
	(<o33> ^name <v33>)
	-->
	(write (crlf)  |      -------------|  | | (crlf) | | )
	(write |     \||  | | <v11>  | | |\||  | | <v21>  | | |\||  | | <v31>  | | |\||  | | (crlf) | | )
	(write |     \|---\|---\|---\||  | | (crlf) | | )
	(write |     \||  | | <v12>  | | |\||  | | <v22>  | | |\||  | | <v32>  | | |\||  | | (crlf) | | )
	(write |     \|---\|---\|---\||  | | (crlf) | | )
	(write |     \||  | | <v13>  | | |\||  | | <v23>  | | |\||  | | <v33>  | | |\||  | | (crlf) | | )
	(write |     -------------|  | | (crlf) | | )}

### eof of eight-puzzle.soar
