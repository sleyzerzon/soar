#set fileId [open "log.txt" a]
#puts $fileId (clrf)

learn -RLoff

 
sp {add*directions
  (state <s> ^superstate nil)
-->
  (<s> ^directions <o>)
  (<o> ^north <north>
       ^west <west>
       ^south <south>
       ^east <east>)
  (<north> ^left west
       ^straight north
       ^right east
       ^opposite south)
  (<west> ^left south
       ^straight west
       ^right north
       ^opposite east)
  (<south> ^left east
       ^straight south
       ^right west
       ^opposite north)
  (<east> ^left north
       ^straight east
       ^right south
       ^opposite west)}
       
 sp {add*north*boundary
   (state <s> ^superstate nil
              ^io.input-link.eater.y 1)
 -->
   (<s> ^boundary-wall north)}
 
 sp {add*south*boundary
    (state <s> ^superstate nil
               ^io.input-link.eater.y 15)
  -->
   (<s> ^boundary-wall south)}
   
 sp {add*west*boundary
    (state <s> ^superstate nil
               ^io.input-link.eater.x 1)
 -->
    (<s> ^boundary-wall west)}

sp {add*east*boundary
   (state <s> ^superstate nil
              ^io.input-link.eater.x 15)
-->
   (<s> ^boundary-wall east)}
 
######################## Operator proposals ###################################

# Propose*move:
# If there is normalfood, bonusfood, eater, or empty in an adjacent cell, 
#    propose move in the direction of that cell
#    and indicate that this operator can be selected randomly.
sp {propose*move*operator
   (state <s> ^io.input-link.my-location.<dir>.content <content> <> wall)
-->
   (<s> ^operator <o> + =)
   (<o> ^name move
        ^direction <dir>
        ^content <content>)}

########################## Application rules ##############################

# Apply*move
# If the move operator for a direction is selected,
#    generate an output command to move in that direction.


sp {move*propose*record
  (state <s> ^superstate <s1>)
  (<s1> ^operator <o>
        ^directions.<dir>.opposite <dir1>
        ^io.input-link.my-location.<dir1> <place>)
  (<o> ^name move
       ^direction <dir>)
  (<place> ^content << empty wall >>
           ^<dir1>.content << normalfood bonusfood >>)
  -(<s> ^next-direction <dir1>)
-->
   (<s> ^operator <o1> +, >)
   (<o1> ^name record-food
         ^direction <dir1>)}
         
sp {move*propose*move
   (state <s> ^superstate.operator <o>)
   (<o> ^name move)
-->
   (<s> ^operator <o> +)}
   
sp {move*apply*move
   (state <s> ^superstate.io.output-link <ol>
              ^operator <o>)
   (<o> ^name move
        ^direction <dir>)
-->
   (<ol> ^move.direction <dir>)}
   
sp {move*apply*record
  (state <s> ^operator <o>)
  (<o> ^name record-food
       ^direction <dir>)
-->
  (<s> ^next-direction <dir>)}
  
sp {move*apply*move1
  (state <s> ^superstate <s1> <> nil
             ^operator.name move
             ^next-direction <dir>)
  (<s1> ^next-direction <dir1> <> <dir>)
-->
  (<s1> ^next-direction <dir1> -)}
  
sp {move*apply*move2
  (state <s> ^superstate <s1> <> nil
             ^operator.name move
             ^next-direction <dir>)
 -->
  (<s1> ^next-direction <dir>)}



# Apply*move*remove-move:
# If the move operator is selected,
#    and there is a completed move command on the output link,
#    then remove that command.

sp {apply*move*remove-move
   (state <s> ^io.output-link <ol>
              ^operator.name move)
   (<ol> ^move <direction>)
   (<direction> ^status complete)
-->
   (<ol> ^move <direction> -)}


#################### Operator elaboration #################
sp {elaborate*next-content
  (state <s> ^io.input-link.my-location.<dir> <d>
             ^operator <o> +
             ^directions.<dir> <opp>)
  (<o> ^name move
       ^direction <dir>)
   (<opp> ^left <left>
          ^straight <straight>
          ^right <right>)
  (<d> ^<left>.content <con1>
       ^<straight>.content <con2>
       ^<right>.content <con3>)
-->
  (<o> ^content-left <con1>
       ^content-straight <con2>
       ^content-right <con3>)}
#################### RL templates ######################################

# Good rule
#sp {RL*test-contents
#  (state <s> ^operator <o> +)
#   (<o> ^name move
#        ^content <content>)
#-->
#  (<s> ^operator <o> = 0)}
   
# Bad rule
#sp {RL*test-nothing
#   (state <s> ^operator <o> +)
#-->
#   (<s> ^operator <o> = 0)}

#sp {RL*test-next-contents
#  (state <s> ^operator <o> +)
#  (<o> ^name move
#       ^content-left <con1>
#       ^content-straight <con2>
#       ^content-right <con3>)
#-->
#  (<s> ^operator <o> = 0)}

#sp {record*score*init
#    (state <s> ^operator <o>
#               ^io.input-link.eater.score <sc>
#              -^prev-score )
#    -->
#    (<s> ^prev-score <sc>)}
    
#sp {record*score
#    (state <s> ^operator <o>
#               ^io.input-link.eater.score <sc>
#               ^prev-score <ps> <> <sc>)
# -->
#    (<s> ^prev-score <ps> -)
#    (<s> ^prev-score <sc>)}
    

#sp {compute*reward
#    (state <s> ^io.input-link.eater.score <sc>
#	       ^prev-score <ps>
#	       ^io.reward <r>)
#-->
#    (<r> ^score (- <sc> <ps>))}

############## Symbolic preferences

sp {select*move*avoid-empty-eater
   (state <s> ^operator <o1> +)
   (<o1> ^name move 
         ^content << empty eater >>)
-->
   (<s> ^operator <o1> <)}
   
sp {select*move*to-recorded-food
   (state <s> ^operator <o1> +
             ^operator <o2> +
             ^next-direction <dir>)
   (<o1> ^name move
         ^content empty
         ^direction <dir>)
   (<o2> ^name move
         ^content empty
         ^direction <> <dir>)
 -->
   (<s> ^operator <o1> > <o2>)}
   
sp {select*move*bonusfood-better-than-normalfood-empty
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name move 
         ^content bonusfood)
   (<o2> ^name move 
         ^content << normalfood empty >>)
-->
   (<s> ^operator <o1> > <o2>)}


############## Record keeping ##########################33

sp {performance*init-data
    (state <s> ^superstate nil
               ^io.input-link.eater <e> 
               ^operator.name move
              -^performance)
    (<e> ^score <score>
         ^x <x>
         ^y <y>)
-->
    (<s> ^performance <p>) 
    (<p> ^score <score>
         ^prev-score 0
         ^x <x>
         ^y <y>
         ^move-count 1)
}
 
sp {compute*reward
    (state <s> ^superstate nil
               ^io.reward <r>
               ^performance <p>)
    (<p> ^score <score>
         ^prev-score <old-score>)
-->
    (<r> ^eaten (- <score> <old-score>))
}

sp {performance*update-data
    (state <s> ^superstate nil
               ^io.input-link <il>
	         ^operator.name move
               ^performance <p>)
    (<il> ^eater <e>) 
    (<e> ^score <score>
         ^x <x>
         ^y <y>)
   -(<p> ^score <score>
         ^x <x>
         ^y <y>)
    (<p> ^move-count <n>
         ^score <old-score>)
-->
    (<s> ^performance <p> -
         ^performance <p-new>)
    (<p-new> ^score <score>
       ^prev-score <old-score>
             ^x <x>
             ^y <y>
             ^move-count (+ 1 <n>))
   # (tcl |puts $fileId | <score>) 
    # [expr double(| <score> |) / | <n> |]|)
}

