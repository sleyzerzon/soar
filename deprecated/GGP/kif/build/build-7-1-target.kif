;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * mini-Build Transfer Problem: Level 7, Scenario 1 -- Tower              *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: August    29, 2007                                          *
;;;; * Revised:   September 28, 2007                                          *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a tower 9 units high by first constructing an arch 5 units
;;;;   high, then stacking blocks on top of it.  Note: the material-type, 
;;;;   object names, sizes, strengths and weights of the objects has changed 
;;;;   from the source.
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (reinforce w1 steel-plate)
;;;;   (reinforce w2 steel-plate)
;;;;   (stack w1 w3)
;;;;   (stack w2 w4)
;;;;   (stack w3 w5)
;;;;   (stack w5 w6)
;;;;   (stack w6 w7)
;;;;
;;;; Visualization of the initial state:
;;;; 5
;;;; 4             W]
;;;; 3       W]W]  6]
;;;; 2 W]  W]3]4]  W]
;;;; 1 1]  2][-W5-]7]
;;;; 0 ++++++g1++++++
;;;;   01234567890123
;;;;
;;;; Visualization of the final state:
;;;; 0
;;;; 9 W]
;;;; 8 7]
;;;; 7 W]
;;;; 6 6]
;;;; 5 [-W5-]
;;;; 4 W]  W]
;;;; 3 3]  4]
;;;; 2 W]  W]
;;;; 1 1]  2]  
;;;; 0 +++++++g1+++++
;;;;   01234567890123

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state.
;;;             These will not change during the game.

(max-movable-weight 100)
(max-time 10)

;;; (material-type ?type)
(material-type ground)
(material-type balsa)
(material-type ebony)
(material-type maple)
(material-type oak)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type steel-plate ebony)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties steel-plate 2 2)

;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (time 0))

(init (count steel-plate 5))

(init (object-type g1 ground))
(init (object-type w1 ebony))
(init (object-type w2 ebony))
(init (object-type w3 maple))
(init (object-type w4 maple))
(init (object-type w5 oak))
(init (object-type w6 balsa))
(init (object-type w7 balsa))

(init (object-dimensions g1 16 1))
(init (object-dimensions w1 2 2))
(init (object-dimensions w2 2 2))
(init (object-dimensions w3 2 2))
(init (object-dimensions w4 2 2))
(init (object-dimensions w5 6 1))
(init (object-dimensions w6 2 2))
(init (object-dimensions w7 2 2))

(init (object-location g1 0 0))
(init (object-location w1 0 1))
(init (object-location w2 4 1))
(init (object-location w3 6 2))
(init (object-location w4 8 2))
(init (object-location w5 6 1))
(init (object-location w6 12 3))
(init (object-location w7 12 1))

(init (object-load g1 328))
(init (object-load w1 0))
(init (object-load w2 0))
(init (object-load w3 0))
(init (object-load w4 0))
(init (object-load w5 60))
(init (object-load w6 0))
(init (object-load w7 4))

(init (object-strength g1 1000))
(init (object-strength w1 50))
(init (object-strength w2 50))
(init (object-strength w3 40))
(init (object-strength w4 40))
(init (object-strength w5 90))
(init (object-strength w6 10))
(init (object-strength w7 10))

(init (object-weight g1 1000))
(init (object-weight w1 100))
(init (object-weight w2 100))
(init (object-weight w3 30))
(init (object-weight w4 30))
(init (object-weight w5 60))
(init (object-weight w6 4))
(init (object-weight w7 4))

(init (tower c3 3))
(init (tower c4 3))
(init (tower c6 4))


;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (true (arch ?tower1 ?tower2 ?span 5))
    (true (tower ?tower 9))
    (not structural-failure))

(<= (goal agent 0)
    (collapsed ?object))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) Maximum time-step reached

(<= terminal
    (true (arch ?tower1 ?tower2 ?span 5))
    (true (tower ?tower 9)))

(<= terminal
    (collapsed ?object))

(<= terminal
    (true (time ?t))
    (max-time ?t))

;;; ---------------------------------------------------------------------------
;;; END build-7-1-targetX.kif
