# TASKS

#smem --add {
#   (<task01> ^type task
#             ^object <object01>
#             ^destination <dest01>)
#   (<object01> ^color green
#               ^type block)
#   (<dest01> ^id 3)
#}

sp {interrupt
   (state <s> ^operator.name recursive-retrieve)
-->
   #(interrupt)
}

# DELIVERY PROBLEM SPACE

sp {robot*propose*delivery
   (state <s> ^name robot
             -^io.input-link.self.area -1
              ^current-mission <cm>)
   (<cm> ^name delivery
         ^status executing)
-->
   (<s> ^operator <op> + =)
   (<op> ^name delivery)
}

# ELABORATIONS

# tasks

sp {delivery*elaborate
   (state <s> ^name delivery
              ^top-state <ts>)
   (<ts> ^tasks <tasks>)
-->
   (<s> ^tasks <tasks>)
}

# PREFERENCES

sp {delivery*compare*pickup*putdown
   (state <s> ^name delivery
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name pickup-block)
   (<o2> ^name move-to-room-center)
-->
   (<s> ^operator <o2> > <o1>)
}

# OPERATORS

# retrieve-all-tasks

sp {delivery*propose*retrieve-all-tasks
   (state <s> ^name delivery
             -^top-state.all-tasks-retrieved
              ^tasks)
-->
   (<s> ^operator <op> + = >)
   (<op> ^name retrieve-all-tasks)
}

sp {delivery*apply*retrieve-all-tasks*first-query
   (state <s> ^operator.name retrieve-all-tasks
              ^smem.command <scmd>)
-->
   (<scmd> ^query.type task)
}

sp {delivery*apply*retrieve-all-tasks*next-query
   (state <s> ^operator.name retrieve-all-tasks
              ^smem <smem>
              ^tasks <tasks>)
   (<smem> ^command <scmd>
           ^result <sres>)
   (<sres> ^success
           ^retrieved <task>)
-->
   (<tasks> ^task <task>)
   (<scmd> ^prohibit <task>)
}

sp {delivery*apply*retrieve-all-tasks*done
   (state <s> ^operator.name retrieve-all-tasks
              ^smem <smem>
              ^top-state <ts>)
   (<smem> ^command <scmd>
           ^result.failure)
   (<scmd> ^{<cmd> << query prohibit >>} <arg>)
-->
   (<scmd> ^<cmd> <arg> -)
   (<ts> ^all-tasks-retrieved yes)
}

# store-task

# recursive-retrieve

sp {delivery*propose*recursive-retrieve*ecological-doors
   (state <s> ^name delivery
              ^top-state <ts>
              ^tasks.task <lti>)
   (<ts> ^parameters <params>
         ^current-location.type door)
   (<params> ^tasks-held-in smem
             ^method-ecological-doors yes)
   (<task> -^all-retrieved)
-->
   (<s> ^operator <op> + = >)
   (<op> ^name recursive-retrieve
         ^lti <lti>)
}

#sp {delivery*propose*recursive-retrieve*ecological-entry
# FIXME this rule will fire anytime the agent is in a room
# need to be more discriminatory than this
#   (state <s> ^name delivery
#              ^top-state <ts>
#              ^tasks.task <task>)
#   (<ts> ^parameters <params>
#         ^current-location.type door)
#   (<params> ^tasks-held-in smem
#             ^method-ecological-entry yes)
#   (<task> -^<< object destination >>.<attr>)
#-->
#   (<s> ^operator <op> + = >)
#   (<op> ^name recursive-retrieve
#         ^task <task>)
#}

sp {recursive-retrieve*propose*initialize
   (state <s> ^name recursive-retrieve
             -^to-be-retrieved
             -^retrieved)
-->
   (<s> ^operator <op> + = >)
   (<op> ^name initialize)
}

sp {recursive-retrieve*apply*initialize
   (state <s> ^name recursive-retrieve
              ^operator.name initialize
              ^superstate.operator.lti <lti>)
-->
   (<s> ^to-be-retrieved.lti <lti>
        ^retrieved <retrieved>)
}

sp {recursive-retrieve*propose*retrieve
   (state <s> ^name recursive-retrieve
              ^to-be-retrieved.lti <lti>)
-->
   (<s> ^operator <op> + = >)
   (<op> ^name retrieve
         ^lti <lti>)
}

sp {recursive-retrieve*apply*retrieve*retrieve
   (state <s> ^name recursive-retrieve
              ^operator <op>
              ^smem.command <scmd>
             -^retrieved.lti <lti>)
   (<op> ^name retrieve
         ^lti <lti>)
-->
   (<scmd> ^retrieve <lti>)
}

sp {recursive-retrieve*apply*retrieve*copy-children
   (state <s> ^name recursive-retrieve
              ^operator <op>
              ^smem.result.retrieved <lti>
              ^to-be-retrieved <to-be-retrieved>
              ^retrieved <retrieved>)
   (<op> ^name retrieve
         ^lti <lti>)
   (<lti> ^<attr> <val>)
   (<retrieved> -^lti <val>)
-->
   (<to-be-retrieved> ^lti <val>)
}

sp {recursive-retrieve*apply*retrieve*remove-command
   (state <s> ^name recursive-retrieve
              ^operator <op>
              ^smem <smem>
              ^to-be-retrieved <to-be-retrieved>
              ^retrieved <retrieved>)
   (<op> ^name retrieve
         ^lti <lti>)
   (<smem> ^command <scmd>
           ^result.<< success failure bad-cmd >>)
   (<scmd> ^retrieve <lti>)
   (<to-be-retrieved> ^lti <lti>)
-->
   (<scmd> ^retrieve <lti> -)
   (<to-be-retrieved> ^lti <lti> -)
   (<retrieved> ^lti <lti>)
}

sp {recursive-retrieve*propose*done
   (state <s> ^name recursive-retrieve
             -^to-be-retrieved.lti
              ^retrieved.lti)
-->
   (<s> ^operator <op> + = >)
   (<op> ^name done)
}

sp {recursive-retrieve*apply*done
   (state <s> ^name recursive-retrieve
              ^operator.name done
              ^superstate.operator.lti <lti>)
-->
   (<lti> ^all-retrieved yes)
}

# pick up

sp {delivery*propose*pickup-block
   (state <s> ^name delivery
              ^io.input-link.objects.object <obj>
              ^tasks.task <task>)
   (<task> ^object <desc>)
   (<obj> ^id <id>)
   # check that the object has not been forgotten
   (<desc> ^<attr>)
   # check that the object is right for the task
  -{ (<desc> ^<attr> <val>)
    -(<obj> ^<attr> <val>) }
-->
   (<s> ^operator <op> + = >)
   (<op> ^name pickup-block
         ^task <task>
         ^id <id>)
}

sp {delivery*apply*pickup-block*store-object-id
   (state <s> ^name delivery
              ^operator <op>)
   (<op> ^name pickup-block
         ^task <task>
         ^id <id>)
   (<task> -^object-id)
-->
   (<task> ^object-id <id>)
}

# put down

sp {delivery*propose*move-to-room-center
   (state <s> ^name delivery
              ^io.input-link.self.carry.object.id <id>
              ^top-state.current-location <room>
              ^tasks.task <task>)
   (<task> ^object-id <id>
           ^destination <dest>)
   # check that the destination has not been forgotten
   (<dest> ^<attr>)
   # check that we are in the right location
  -{ (<dest> ^<attr> <val>)
    -(<room> ^<attr> <val>) }
-->
   (<s> ^operator <op> + = >)
   (<op> ^name move-to-room-center
         ^object <obj>)
}

sp {move-to-room-center*apply*drop-block*complete-task
   (state <s> ^name move-to-room-center
              ^operator <op>
              ^superstate <ss>)
   (<op> ^name drop-block
         ^actions.drop-object.id <id>)
   (<ss> ^name delivery
         ^operator.object <obj>
         ^tasks <tasks>)
   (<tasks> ^task <task>)
   (<task> ^object <obj>)
   (<obj> ^id <id>)
-->
   (<tasks> ^task <task> -)
}

# patrol

sp {delivery*propose*patrol
   (state <s> ^name delivery)
-->
   (<s> ^operator <op> + = <)
   (<op> ^name patrol
         ^first-area <a01>)
   (<a01> ^next <a02>
          ^id 20)
   (<a02> ^next <a03>
          ^id 25)
   (<a03> ^next <a04>
          ^id 30)
   (<a04> ^next <a05>
          ^id 35)
   (<a05> ^next <a06>
          ^id 40)
   (<a06> ^next <a07>
          ^id 45)
   (<a07> ^next <a08>
          ^id 0)
   (<a08> ^next <a09>
          ^id 5)
   (<a09> ^next <a10>
          ^id 10)
   (<a10> ^next nil
          ^id 15)
}

# goto-unvisited-area

sp {delivery*propose*goto-unvisited-area*wm
   (state <s> ^name delivery
              ^top-state.parameters.areas-held-in wm
              ^top-state.areas.area <area>)
   (<area> -^visited yes
            ^id <id>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name goto-unvisited-area
         ^type go-to-area
         ^area <area>)
}

sp {delivery*propose*goto-unvisited-area*smem
   (state <s> ^name get-object
              ^top-state <ts>)
   (<ts> -^all-visited true
          ^top-state.parameters.areas-held-in smem)
-->
   (<s> ^operator <op> + =)
   (<op> ^name goto-unvisited-area
         ^type go-to-area
         ^storage-area no)
}

sp {delivery*propose*goto-unvisited-area*elaborate*connected-direct
   (state <s> ^name delivery
              ^current-location.neighbor-area <area>
              ^top-state.parameters.search-control-go-to-gateway yes
              ^operator <op> +)
   (<op> ^name goto-unvisited-area
         ^area <area>)
-->
   (<op> ^connected yes)
}

sp {delivery*propose*goto-unvisited-area*elaborate*connected-gateway
   (state <s> ^name delivery
              ^current-location.gateway.to <id>
              ^top-state.parameters.search-control-go-to-gateway yes
              ^operator <op> +)
   (<op> ^name goto-unvisited-area
         ^area.id <id>)
-->
   (<op> ^connected yes)
}

sp {delivery*compare*go-to-unvisited-area*connected
   (state <s> ^name delivery
              ^operator <op1> +
              ^operator <op2> +)
   (<op1> ^name goto-unvisited-area
          ^connected yes)
   (<op2> ^name goto-unvisited-area
         -^connected yes)
-->
   (<s> ^operator <op1> > <op2>)
}
