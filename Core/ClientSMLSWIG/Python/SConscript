#!/usr/bin/python
# Project: Soar <http://soar.googlecode.com>
# Author: Jonathan Voigt <voigtjr@gmail.com>
#
import distutils.sysconfig as sysconfig
import os, sys
import SCons.Script

Import('env')
clone = env.Clone()
clone['SWIGPATH'] = clone['CPPPATH']
clone['SWIGFLAGS'] = ['-c++', '-python']

lib_install_dir = clone['OUT_DIR']
inc_path = sysconfig.get_python_inc()
if os.name == 'nt':
	lib_path = os.path.join(sysconfig.get_config_vars('BINDIR')[0], 'libs')
	pylib = 'python' + sysconfig.get_config_vars('VERSION')[0]
else:
	lib_path = sysconfig.get_config_vars('LIBP')[0]
	pylib = sysconfig.get_config_vars('LIBRARY')[0]

clone.Append(CPPPATH = inc_path, LIBPATH = lib_path, LIBS = pylib)

if os.name == 'posix':
	clone.Append(CPPFLAGS = Split('-Wno-unused -fno-strict-aliasing'))

if sys.platform == 'darwin':
	clone.Replace(SHLINKFLAGS = Split('$LINKFLAGS -bundle -flat_namespace -undefined suppress'))
	clone.Replace(SHLIBSUFFIX = ['.so'])
	# As of 4/2009, python binaries available on mac are not x86_64 and
	# therefore cannot load x86_64 targeted libraries. Verbosely warn.
	if GetOption('platform') == '64':
		print "* Warning: 64-bit python binaries may not be available on your system."
		print "* You may need to rebuild with m64=no to use Python Soar bindings."

name = 'Python_sml_ClientInterface'
interface = env.File(name + '.i')
source = env.File(name + '.py')

if os.name == 'nt':
	# the [:1] at the end throws away the .exp and .lib files that are generated
	shlib = clone.SharedLibrary(name, interface, SHLIBPREFIX = '_', SHLIBSUFFIX = '.pyd')[:1]
else:
	shlib = clone.SharedLibrary(name, interface, SHLIBPREFIX = '_') 
install_source = env.Install(lib_install_dir, source)
install_lib = env.Install(lib_install_dir, shlib)

env.Alias('sml_python', install_lib + install_source)
