echo "\nLoading attack/shoot-and-duck/stage-3-slide-back"



### if time-stamp is not current, wait
### Also, create another manuever info struct for next turn
sp {propose*shoot-and-duck*stage-three*wait
   (state <s> ^name attack*shoot-and-duck
              ^io.input-link <il>
              ^status <st>)
   (<st> ^manuever <man>)
   (<man> ^action slide-back
          ^delay <del>
          ^direction <dir>)
   (<il> ^clock < <del>)
-->
   (<s> ^operator <o> + =,>)
   (<o> ^name shoot-and-duck-stage-3-wait
        ^radar.switch on
        ^delay <del>
        ^direction <dir>)
#   (write (crlf) |Waiting to slide-back|)
}


### if timestamp == current time
### pop-back around corner, guns blazing!
sp {propose*shoot-and-duck*stage-three*slide-back
   (state <s> ^name attack*shoot-and-duck
              ^io.input-link <il>
              ^status.manuever <man>)
   (<man> ^action slide-back
          ^direction <dir>
          ^delay <del>)
   (<il> ^clock >= <del>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name shoot-and-duck-3-slide-back
        ^actions <a>)
   (<a> ^move.direction <dir>
        ^fire.weapon missile
        ^shields.switch on)  ## may be moving into fire
#                        (write (crlf) |slide-back-shields-on|)
}


### increment manuever state w/ o-support
sp {update*shoot-and-duck*stage-three-wait
:o-support
(state <s> ^operator <o>
           ^status <st>
           ^io.input-link.clock <ck>)
(<o> ^name shoot-and-duck-stage-3-wait
     ^delay <del>
     ^direction <dir>)
-->
   (<st> ^manuever <man>)
   (<man> ^action slide-back
          ^time (+ 1 <ck>)
          ^direction <dir>
          ^delay <del>)
}




