echo "\nLoading wander/turn.soar "

################################
### Propose Turn operator if blocked
################################

sp {wander*propose*turn
   (state <s> ^name wander
              ^io.input-link.blocked <b>
              ^superstate <ss>)
   (<ss> -^need-energy *yes*
         -^need-health *yes*)
   (<b> ^forward yes
        ^ { << left right >> <tdir> } no)
-->
   (<s> ^operator <o> + =, >)
   (<o> ^name turn
        ^actions.rotate.direction <tdir>)}

sp {wander*propose*turn*backward
   (state <s> ^name wander
              ^io.input-link.blocked <b>)
   (<b> ^forward yes 
        ^left yes 
        ^right yes)
-->
   (<s> ^operator <o> + =, >)
   (<o> ^name turn
        ^actions.rotate.direction left)}

sp {wander*propose*turn*random
   (state <s> ^name wander
              ^io.input-link <il>
              ^superstate <ss>)
   (<il> ^blocked <b>
         ^direction <dir>
         ^random < .6)
   (<ss> -^need-energy *yes*
         -^need-health *yes*
         -^turned-at <sq>
          ^square <sq>
          ^direction-map.<dir>.<tdir> <ndir>)
   (<sq> ^<dir>.<ndir>.obstacle *yes*) ;# doorway
   (<b> ^forward no
        ^ { << left right >> <tdir> } no)
-->
   (<s> ^operator <o> + =, >)
   (<o> ^name turn
        ^actions.rotate.direction <tdir>)}

sp {wander*apply*record*turned-at
   (state <s> ^name wander
              ^superstate <ss>
              ^io.output-link.radar
              ^operator.actions.rotate)
   (<ss> ^square <sq>)
-->
   (<ss> ^turned-at <sq>)}

