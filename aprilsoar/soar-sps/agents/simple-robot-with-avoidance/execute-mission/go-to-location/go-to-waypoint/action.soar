# propose the action associated with each unblocked arc
sp {go-to-waypoint*propose*action
   (state <s> ^name go-to-waypoint
              ^destination-in-front true
              ^io.input-link.ranges.range <r>)
   (<r> ^blocked false
        ^action <a>
        ^angular-distance <d>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name action
         ^action <a>
         ^angular-distance <d>)
   (<a> ^purpose slight-turn-around-obstacle)
}

# prefer actions associated with closer arcs
sp {go-to-waypoint*compare*action
   (state <s> ^name go-to-waypoint
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name action
          ^angular-distance <d>)
   (<op2> ^name action
        - ^angular-distance <= <d>)
-->
   (<s> ^operator <op1> > <op2>)
}

############################################
# if all arcs are blocked, propose turning left

sp {go-to-waypoint*propose*turn-left
   (state <s> ^name go-to-waypoint
              ^destination-in-front true
              ^io.input-link.ranges <rs>)
  -(<rs> ^range.blocked false)
-->
   (<s> ^operator <op> + =)
   (<op> ^name action
         ^action <a>)
   (<a> ^rotate <params>
        ^purpose large-turn-around-obstacle)
   (<params> ^direction left)
   (write (crlf) |all arcs blocked (or missing), so rotating left until not blocked|)
  # (interrupt)
}

sp {goto-waypoint*apply*action*record*purpose
   (state <s> ^top-state.destination-waypoint <dw>
              ^operator <op>)
   (<op> ^name action
         ^action.purpose <purpose>)
-->
   (<dw> ^last-action-purpose <purpose>)
}

################################################

sp {apply*action*rotate*right
   (state <s> ^operator <op>
              ^parameters.rotation-velocity <thr>
              ^io.output-link <ol>)
   (<op> ^name action
         ^action <a>)
   (<a> ^rotate <params>)
   (<params> ^direction right)
-->
  # (interrupt)
   (<ol> ^set-velocity <acopy>)
   (<acopy> ^angular-velocity (- 0 <thr>)
            ^linear-velocity 0)
}


sp {apply*action*rotate*left
   (state <s> ^operator <op>
              ^parameters.rotation-velocity <thr>
              ^io.output-link <ol>)
   (<op> ^name action
         ^action <a>)
   (<a> ^rotate <params>)
   (<params> ^direction left)
-->
 #  (interrupt)
   (<ol> ^set-velocity <acopy>)
   (<acopy> ^angular-velocity <thr>
            ^linear-velocity 0)
}

sp {apply*action*move
   (state <s> ^operator <op>
              ^parameters.linear-velocity <thr>
              ^io.output-link <ol>)
   (<op> ^name action
         ^action <a>)
   (<a> ^move <params>)
   (<params> ^direction <dir>)
-->
   (<ol> ^set-velocity <acopy>)
   (<acopy> ^angular-velocity 0
            ^linear-velocity <thr>)
}
sp {monitor*action*move
   (state <s> ^operator.action <a>
              ^parameters.linear-velocity <thr>)
   (<a> ^move <p>)
   (<p> ^direction <d>)
-->
   (write (crlf) |move | <d> | at | <thr>)
}
sp {monitor*action*rotate
   (state <s> ^operator.action <a>
              ^parameters.rotation-velocity <thr>)
   (<a> ^rotate <p>)
   (<p> ^direction <d>)
-->
   (write (crlf) |rotate | <d> | at | <thr>)
}

# # Original actions
#sp {apply*action*rotate
#   (state <s> ^operator <op>
#              ^parameters.rotation-velocity <thr>
#              ^io.output-link <ol>)
#   (<op> ^name action
#         ^action <a>)
#   (<a> ^rotate <params>)
#   (<params> ^direction <dir>)
#-->
#   (<ol> ^rotate <acopy>)
#   (<acopy> ^direction <dir>
#            ^linear-velocity <thr>)
#}
#
#
#sp {apply*action*move
#   (state <s> ^operator <op>
#              ^parameters.linear-velocity <thr>
#              ^io.output-link <ol>)
#   (<op> ^name action
#         ^action <a>)
#   (<a> ^move <params>)
#   (<params> ^direction <dir>)
#-->
#   (<ol> ^move <acopy>)
#   (<acopy> ^direction <dir>
#            ^linear-velocity <thr>)
#}
#sp {monitor*action*move
#   (state <s> ^operator.action <a>
#              ^parameters.linear-velocity <thr>)
#   (<a> ^move <p>)
#   (<p> ^direction <d>)
#-->
#   (write (crlf) |move | <d> | at | <thr>)
#}
#sp {monitor*action*rotate
#   (state <s> ^operator.action <a>
#              ^parameters.rotation-velocity <thr>)
#   (<a> ^rotate <p>)
#   (<p> ^direction <d>)
#-->
#   (write (crlf) |rotate | <d> | at | <thr>)
#}
