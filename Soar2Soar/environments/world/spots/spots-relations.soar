sp {spots*propose*spots-relations
   (state <s> ^name spots
              ^task relations
              ^x <x>
              ^y <y>
              ^grid.spot <spot>)
   (<spot> ^x <x>
           ^y <y>
          -^left
          -^right
          -^up
          -^down)
-->
   (<s> ^operator <op> + >)
   (<op> ^name spots-relations)
}

sp {apply*spots-relations*left
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^prev-x <p-x>
              ^grid <grid>)
   (<grid> ^spot <me> <left>)
   (<me> ^x <x>
         ^y <y>)
   (<left> ^x <p-x>
           ^y <y>)
   (<op> ^name spots-relations)
-->
   (<me> ^left <left>)
}

sp {apply*spots-relations*left*nil
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^prev-x <p-x>
              ^grid <grid>)
  -{(<grid> ^spot <left>)
    (<left> ^x <p-x>
            ^y <y>)}
   (<grid> ^spot <me>)
   (<me> ^x <x>
         ^y <y>)
   (<op> ^name spots-relations)
-->
   (<me> ^left nil)
}

sp {apply*spots-relations*right
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^next-x <n-x>
              ^grid <grid>)
   (<grid> ^spot <me> <right>)
   (<me> ^x <x>
         ^y <y>)
   (<right> ^x <n-x>
            ^y <y>)
   (<op> ^name spots-relations)
-->
   (<me> ^right <right>)
}

sp {apply*spots-relations*right*nil
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^next-x <n-x>
              ^grid <grid>)
  -{(<grid> ^spot <right>)
    (<right> ^x <n-x>
             ^y <y>)}
   (<grid> ^spot <me>)
   (<me> ^x <x>
         ^y <y>)
   (<op> ^name spots-relations)
-->
   (<me> ^right nil)
}

sp {apply*spots-relations*up
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^prev-y <p-y>
              ^grid <grid>)
   (<grid> ^spot <me> <up>)
   (<me> ^x <x>
         ^y <y>)
   (<up> ^x <x>
         ^y <p-y>)
   (<op> ^name spots-relations)
-->
   (<me> ^up <up>)
}

sp {apply*spots-relations*up*nil
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^prev-y <p-y>
              ^grid <grid>)
  -{(<grid> ^spot <up>)
    (<up> ^x <x>
          ^y <p-y>)}
   (<grid> ^spot <me>)
   (<me> ^x <x>
         ^y <y>)
   (<op> ^name spots-relations)
-->
   (<me> ^up nil)
}

sp {apply*spots-relations*down
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^next-y <n-y>
              ^grid <grid>)
   (<grid> ^spot <me> <down>)
   (<me> ^x <x>
         ^y <y>)
   (<down> ^x <x>
           ^y <n-y>)
   (<op> ^name spots-relations)
-->
   (<me> ^down <down>)
}

sp {apply*spots-relations*down*nil
   (state <s> ^operator <op>
              ^x <x>
              ^y <y>
              ^next-y <n-y>
              ^grid <grid>)
  -{(<grid> ^spot <down>)
    (<down> ^x <x>
            ^y <n-y>)}
   (<grid> ^spot <me>)
   (<me> ^x <x>
         ^y <y>)
   (<op> ^name spots-relations)
-->
   (<me> ^down nil)
}
