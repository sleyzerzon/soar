/* Auto-generated by gen_cli_help.sh */
#include <map>
#include <portability.h>
#include "cli_CommandLineInterface.h"

using namespace cli;
using namespace sml;

std::map<std::string, const char*> docstrings;

void initdocstrings();

bool CommandLineInterface::DoHelp(const std::vector<std::string> &argv) {
	std::map<std::string, const char*>::iterator i;
	
	if (docstrings.size() == 0) {
		initdocstrings();
	}
	
	if (argv.size() == 1) {
		m_Result << "Available commands:" << std::endl << std::endl;
		for (i = docstrings.begin(); i != docstrings.end(); ++i) {
			m_Result << i->first << std::endl;
		}
	} else {
		if ((i = docstrings.find(argv[1])) == docstrings.end()) {
			m_Result << "No such command" << std::endl;
			return false;
		}
		m_Result << i->second;
	}
	return true;
}

void initdocstrings() {
	docstrings["add-wme"] = 
		"Manually add an element to working memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  add-wme id [^]attribute value [+]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"aw add-wme\n"
		"\n"
		"Options\n"
		"\n"
		"id        Must be an existing identifier.\n"
		"^         Leading ^ on attribute is optional.\n"
		"attribute Attribute can be any Soar symbol. Use * to have Soar create a new\n"
		"          identifier.\n"
		"value     Value can be any soar symbol. Use * to have Soar create a new\n"
		"          identifier.\n"
		"+         If the optional preference is specified, its value must be +\n"
		"          (acceptable).\n"
		"\n"
		"Description\n"
		"\n"
		"Manually add an element to working memory. add-wme is often used by an input\n"
		"function to update Soar's information about the state of the external\n"
		"world.\n"
		"add-wme adds a new wme with the given id, attribute, value and optional\n"
		"preference. The given id must be an existing identifier. The attribute and\n"
		"value fields can be any Soar symbol. If * is given in the attribute or value\n"
		"field, Soar creates a new identifier (symbol) for that field. If the preference\n"
		"is given, it can only have the value + to indicate that an acceptable\n"
		"preference should be created for this wme.\n"
		"Note that because the id must already exist in working memory, the WME that you\n"
		"are adding will be attached (directly or indirectly) to the top-level state. As\n"
		"with other WME's, any WME added via a call to add-wme will automatically\n"
		"be removed from working memory once it is no longer attached to the top-level\n"
		"state.\n"
		"\n"
		"Examples\n"
		"\n"
		"This example adds the attribute/value pair ^message-status received to the\n"
		"identifier (symbol) S1:\n"
		"\n"
		"  add-wme S1 ^message-status received\n"
		"\n"
		"This example adds an attribute/value pair with an acceptable preference to the\n"
		"identifier (symbol) Z2. The attribute is message and the value is a unique\n"
		"identifier generated by Soar. Note that since the ^ is optional, it has been\n"
		"left off in this case.\n"
		"\n"
		"  add-wme Z2 message * +\n"
		"\n"
		"Warnings\n"
		"\n"
		"Be careful how you use this command. It may have weird side effects (possibly\n"
		"even including system crashes). For example, the chunker can't backtrace\n"
		"through wmes created via add-wme nor will such wmes ever be removed thru\n"
		"Soar's garbage collection. Manually removing context/impasse wmes may have\n"
		"unexpected side effects.\n"
		"\n"
		"See Also\n"
		"\n"
		"remove-wme\n"
	;
	docstrings["alias"] = 
		"Define a new alias, or command, using existing commands and arguments.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  alias [name [cmd [args]]]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"a alias\n"
		"\n"
		"Description\n"
		"\n"
		"This command defines new aliases by creating Soar procedures with the given\n"
		"name. The new procedure can then take an arbitrary number of arguments which\n"
		"are post-pended to the given definition and then that entire string is executed\n"
		"as a command. The definition must be a single command, multiple commands are\n"
		"not allowed. The alias procedure checks to see if the name already exists, and\n"
		"does not destroy existing procedures or aliases by the same name. Existing\n"
		"aliases can be removed by using the unalias command. With no arguments, alias\n"
		"returns the list of defined aliases. With only the name given, alias returns\n"
		"the current definition.\n"
		"\n"
		"Examples\n"
		"\n"
		"The alias wmes is defined as:\n"
		"\n"
		"  alias wmes print -i\n"
		"\n"
		"If the user executes a command such as:\n"
		"\n"
		"  wmes {(* ^superstate nil)}\n"
		"\n"
		"... it is as if the user had typed this command:\n"
		"\n"
		"  print -i {(* ^superstate nil)}\n"
		"\n"
		"To check what a specific alias is defined as, you would type\n"
		"\n"
		"  alias wmes\n"
		"\n"
		"See Also\n"
		"\n"
		"unalias\n"
	;
	docstrings["allocate"] = 
		"Allocate additional 32 kilobyte blocks of memory for a specified memory pool\n"
		"without running Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  allocate [pool blocks]\n"
		"\n"
		"Description\n"
		"\n"
		"Soar allocates blocks of memory for its memory pools as it is needed during a\n"
		"run (or during other actions like loading productions). Unfortunately, this\n"
		"behavior translates to an increased run time for the first run of a memory-\n"
		"intensive agent. To mitigate this, blocks can be allocated before a run by\n"
		"using this command.\n"
		"Issuing the command with no parameters lists current pool usage, exactly like\n"
		"stats command's memory flag.\n"
		"Issuing the command with part of a pool's name and a positive integer will\n"
		"allocate that many additional blocks for the specified pool. Only the first few\n"
		"letters of the pool's name are necessary. If more than one pool starts\n"
		"with the given letters, which pool will be chosen is unspecified.\n"
		"Memory pool block size in this context is approximately 32 kilobytes, the exact\n"
		"size determined during agent initialization.\n"
		"\n"
		"See Also\n"
		"\n"
		"stats\n"
	;
	docstrings["capture-input"] = 
		"Store the input wmes in a file for reloading later.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  capture-input --open filename [--flush]\n"
		"  capture-input [--query]\n"
		"  capture-input --close\n"
		"\n"
		"Options\n"
		"\n"
		"filename    Open filename and begin recording input.\n"
		"-o, --open  Writes captured input to file overwriting any existing data.\n"
		"-f, --flush Writes input to file as soon as it is encountered instead of\n"
		"            storing it in RAM and writing when capturing is turned off.\n"
		"-q, --query Returns open if input capturing is active or closed if capturing is\n"
		"            not active.\n"
		"-c, --close Stop capturing input and close the file, writing captured input\n"
		"            unless the flush option is given.\n"
		"\n"
		"Description\n"
		"\n"
		"Save agent commands issued from the input cycle function in a file for\n"
		"reloading later.\n"
		"This command may be used to start and stop the recording of input function\n"
		"commands as created by an external simulation. Commands are recorded decision\n"
		"cycle by decision cycle. Use the command [cmd_replay_input replay-input] to\n"
		"replay the sequence.\n"
		"Note that this command seeds the random number generator and writes the seed to\n"
		"the capture file.\n"
		"\n"
		"See Also\n"
		"\n"
		"replay-input\n"
	;
	docstrings["cd"] = 
		"Change directory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  cd [directory]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"chdir cd\n"
		"\n"
		"Options\n"
		"\n"
		"directory The directory to change to, can be relative or full path.\n"
		"\n"
		"Description\n"
		"\n"
		"Change the current working directory. If run with no arguments, returns to the\n"
		"directory that the command line interface was started in, often referred to as\n"
		"the home directory.\n"
		"\n"
		"Examples\n"
		"\n"
		"To move to the relative directory named ../home/soar/agents:\n"
		"\n"
		"  cd ../home/soar/agents\n"
		"\n"
		"See Also\n"
		"\n"
		"dirs home ls pushd popd source pwd\n"
	;
	docstrings["chunk-name-format"] = 
		"Specify format of the name to use for new chunks.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  chunk-name-format [-sl] -p [prefix]\n"
		"  chunk-name-format [-sl] -c [count]\n"
		"\n"
		"Options\n"
		"\n"
		"-s, --short      Use the short format for naming chunks\n"
		"-l, --long       Use the long format for naming chunks (default)\n"
		"-p, --prefix [p] If given, use p as the prefix for naming chunks. Otherwise,\n"
		"                 return the current prefix. (defaults to chunk)\n"
		"-c, --count [c]  If given, set the chunk counter for naming chunks to c.\n"
		"                 Otherwise, return the current value of the chunk counter.\n"
		"\n"
		"Description\n"
		"\n"
		"The short format for naming newly-created chunks is:\n"
		"\n"
		"  <prefix><chunknum>\n"
		"\n"
		"The long (default) format for naming chunks is:\n"
		"\n"
		"  <prefix>-<chunknum>*<dc>*<impassetype>*<dcChunknum>\n"
		"\n"
		"where:\n"
		"\n"
		"* prefix is a user-definable prefix string; prefix defaults to chunk when\n"
		"  unspecified by the user. It many not contain the character *,\n"
		"* chunknum is a counter set by --count or starting at 1 for the first chunk\n"
		"  created,\n"
		"* dc is the number of the decision cycle in which the chunk was formed,\n"
		"* impassetype is one of tie, conflict, cfailure, snochange, opnochange,\n"
		"* dcChunknum is the number of the chunk within that specific decision cycle.\n"
	;
	docstrings["clog"] = 
		"Record all user-interface input and output to a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  clog -[Ae] filename\n"
		"  clog -a string\n"
		"  clog [-cdoq]\n"
		"\n"
		"Options\n"
		"\n"
		"filename                              Open filename and begin logging.\n"
		"-c, --close, -o, --off, -d, --disable Stop logging, close the file.\n"
		"-a, --add string                      Add the given string to the open log\n"
		"                                      file.\n"
		"-q, --query                           Returns open if logging is active or\n"
		"                                      closed if logging is not active.\n"
		"                                      Opens existing log file named filename\n"
		"-A, --append, -e, --existing          and logging is added at the end of the\n"
		"                                      file.\n"
		"\n"
		"Description\n"
		"\n"
		"The clog command allows users to save all user-interface input and output to a\n"
		"file. When Soar is logging to a file, everything typed by the user and\n"
		"everything printed by Soar is written to the file (in addition to the screen).\n"
		"Invoke clog with no arguments (or with -q) to query the current logging status.\n"
		"Pass a filename to start logging to that file (relative to the command line\n"
		"interface's home directory (see the home command)). Use the close option\n"
		"to stop logging.\n"
		"\n"
		"Examples\n"
		"\n"
		"To initiate logging and place the record in foo.log:\n"
		"\n"
		"  clog foo.log\n"
		"\n"
		"To append log data to an existing foo.log file:\n"
		"\n"
		"  clog -A foo.log\n"
		"\n"
		"To terminate logging and close the open log file:\n"
		"\n"
		"  clog -c\n"
		"\n"
		"Known Issues\n"
		"\n"
		"Does not log everything when structured output is selected.\n"
		"\n"
		"See also\n"
		"\n"
		"command-to-file\n"
	;
	docstrings["command-to-file"] = 
		"Dump the printed output and results of a command to a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  command-to-file [-a] filename command [args]\n"
		"\n"
		"Options\n"
		"\n"
		"-a, --append Append if file exists.\n"
		"filename     The file to log the results of the command to\n"
		"command      The command to log\n"
		"args         Arguments for command\n"
		"\n"
		"Description\n"
		"\n"
		"This command logs a single command. It is almost equivalent to opening a log\n"
		"using clog, running the command, then closing the log, the only difference is\n"
		"that input isn't recorded.\n"
		"Running this command while a log is open is an error. There is currently not\n"
		"support for multiple logs in the command line interface, and this would be an\n"
		"instance of multiple logs.\n"
		"This command echos output both to the screen and to a file, just like clog.\n"
		"\n"
		"See also\n"
		"\n"
		"clog\n"
	;
	docstrings["default-wme-depth"] = 
		"Set the level of detail used to print WMEs.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  default-wme-depth [depth]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"set-default-depth default-wme-depth\n"
		"\n"
		"Options\n"
		"\n"
		"depth A non-negative integer.\n"
		"\n"
		"Description\n"
		"\n"
		"The default-wme-depth command reflects the default depth used when working\n"
		"memory elements are printed (using the print). The default value is 1. When the\n"
		"command is issued with no arguments, default-wme-depth returns the current\n"
		"value of the default depth. When followed by an integer value, default-wme-\n"
		"depth sets the default depth to the specified value. This default depth can be\n"
		"overridden on any particular call to the print command by explicitly using the\n"
		"--depth flag, e.g. print --depth 10 args.\n"
		"By default, the print command prints objects in working memory, not just the\n"
		"individual working memory element. To limit the output to individual working\n"
		"memory elements, the --internal flag must also be specified in the print\n"
		"command. Thus when the print depth is 0, by default Soar prints the entire\n"
		"object, which is the same behavior as when the print depth is 1. But if --\n"
		"internal is also specified, then a depth of 0 prints just the individual WME,\n"
		"while a depth of 1 prints all WMEs which share that same identifier. This is\n"
		"true when printing timetags, identifiers or WME patterns.\n"
		"When the depth is greater than 1, the identifier links from the specified\n"
		"WME's will be followed, so that additional substructure is printed. For\n"
		"example, a depth of 2 means that the object specified by the identifier, wme-\n"
		"pattern, or timetag will be printed, along with all other objects whose\n"
		"identifiers appear as values of the first object. This may result in multiple\n"
		"copies of the same object being printed out. If --internal is also specified,\n"
		"then individuals WMEs and their timetags will be printed instead of the full\n"
		"objects.\n"
		"\n"
		"See Also\n"
		"\n"
		"print\n"
	;
	docstrings["dirs"] = 
		"List the directory stack.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  dirs\n"
		"\n"
		"Description\n"
		"\n"
		"This command lists the directory stack. Agents can move through a directory\n"
		"structure by pushing and popping directory names. The dirs command returns the\n"
		"stack.\n"
		"The command pushd places a new \"agent current directory\" on top of the\n"
		"directory stack and changes to it. The command popd removes the directory at\n"
		"the top of the directory stack and changes to the previous directory which now\n"
		"appears at the top of the stack.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd home ls pushd popd source pwd\n"
	;
	docstrings["echo"] = 
		"Print a string to the current output device.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  echo [--nonewline] [string]\n"
		"\n"
		"Options\n"
		"\n"
		"string          The string to print.\n"
		"-n, --nonewline Supress printing of the newline character\n"
		"\n"
		"Description\n"
		"\n"
		"This command echos the args to the current output stream. This is normally\n"
		"stdout but can be set to a variety of channels. If an arg is --nonewline then\n"
		"no newline is printed at the end of the printed strings. Otherwise a newline is\n"
		"printed after printing all the given args. Echo is the easiest way to add user\n"
		"comments or identification strings in a log file.\n"
		"\n"
		"Examples\n"
		"\n"
		"This example will add these comments to the screen and any open log file.\n"
		"\n"
		"  echo This is the first run with disks = 12\n"
		"\n"
		"See Also\n"
		"\n"
		"clog\n"
	;
	docstrings["echo-commands"] = 
		"Set whether or not commands are echoed to other connected debuggers.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  echo-commands [-yn]\n"
		"\n"
		"Options\n"
		"\n"
		"-n, --no  Do not echo commands.\n"
		"-y, --yes Do echo commands.\n"
		"\n"
		"Description\n"
		"\n"
		"Setting this on will echo typed commands to other connected debuggers.\n"
		"Otherwise, the output is displayed without the initiating command, and this can\n"
		"be confusing.\n"
	;
	docstrings["edit-production"] = 
		"Move focus in an editor to this production.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  edit-production production_name\n"
		"\n"
		"Options\n"
		"\n"
		"production_name The name of the production to edit.\n"
		"\n"
		"Description\n"
		"\n"
		"If an editor (currently limited to Visual Soar) is open and connected to Soar,\n"
		"this command causes the editor to open the file containing this production and\n"
		"move the cursor to the start of the production. If there is no editor connected\n"
		"to Soar, the command does nothing. In order to connect Visual Soar to Soar,\n"
		"launch Visual Soar and choose Connect from the Soar Runtime menu. Then open the\n"
		"Visual Soar project that you're working on. At that point, you're set\n"
		"up and edit-production will start to work.\n"
		"\n"
		"Examples\n"
		"\n"
		"  edit-production my*production*name\n"
		"\n"
		"See Also\n"
		"\n"
		"sp\n"
	;
	docstrings["excise"] = 
		"Delete Soar productions from production memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  excise production_name\n"
		"  excise options\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"ex excise\n"
		"\n"
		"Options\n"
		"\n"
		"-a, --all       Remove all productions from memory and perform an init-soar\n"
		"                command\n"
		"-c, --chunks    Remove all chunks (learned productions) and justifications from\n"
		"                memory\n"
		"-d, --default   Remove all default productions (:default) from memory\n"
		"-r, --rl        Excise Soar-RL rules\n"
		"-t, --task      Remove chunks, justifications, and user productions from memory\n"
		"-T, --templates Excise Soar-RL templates\n"
		"-u, --user      Remove all user productions (but not chunks or default rules)\n"
		"                from memory\n"
		"production_name Remove the specific production with this name.\n"
		"\n"
		"Description\n"
		"\n"
		"This command removes productions from Soar's memory. The command must be\n"
		"called with either a specific production name or with a flag that indicates a\n"
		"particular group of productions to be removed. Using the flag -a or --all also\n"
		"causes an init-soar.\n"
		"\n"
		"Examples\n"
		"\n"
		"This command removes the production my*first*production and all chunks:\n"
		"\n"
		"  excise my*first*production --chunks\n"
		"\n"
		"This removes all productions and does an [cmd_init_soar init-soar]:\n"
		"\n"
		"  excise --all\n"
		"\n"
		"See Also\n"
		"\n"
		"init-soar\n"
	;
	docstrings["explain-backtraces"] = 
		"Print information about chunk and justification backtraces.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  explain-backtraces [options] [prod_name]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"eb explain-backtraces\n"
		"\n"
		"Options\n"
		"\n"
		"prod_name       List all conditions and grounds for the chunk or justification.\n"
		"-c, --condition Explain why condition number n is in the chunk or\n"
		"                justification.\n"
		"-f, --full      Print the full backtrace for the named production\n"
		"\n"
		"Description\n"
		"\n"
		"This command provides some interpretation of backtraces generated during\n"
		"chunking.\n"
		"The two most useful variants are:\n"
		"\n"
		"  explain-backtraces prodname\n"
		"  explain-backtraces -c n prodname\n"
		"\n"
		"The first variant prints a numbered list of all the conditions for the named\n"
		"chunk or justification, and the ground which resulted in inclusion in the\n"
		"chunk/justification. A ground is a working memory element (WME) which was\n"
		"tested in the supergoal. Just knowing which WME was tested may be enough to\n"
		"explain why the chunk/justification exists. If not, the second variant, where n\n"
		"is the condition of interest, can be used to obtain a list of the productions\n"
		"which fired to obtain this condition in the chunk/justification (and the\n"
		"crucial WMEs tested along the way).\n"
		"save-backtraces mode must be on when a chunk or justification is created or no\n"
		"explanation will be available. Calling explain-backtraces with no argument\n"
		"prints a list of all chunks and justifications for which backtracing\n"
		"information is available.\n"
		"Use with no arguments to list all productions that can be \"explained.\"\n"
		"\n"
		"Examples\n"
		"\n"
		"Examining the chunk chunk-65*d13*tie*2 generated in a water-jug task:\n"
		"\n"
		"  soar> explain-backtraces chunk-65*d13*tie*2\n"
		"   (sp chunk-65*d13*tie*2\n"
		"    (state <s2> ^name water-jug ^jug <n4> ^jug <n3>)\n"
		"    (state <s1> ^name water-jug ^desired <d1> ^operator <o1> + ^jug <n1>\n"
		"          ^jug <n2>)\n"
		"    (<s2> ^desired <d1>)\n"
		"    (<o1> ^name pour ^into <n1> ^jug <n2>)\n"
		"    (<n1> ^volume 3 ^contents 0)\n"
		"    (<s1> ^problem-space <p1>)\n"
		"    (<p1> ^name water-jug)\n"
		"    (<n4> ^volume 3 ^contents 3)\n"
		"    (<n3> ^volume 5 ^contents 0)\n"
		"    (<n2> ^volume 5 ^contents 3)\n"
		"  -->\n"
		"    (<s3> ^operator <o1> -))\n"
		"   1 :  (state <s2> ^name water-jug)     Ground : (S3 ^name water-jug)\n"
		"   2 :  (state <s1> ^name water-jug)     Ground : (S5 ^name water-jug)\n"
		"   3 :  (<s1> ^desired <d1>)             Ground : (S5 ^desired D1)\n"
		"   4 :  (<s2> ^desired <d1>)             Ground : (S3 ^desired D1)\n"
		"   5 :  (<s1> ^operator <o1> +)          Ground : (S5 ^operator O18 +)\n"
		"   6 :  (<o1> ^name pour)                Ground : (O18 ^name pour)\n"
		"   7 :  (<o1> ^into <n1>)                Ground : (O18 ^into N3)\n"
		"   8 :  (<n1> ^volume 3)                 Ground : (N3 ^volume 3)\n"
		"   9 :  (<n1> ^contents 0)               Ground : (N3 ^contents 0)\n"
		"  10 :  (<s1> ^jug <n1>)                 Ground : (S5 ^jug N3)\n"
		"  11 :  (<s1> ^problem-space <p1>)       Ground : (S5 ^problem-space P3)\n"
		"  12 :  (<p1> ^name water-jug)           Ground : (P3 ^name water-jug)\n"
		"  13 :  (<s2> ^jug <n4>)                 Ground : (S3 ^jug N1)\n"
		"  14 :  (<n4> ^volume 3)                 Ground : (N1 ^volume 3)\n"
		"  15 :  (<n4> ^contents 3)               Ground : (N1 ^contents 3)\n"
		"  16 :  (<s2> ^jug <n3>)                 Ground : (S3 ^jug N2)\n"
		"  17 :  (<n3> ^volume 5)                 Ground : (N2 ^volume 5)\n"
		"  18 :  (<n3> ^contents 0)               Ground : (N2 ^contents 0)\n"
		"  19 :  (<s1> ^jug <n2>)                 Ground : (S5 ^jug N4)\n"
		"  20 :  (<n2> ^volume 5)                 Ground : (N4 ^volume 5)\n"
		"  21 :  (<n2> ^contents 3)               Ground : (N4 ^contents 3)\n"
		"  22 :  (<o1> ^jug <n2>)                 Ground : (O18 ^jug N4)\n"
		"\n"
		"Further examining condition 21:\n"
		"\n"
		"  soar> explain-backtraces -c 21 chunk-65*d13*tie*2\n"
		"  Explanation of why condition  (N4 ^contents 3) was included in chunk-\n"
		"  65*d13*tie*2\n"
		"  Production chunk-64*d13*opnochange*1 matched\n"
		"      (N4 ^contents 3) which caused\n"
		"  production selection*select*failure-evaluation-becomes-reject-preference to\n"
		"  match\n"
		"      (E3 ^symbolic-value failure) which caused\n"
		"  A result to be generated.\n"
		"\n"
		"See Also\n"
		"\n"
		"save-backtraces\n"
	;
	docstrings["firing-counts"] = 
		"Print the number of times each production has fired.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  firing-counts [n]\n"
		"  firing-counts production_name\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"fc firing-counts\n"
		"\n"
		"Options\n"
		"\n"
		"If given, an option can take one of two forms -- an integer or a production\n"
		"name:\n"
		"\n"
		"n               List the top n productions. If n is 0, only the productions\n"
		"                which haven't fired are listed\n"
		"production_name Print how many times the production has fired\n"
		"\n"
		"Description\n"
		"\n"
		"The firing-counts command prints the number of times each production has fired;\n"
		"production names are given from most requently fired to least frequently fired.\n"
		"With no arguments, it lists all productions. If an integer argument, n, is\n"
		"given, only the top n productions are listed. If n is zero (0), only the\n"
		"productions that haven't fired at all are listed. If a production name is\n"
		"given as an argument, the firing count for that production is printed.\n"
		"Note that firing counts are reset by a call to [cmd_init_soar init-soar].\n"
		"\n"
		"Examples\n"
		"\n"
		"This example prints the 10 productions which have fired the most times along\n"
		"with their firing counts:\n"
		"\n"
		"  firing-counts 10\n"
		"\n"
		"This example prints the firing counts of production my*first*production:\n"
		"\n"
		"  firing-counts my*first*production\n"
		"\n"
		"Warnings\n"
		"\n"
		"Firing-counts are reset to zero after an [cmd_init_soar init-soar].\n"
		"NB: This command is slow, because the sorting takes time O(n*log n)\n"
		"\n"
		"See Also\n"
		"\n"
		"init-soar\n"
	;
	docstrings["gds-print"] = 
		"Print the WMEs in the goal dependency set for each goal.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  gds-print\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"gds_print gds-print\n"
		"\n"
		"Description\n"
		"\n"
		"The Goal Dependency Set (GDS) is described in an appendix of the Soar manual.\n"
		"This command is a debugging command for examining the GDS for each goal in the\n"
		"stack. First it steps through all the working memory elements in the rete,\n"
		"looking for any that are included in any goal dependency set, and prints each\n"
		"one. Then it also lists each goal in the stack and prints the wmes in the goal\n"
		"dependency set for that particular goal. This command is useful when trying to\n"
		"determine why subgoals are disappearing unexpectedly: often something has\n"
		"changed in the goal dependency set, causing a subgoal to be regenerated prior\n"
		"to producing a result.\n"
		"\n"
		"Warnings\n"
		"\n"
		"gds-print is horribly inefficient and should not generally be used except when\n"
		"something is going wrong and you need to examine the Goal Dependency Set.\n"
	;
	docstrings["gp"] = 
		"Generate productions according to a specified pattern.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  gp { production_body }\n"
		"\n"
		"Description\n"
		"\n"
		"The gp command defines a pattern used to generate and source a set of Soar\n"
		"productions. production_body is a single argument that looks almost identical\n"
		"to a standard Soar rule that would be used with the [cmd_sp sp] command.\n"
		"Indeed, any syntax that is allowed in sp is also allowed in gp.\n"
		"Patterns in gp are specified with sets of whitespace-seprated values in square\n"
		"brackets. Every combination of values across all square-bracketed value lists\n"
		"will be generated. Values with whitespaces can be used if wrapped in pipes.\n"
		"Characters can also be escaped with a backslash (so string literals with\n"
		"embedded pipes and spaces outside of string literals are both possible).\n"
		"gp is primarily intended as an alternative to :template rules for reinforcement\n"
		"learning. :template rules generate new rules as patterns occur at run time.\n"
		"Unfortunately, this incurs a high run time cost. If all possible values are\n"
		"known in advance, then the rules can be generated using gp at source time, thus\n"
		"allowing code to run faster. gp is not appropriate when all possible values are\n"
		"not known or if the total number of possible rules is very large (and the\n"
		"system is likely to encounter only a small subset at run time). It is also\n"
		"possible to combine gp and :template (e.g., if some of the values are known and\n"
		"not others). This should reduce the run time cost of :template.\n"
		"There is nothing that actually restricts gp to being used for RL, although for\n"
		"non-RL rules, a disjunction list (using << and >>) is better where it can be\n"
		"used. More esoteric uses may include multiple bracketed value lists inside a\n"
		"disjunction list, or even variables in bracketed value lists.\n"
		"Each rule generated by gp has *integer appended to its name (where integer is\n"
		"some incrementing number).\n"
		"\n"
		"Examples\n"
		"\n"
		"Template version of rule:\n"
		"\n"
		"  sp {water-jug*fill\n"
		"     :template\n"
		"     (state <s1> ^name water-jug ^operator <op> +\n"
		"                 ^jug <j1> <j2>)\n"
		"     (<op> ^name fill ^fill-jug.volume <fvol>)\n"
		"     (<j1> ^volume 3 ^contents <c1>)\n"
		"     (<j2> ^volume 5 ^contents <c2>)\n"
		"  -->\n"
		"     (<s1> ^operator <op> = 0)\n"
		"  }\n"
		"\n"
		"gp version of rule (generates 144 rules):\n"
		"\n"
		"  gp {water-jug*fill\n"
		"     (state <s1> ^name water-jug ^operator <op> +\n"
		"                 ^jug <j1> <j2>)\n"
		"     (<op> ^name fill ^fill-jug.volume [3 5])\n"
		"     (<j1> ^volume 3 ^contents [0 1 2 3])\n"
		"     (<j2> ^volume 5 ^contents [0 1 2 3 4 5])\n"
		"  -->\n"
		"     (<s1> ^operator <op> = 0)\n"
		"  }\n"
		"\n"
		"Esoteric example (generates 24 rules):\n"
		"\n"
		"  gp {strange-example\n"
		"     (state <s1> ^<< [att1 att2] [att3 att4] >> [ val |another val| |strange\n"
		"  val\\|| ])\n"
		"  -->\n"
		"     (<s1> ^foo [bar <bar>])\n"
		"  }\n"
		"\n"
		"testgp.soar contains many more examples.\n"
		"\n"
		"See Also\n"
		"\n"
		"sp\n"
	;
	docstrings["gp-max"] = 
		"Set the upper-limit to the number of productions generated by the gp command.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  gp-max [value]\n"
		"\n"
		"Options\n"
		"\n"
		"value Maximum number of productions to produce\n"
		"\n"
		"Description\n"
		"\n"
		"gp-max is used to limit the number of productions produced by a gp production.\n"
		"It is easy to write a gp production that has a combinatorial explosion and\n"
		"hangs for a long time while those productions are added to memory. The gp-max\n"
		"command bounds this. Use without an argument to query the current value.\n"
		"\n"
		"Examples\n"
		"\n"
		"  gp-max 1000\n"
		"\n"
		"gp productions that produce more than 1000 productions will stop producing them\n"
		"when 1000 are made and return an error.\n"
		"\n"
		"See Also\n"
		"\n"
		"sp gp\n"
	;
	docstrings["help"] = 
		"Provide formatted usage information about Soar commands.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  help [command_name]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"?   help\n"
		"h   help\n"
		"man help\n"
		"\n"
		"Description\n"
		"\n"
		"This command prints formatted help for the given command name. Issue alone to\n"
		"see what topics have help available.\n"
	;
	docstrings["indifferent-selection"] = 
		"Controls indifferent preference arbitration.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  indifferent-selection\n"
		"  indifferent-selection [-s]\n"
		"  indifferent-selection [-bgfxl]\n"
		"  indifferent-selection [-et] [value]\n"
		"  indifferent-selection [-p] parameter [reduction_policy]\n"
		"  indifferent-selection [-r] parameter reduction_policy [reduction_rate]\n"
		"  indifferent-selection [-a] [setting]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"inds indifferent-selection\n"
		"\n"
		"Options\n"
		"\n"
		"-s, --stats                  Summary of settings\n"
		"policy                       Set exploration policy\n"
		"parameter [value]            Get/Set exploration policy parameters (if\n"
		"                             value not given, returns the current value)\n"
		"                             Get/Set exploration policy parameter\n"
		"parameter [reduction_policy] reduction policy (if policy not given,\n"
		"                             returns the current)\n"
		"parameter reduction_policy   Get/Set exploration policy parameter\n"
		"[reduction_rate]             reduction rate for a policy (if rate not\n"
		"                             give, returns the current)\n"
		"-a, --auto-reduce [on,off]   Get/Set auto-reduction setting (if setting\n"
		"                             not provided, returns the current)\n"
		"\n"
		"Description\n"
		"\n"
		"The indifferent-selection command allows the user to set options relating to\n"
		"selection between operator proposals that are mutually indifferent in\n"
		"preference memory.\n"
		"The primary option is the exploration policy (each is covered below). When Soar\n"
		"starts, softmax is the default policy. The first time Soar-RL is enabled, the\n"
		"architecture automatically changes the policy to epsilon-greedy and issues a\n"
		"message to the trace.\n"
		"Some policies have parameters to temper behavior. The indifferent-selection\n"
		"command provides basic facilities to automatically reduce these parameters\n"
		"exponentially and linearly each decision cycle by a fixed rate. In addition to\n"
		"setting these policies/rates, the auto-reduce option enables the automatic\n"
		"reduction system (disabled by default), for which the Soar decision cycle\n"
		"incurs a small performance cost.\n"
		"\n"
		"Exploration Policies\n"
		"\n"
		"-b, --boltzmann      Tempered softmax (uses temperature)\n"
		"-g, --epsilon-greedy Tempered greedy (uses epsilon)\n"
		"                     Random, biased by numeric indifferent values (if a non-\n"
		"-x, --softmax        positive value is encountered, resorts to a uniform random\n"
		"                     selection)\n"
		"-f, --first          Deterministic, first indifferent preference is selected\n"
		"-l, --last           Deterministic, last indifferent preference is selected\n"
		"\n"
		"Exploration Policy Parameters\n"
		"\n"
		"Parameter Name    Acceptable Values Default Value\n"
		"-e, --epsilon     [0, 1]            0.1\n"
		"-t, --temperature (0, inf)          25\n"
		"\n"
		"Exploration Policy Parameter Auto-Reduction Policies\n"
		"\n"
		"Policy Name         Valid Rates Default Rate\n"
		"exponential default [0, 1]      1\n"
		"linear              [0, inf]    0\n"
		"\n"
		"See Also\n"
		"\n"
		"numeric-indifferent-mode rl\n"
	;
	docstrings["init-soar"] = 
		"Empties working memory and resets run-time statistics.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  init-soar\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"init init-soar\n"
		"is   init-soar\n"
		"\n"
		"Description\n"
		"\n"
		"The init-soar command initializes Soar. It removes all elements from working\n"
		"memory, wiping out the goal stack, and resets all runtime statistics. The\n"
		"firing counts for all productions are reset to zero. The init-soar command\n"
		"allows a Soar program that has been halted to be reset and start its execution\n"
		"from the beginning.\n"
		"init-soar does not remove any productions from production memory; to do this,\n"
		"use the excise command. Note however, that all justifications will be removed\n"
		"because they will no longer be supported.\n"
		"\n"
		"See Also\n"
		"\n"
		"excise\n"
	;
	docstrings["internal-symbols"] = 
		"Print information about the Soar symbol table.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  internal-symbols\n"
		"\n"
		"Description\n"
		"\n"
		"The internal-symbols command prints information about the Soar symbol table.\n"
		"Such information is typically only useful for users attempting to debug Soar by\n"
		"locating memory leaks or examining I/O structure.\n"
		"\n"
		"Example\n"
		"\n"
		"   soar> internal-symbols\n"
		"   --- Symbolic Constants: ---\n"
		"   operator\n"
		"   accept\n"
		"   evaluate-object\n"
		"   problem-space\n"
		"   sqrt\n"
		"   interrupt\n"
		"   mod\n"
		"   goal\n"
		"   io\n"
		"   (...additional symbols deleted for brevity...)\n"
		"   --- Integer Constants: ---\n"
		"   --- Floating-Point Constants: ---\n"
		"   --- Identifiers: ---\n"
		"   --- Variables: ---\n"
		"   <o>\n"
		"   <sso>\n"
		"   <to>\n"
		"   <ss>\n"
		"   <ts>\n"
		"   <so>\n"
		"   <sss>\n"
	;
	docstrings["learn"] = 
		"Set the parameters for chunking, Soar's learning mechanism.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  learn [-l]\n"
		"  learn [-d|E|o]\n"
		"  learn [-eabnN]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"l learn\n"
		"\n"
		"Options\n"
		"\n"
		"-e, --enable, --on                    Turn chunking on. Can be modified by -\n"
		"                                      a or -b.\n"
		"-d, --disable, --off                  Turn all chunking off. (default)\n"
		"-E, --except                          Learning is on, except as specified by\n"
		"                                      RHS dont-learn actions.\n"
		"-o, --only                            Chunking is on only as specified by RHS\n"
		"                                      force-learn actions.\n"
		"-l, --list                            Prints listings of dont-learn and force-\n"
		"                                      learn states.\n"
		"-a, --all-levels                      Build chunks whenever a subgoal returns a\n"
		"                                      result. Learning must be enabled.\n"
		"                                      Build chunks only for subgoals that have\n"
		"-b, --bottom-up                       not yet had any subgoals with chunks\n"
		"                                      built. Learning must be enabled.\n"
		"-n, --enable-through-local-negations  Build chunks when local negation\n"
		"                                      encountered in backtrace. (default)\n"
		"-N, --disable-through-local-negations Do not build chunks when local negation\n"
		"                                      encountered in backtrace.\n"
		"\n"
		"Description\n"
		"\n"
		"The learn command controls the parameters for chunking (Soar's learning\n"
		"mechanism). With no arguments, this command prints out the current learning\n"
		"environment status. If arguments are provided, they will alter the learning\n"
		"environment as described in the options and arguments table. The watch command\n"
		"can be used to provide various levels of detail when productions are learned.\n"
		"Learning is disabled by default.\n"
		"With the --on flag, chunking is on all the time. With the --except flag,\n"
		"chunking is on, but Soar will not create chunks for states that have had RHS\n"
		"dont-learn actions executed in them. With the --only flag, chunking is off, but\n"
		"Soar will create chunks for only those states that have had RHS force-learn\n"
		"actions executed in them. With the --off flag, chunking is off all the time.\n"
		"The --only flag and its companion force-learn RHS action allow Soar developers\n"
		"to turn learning on in a particular problem space, so that they can focus on\n"
		"debugging the learning problems in that particular problem space without having\n"
		"to address the problems elsewhere in their programs at the same time.\n"
		"Similarly, the --except flag and its companion dont-learn RHS action allow\n"
		"developers to temporarily turn learning off for debugging purposes. These\n"
		"facilities are provided as debugging tools, and do not correspond to any theory\n"
		"of learning in Soar.\n"
		"The --all-levels and --bottom-up flags are orthogonal to the --on, --except, --\n"
		"only, and --off flags, and so, may be used in combination with them. With\n"
		"bottom-up learning, chunks are learned only in states in which no subgoal has\n"
		"yet generated a chunk. In this mode, chunks are learned only for the \"bottom\"\n"
		"of the subgoal hierarchy and not the intermediate levels. With experience, the\n"
		"subgoals at the bottom will be replaced by the chunks, allowing higher level\n"
		"subgoals to be chunked.\n"
		"Similarly, --enable-through-local-negations and --disable-though-local-\n"
		"negations are orthogonal to the rest of the learn options. These options\n"
		"control whether or not chunks can be created that are derived from rules that\n"
		"check for negated WMEs on the substate (local negations). Chunking through\n"
		"local negations can result in overgeneral chunks, but disabling this ability\n"
		"will reduce the number of chunks formed. The default is to enable chunking\n"
		"through local negations.\n"
		"If chunking through local negations is disabled, to see when chunks are\n"
		"discarded (and why), set watch --learning print (see watch command).\n"
		"Learning can be turned on or off at any point during a run.\n"
		"\n"
		"Examples\n"
		"\n"
		"To enable learning only at the lowest subgoal level:\n"
		"\n"
		"  learn -e b\n"
		"\n"
		"To see all the force-learn and dont-learn states registered by RHS actions\n"
		"\n"
		"  learn -l\n"
		"\n"
		"See Also\n"
		"\n"
		"watch explain-backtraces save-backtraces\n"
	;
	docstrings["load-library"] = 
		"Load a shared library into the local client (for the purpose of, e.g.,\n"
		"providing custom event handling).\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  load-library [library_name] [arguments]\n"
		"\n"
		"Options\n"
		"\n"
		"library_name The root name of the library (without the .dll or .so extension;\n"
		"             this is added for you depending on your platform).\n"
		"arguments    Whatever arguments the library's initialization function is\n"
		"             expecting, if any.\n"
		"\n"
		"Description\n"
		"\n"
		"Sometimes, a user will want to extend an existing environment. For example, the\n"
		"person may want to provide custom RHS functions, or register for print events\n"
		"for the purpose of logging trace information. If modifying the existing\n"
		"environment is cumbersome or impossible, then the user has two options: create\n"
		"a remote client that provides the functionality, or use load-library. Load-\n"
		"library creates extensions in the local client, making it orders of magnitude\n"
		"faster than a remote client.\n"
		"To create a loadable library, the library must contain the following function:\n"
		"\n"
		"  #ifdef __cplusplus\n"
		"  extern \"C\" {\n"
		"  #endif\n"
		"\n"
		"      EXPORT char* sml_InitLibrary(Kernel* pKernel, int argc, char** argv) {\n"
		"          // Your code here\n"
		"      }\n"
		"\n"
		"  #ifdef __cplusplus\n"
		"  } // extern \"C\"\n"
		"  #endif\n"
		"\n"
		"This function is called when load-library loads your library. It is responsible\n"
		"for any initialization that you want to take place (e.g. registering custom RHS\n"
		"functions, registering for events, etc).\n"
		"The argc and argv arguments are intended to mirror the arguments that a\n"
		"standard SML client would get. Thus, the first argument is the name of the\n"
		"library, and the rest are whatever other arguments are provided. This is to\n"
		"make it easy to use the same codebase to create a loadable library or a\n"
		"standard remote SML client (e.g. when run as a standard client, just pass the\n"
		"arguments main gets into sml_InitLibrary).\n"
		"The return value of sml_InitLibrary is for any error messages you want to\n"
		"return to the load-library call. If no error occurs, return a zero-length\n"
		"string.\n"
		"An example library is provided in the Tools/TestExternalLibraryLib project.\n"
		"This example can also be compiled as a standard remote SML client. The Tools/\n"
		"TestExternalLibraryExe project tests loading the TestExternalLibraryLib\n"
		"library.\n"
		"\n"
		"Examples\n"
		"\n"
		"To load TestExternalLibraryLib:\n"
		"\n"
		"  load-library TestExternalLibraryLib\n"
		"\n"
		"To load a library that takes arguments (say, a logger):\n"
		"\n"
		"  load-library my-logger -filename mylog.log\n"
	;
	docstrings["ls"] = 
		"List the contents of the current working directory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  ls\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"dir ls\n"
		"\n"
		"Description\n"
		"\n"
		"List the contents of the working directory.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs home pushd popd source pwd\n"
	;
	docstrings["matches"] = 
		"Prints information about partial matches and the match set.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  matches [options] production_name\n"
		"  matches [options] -[a|r]\n"
		"\n"
		"Options\n"
		"\n"
		"production_name          Print partial match information for the named\n"
		"                         production.\n"
		"                         For the match set, print only the names of the\n"
		"-n, --names, -c, --count productions that are about to fire or retract (the\n"
		"                         default). If printing partial matches for a\n"
		"                         production, just list the partial match counts.\n"
		"-t, --timetags           Also print the timetags of the wmes at the first\n"
		"                         failing condition\n"
		"-w, --wmes               Also print the full wmes, not just the timetags, at\n"
		"                         the first failing condition.\n"
		"-a, --assertions         List only productions about to fire.\n"
		"-r, --retractions        List only productions about to retract.\n"
		"\n"
		"Description\n"
		"\n"
		"The matches command prints a list of productions that have instantiations in\n"
		"the match set, i.e., those productions that will retract or fire in the next\n"
		"Propose or Apply phase. It also will print partial match information for a\n"
		"single, named production.\n"
		"\n"
		"Printing the match set\n"
		"\n"
		"When printing the match set (i.e., no production name is specified), the\n"
		"default action prints only the names of the productions which are about to fire\n"
		"or retract. If there are multiple instantiations of a production, the total\n"
		"number of instantiations of that production is printed after the production\n"
		"name, unless --timetags or --wmes are specified, in which case each\n"
		"instantiation is printed on a separate line.\n"
		"When printing the match set, the --assertions and --retractions arguments may\n"
		"be specified to restrict the output to print only the assertions or\n"
		"retractions.\n"
		"\n"
		"Printing partial matches for productions\n"
		"\n"
		"In addition to printing the current match set, the matches command can be used\n"
		"to print information about partial matches for a named production. In this\n"
		"case, the conditions of the production are listed, each preceded by the number\n"
		"of currently active matches for that condition. If a condition is negated, it\n"
		"is preceded by a minus sign -. The pointer >>>> before a condition indicates\n"
		"that this is the first condition that failed to match.\n"
		"When printing partial matches, the default action is to print only the counts\n"
		"of the number of WME's that match, and is a handy tool for determining\n"
		"which condition failed to match for a production that you thought should have\n"
		"fired. At levels --timetags and --wmes the matches command displays the\n"
		"WME's immediately after the first condition that failed to match--\n"
		"temporarily interrupting the printing of the production conditions themselves.\n"
		"\n"
		"Notes\n"
		"\n"
		"When printing partial match information, some of the matches displayed by this\n"
		"command may have already fired, depending on when in the execution cycle this\n"
		"command is called. To check for the matches that are about to fire, use the\n"
		"matches command without a named production.\n"
		"In Soar 8, the execution cycle (decision cycle) is input, propose, decide,\n"
		"apply output; it no longer stops for user input after the decision phase when\n"
		"running by decision cycles (run -d 1). If a user wishes to print the match set\n"
		"immediately after the decision phase and before the apply phase, then the user\n"
		"must run Soar by phases (run -p 1).\n"
		"\n"
		"Examples\n"
		"\n"
		"This example prints the productions which are about to fire and the wmes that\n"
		"match the productions on their left-hand sides:\n"
		"\n"
		"  matches --assertions --wmes\n"
		"\n"
		"This example prints the wme timetags for a single production.\n"
		"\n"
		"  matches -t my*first*production\n"
	;
	docstrings["max-chunks"] = 
		"Limit the number of chunks created during a decision cycle.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-chunks [n]\n"
		"\n"
		"Options\n"
		"\n"
		"n Maximum number of chunks allowed during a decision cycle.\n"
		"\n"
		"Description\n"
		"\n"
		"The max-chunks command is used to limit the maximum number of chunks that may\n"
		"be created during a decision cycle. The initial value of this variable is 50;\n"
		"allowable settings are any integer greater than 0.\n"
		"The chunking process will end after max-chunks chunks have been created, even\n"
		"if there are more results that have not been backtraced through to create\n"
		"chunks, and Soar will proceed to the next phase. A warning message is printed\n"
		"to notify the user that the limit has been reached.\n"
		"This limit is included in Soar to prevent getting stuck in an infinite loop\n"
		"during the chunking process. This could conceivably happen because newly-built\n"
		"chunks may match immediately and are fired immediately when this happens; this\n"
		"can in turn lead to additional chunks being formed, etc. If you see this\n"
		"warning, something is seriously wrong; Soar is unable to guarantee consistency\n"
		"of its internal structures. You should not continue execution of the Soar\n"
		"program in this situation; stop and determine whether your program needs to\n"
		"build more chunks or whether you've discovered a bug (in your program or\n"
		"in Soar itself).\n"
	;
	docstrings["max-dc-time"] = 
		"Set a wall-clock time limit such that the agent will be interrupted when a\n"
		"single decision cycle exceeds this limit.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-dc-time [--seconds] [n]\n"
		"  max-dc-time -d\n"
		"\n"
		"Options\n"
		"\n"
		"n             Maximum decision cycle time in microseconds\n"
		"-d, --disable Disable this interrupt.\n"
		"-s, --seconds Interpret n as seconds (floating point OK)\n"
		"\n"
		"Description\n"
		"\n"
		"After output phase, the elapsed decision cycle time is checked to see if it is\n"
		"greater than the old maximum, and the maximum dc time stat is updated (see\n"
		"stats). At this time, this threshold is also checked. If met or exceeded, Soar\n"
		"stops at the end of the current output phase with an interrupted state.\n"
		"\n"
		"Examples\n"
		"\n"
		"  max-dc-time -s 0.05\n"
		"  max-dc-time 4000\n"
	;
	docstrings["max-elaborations"] = 
		"Limit the maximum number of elaboration cycles in a given phase. Print a\n"
		"warning message if the limit is reached during a run.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-elaborations [n]\n"
		"\n"
		"Options\n"
		"\n"
		"n Maximum allowed elaboration cycles, must be a positive integer.\n"
		"\n"
		"Description\n"
		"\n"
		"This command sets and prints the maximum number of elaboration cycles allowed.\n"
		"If n is given, it must be a positive integer and is used to reset the number of\n"
		"allowed elaboration cycles. The default value is 100. max-elaborations with no\n"
		"arguments prints the current value.\n"
		"max-elaborations controls the maximum number of elaborations allowed in a\n"
		"single decision cycle. The elaboration phase will end after max-elaboration\n"
		"cycles have completed, even if there are more productions eligible to fire or\n"
		"retract; and Soar will proceed to the next phase after a warning message is\n"
		"printed to notify the user. This limits the total number of cycles of parallel\n"
		"production firing but does not limit the total number of productions that can\n"
		"fire during elaboration.\n"
		"This limit is included in Soar to prevent getting stuck in infinite loops (such\n"
		"as a production that repeatedly fires in one elaboration cycle and retracts in\n"
		"the next); if you see the warning message, it may be a signal that you have a\n"
		"bug your code. However some Soar programs are designed to require a large\n"
		"number of elaboration cycles, so rather than a bug, you may need to increase\n"
		"the value of max-elaborations.\n"
		"max-elaborations is checked during both the Propose Phase and the Apply Phase.\n"
		"If Soar runs more than the max-elaborations limit in either of these phases,\n"
		"Soar proceeds to the next phase (either Decision or Output) even if quiescence\n"
		"has not been reached.\n"
		"\n"
		"Examples\n"
		"\n"
		"The command issued with no arguments, returns the max elaborations allowed:\n"
		"\n"
		"  max-elaborations\n"
		"\n"
		"to set the maximum number of elaborations in one phase to 50:\n"
		"\n"
		"  max-elaborations 50\n"
	;
	docstrings["max-memory-usage"] = 
		"Get the number of bytes that when exceeded by an agent, will trigger the memory\n"
		"usage exceeded event.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-memory-usage [n]\n"
		"\n"
		"Options\n"
		"\n"
		"n Size of limit in bytes.\n"
		"\n"
		"Description\n"
		"\n"
		"The max-memory-usage command is used to trigger the memory usage exceeded\n"
		"event. The initial value of this is 100MB (100,000,000); allowable settings are\n"
		"any integer greater than 0. The code supporting this event is not enabled by\n"
		"default because the test can be computationally expensive and is needed only\n"
		"for specific embedded applications. Users may enable the test and event\n"
		"generation by uncommenting code in mem.cpp.\n"
		"Using the command with no arguments displays the current limit.\n"
	;
	docstrings["max-nil-output-cycles"] = 
		"Limit the maximum number of decision cycles that are executed without producing\n"
		"output when run is invoked with run-til-output args.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-nil-output-cycles [n]\n"
		"\n"
		"Options\n"
		"\n"
		"n Maximum number of consecutive output cycles allowed without producing output.\n"
		"  Must be a positive integer.\n"
		"\n"
		"Description\n"
		"\n"
		"This command sets and prints the maximum number of nil output cycles (output\n"
		"cycles that put nothing on the output link) allowed when running using run-til-\n"
		"output (run --output). If n is not given, this command prints the current\n"
		"number of nil-output-cycles allowed. If n is given, it must be a positive\n"
		"integer and is used to reset the maximum number of allowed nil output cycles.\n"
		"max-nil-output-cycles controls the maximum number of output cycles that\n"
		"generate no output allowed when a run --out command is issued. After this limit\n"
		"has been reached, Soar stops. The default initial setting of n is 15.\n"
		"\n"
		"Examples\n"
		"\n"
		"The command issued with no arguments, returns the max empty output cycles\n"
		"allowed:\n"
		"\n"
		"  max-nil-output-cycles\n"
		"\n"
		"to set the maximum number of empty output cycles in one phase to 25:\n"
		"\n"
		"  max-nil-output-cycles 25\n"
		"\n"
		"See Also\n"
		"\n"
		"run\n"
	;
	docstrings["memories"] = 
		"Print memory usage for partial matches.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  memories [options] [number]\n"
		"  memories production_name\n"
		"\n"
		"Options\n"
		"\n"
		"-c, --chunks         Print memory usage of chunks.\n"
		"-d, --default        Print memory usage of default productions.\n"
		"-j, --justifications Print memory usage of justifications.\n"
		"-u, --user           Print memory usage of user-defined productions.\n"
		"production_name      Print memory usage for a specific production.\n"
		"number               Number of productions to print, sorted by those that use\n"
		"                     the most memory.\n"
		"-T, --template       Print memory usage of Soar-RL templates.\n"
		"\n"
		"Description\n"
		"\n"
		"The memories command prints out the internal memory usage for full and partial\n"
		"matches of production instantiations, with the productions using the most\n"
		"memory printed first. With no arguments, the memories command prints memory\n"
		"usage for all productions. If a production_name is specified, memory usage will\n"
		"be printed only for that production. If a positive integer number is given,\n"
		"only number productions will be printed: the number productions that use the\n"
		"most memory. Output may be restricted to print memory usage for particular\n"
		"types of productions using the command options.\n"
		"Memory usage is recorded according to the tokens that are allocated in the rete\n"
		"network for the given production(s). This number is a function of the number of\n"
		"elements in working memory that match each production. Therefore, this command\n"
		"will not provide useful information at the beginning of a Soar run (when\n"
		"working memory is empty) and should be called in the middle (or at the end) of\n"
		"a Soar run.\n"
		"The memories command is used to find the productions that are using the most\n"
		"memory and, therefore, may be taking the longest time to match (this is only a\n"
		"heuristic). By identifying these productions, you may be able to rewrite your\n"
		"program so that it will run more quickly. Note that memory usage is just a\n"
		"heuristic measure of the match time: A production might not use much memory\n"
		"relative to others but may still be time-consuming to match, and excising a\n"
		"production that uses a large number of tokens may not speed up your program,\n"
		"because the Rete matcher shares common structure among different productions.\n"
		"As a rule of thumb, numbers less than 100 mean that the production is using a\n"
		"small amount of memory, numbers above 1000 mean that the production is using a\n"
		"large amount of memory, and numbers above 10,000 mean that the production is\n"
		"using a very large amount of memory.\n"
		"\n"
		"See Also\n"
		"\n"
		"matches\n"
	;
	docstrings["multi-attributes"] = 
		"Declare a symbol to be multi-attributed.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  multi-attributes [symbol [n]]\n"
		"\n"
		"Options\n"
		"\n"
		"symbol Any Soar attribute.\n"
		"n      Integer greater than 1, estimate of degree of simultaneous values for\n"
		"       attribute.\n"
		"\n"
		"Description\n"
		"\n"
		"This command declares the given symbol to be an attribute which can take on\n"
		"multiple values. The optional n is an integer (greater than 1) indicating an\n"
		"upper limit on the number of expected values that will appear for an attribute.\n"
		"If n is not specified, the value 10 is used for each declared multi-attribute.\n"
		"More informed values will tend to result in greater efficiency.\n"
		"This command is used only to provide hints to the production condition\n"
		"reorderer so it can produce better condition orderings. Better orderings enable\n"
		"the rete network to run faster. This command has no effect on the actual\n"
		"contents of working memory and most users needn't use this at all.\n"
		"Note that multi-attributes declarations must be made before productions are\n"
		"loaded into soar or this command will have no effect.\n"
		"\n"
		"Examples\n"
		"\n"
		"Declare the symbol \"thing\" to be an attribute likely to take more than 1 but no\n"
		"more than 4 values:\n"
		"\n"
		"  multi-attributes thing 4\n"
	;
	docstrings["numeric-indifferent-mode"] = 
		"Select method for combining numeric preferences.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  numeric-indifferent-mode [-as]\n"
		"\n"
		"Options\n"
		"\n"
		"-a, --avg, --average Use average mode (default).\n"
		"-s, --sum            Use sum mode.\n"
		"\n"
		"Description\n"
		"\n"
		"The numeric-indifferent-mode command is used to select the method for combining\n"
		"numeric preferences. This command is only meaningful in indifferent-selection\n"
		"random mode.\n"
		"The default procedure is --avg (average) which assigns a final value to an\n"
		"operator according to the rule:\n"
		"\n"
		"* If the operator has at least one numeric preference, assign it the value that\n"
		"  is the average of all of its numeric preferences.\n"
		"* If the operator has no numeric preferences (but has been included in the\n"
		"  indifferent selection through some combination of non-numeric preferences),\n"
		"  assign it the value 50.\n"
		"\n"
		"The intended range of numeric-preference values for --avg mode is 0-100.\n"
		"The other combination option --sum assigns a final value according to the rule:\n"
		"\n"
		"* Add together any numeric preferences for the operator (defaulting to 0 if\n"
		"  there are none).\n"
		"* Assign the operator the value e^{ preference_sum / agent_temperature}, where\n"
		"  agent_temperature is a compile-time constant currently set at 25.0.\n"
		"\n"
		"Any real-numbered preference may be used in --sum mode.\n"
		"Once a value has been computed for each operator, the next operator is selected\n"
		"probabilistically, with each candidate operator's chance weighted by its\n"
		"computed value.\n"
	;
	docstrings["o-support-mode"] = 
		"Choose experimental variations of o-support.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  o-support-mode [n]\n"
		"\n"
		"Options\n"
		"\n"
		"  Mode 3 is the same as mode 2 except that operator elaborations (adding\n"
		"3 attributes to operators) now get i-support even though you have to test the\n"
		"  operator to elaborate an operator. In cases where the rule mixes support\n"
		"  types, support defaults to o-support (and a warning is printed).\n"
		"  Mode 4 is the default. It is the same as mode 3 except where a rule mixes\n"
		"4 support types, support defaults to i-support (and a warning is still\n"
		"  printed).\n"
		"\n"
		"Description\n"
		"\n"
		"The o-support-mode command is used to control the way that o-support is\n"
		"determined for preferences. Only o-support modes 3 & 4 are valid (other modes\n"
		"require Soar 7, which is no longer supported). O-support mode 4 should be\n"
		"considered an improved version of mode 3. The default o-support mode is mode 4.\n"
		"In o-support modes 3 & 4, support is given production by production; that is,\n"
		"all preferences generated by the RHS of a single instantiated production will\n"
		"have the same support. The difference between the two modes is in how they\n"
		"handle productions with both operator and non-operator augmentations on the\n"
		"RHS. For more information on o-support calculations, see the relevant appendix\n"
		"in the Soar manual.\n"
		"Running o-support-mode with no arguments prints out the current o-support-mode.\n"
	;
	docstrings["popd"] = 
		"Pop the current working directory off the stack and change to the next\n"
		"directory on the stack. Can be relative pathname or fully specified path.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  popd\n"
		"\n"
		"Description\n"
		"\n"
		"This command pops a directory off of the directory stack and changes_to_it. See\n"
		"the [cmd_dirs dirs] command for an explanation of the directory stack.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs home ls pushd source pwd\n"
	;
	docstrings["port"] = 
		"Returns the port the kernel instance is listening on.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  port\n"
	;
	docstrings["predict"] = 
		"Predict the next selected operator\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  predict\n"
		"\n"
		"Description\n"
		"\n"
		"The predict command determines, based upon current operator proposals, which\n"
		"operator will be chosen during the next decision phase. If predict determines\n"
		"an operator tie will be encountered, \"tie\" is returned. If predict determines\n"
		"no operator will be selected (state no-change), \"none\" is returned. If predict\n"
		"determines a conflict will arise during the decision phase, \"conflict\" is\n"
		"returned. If predict determines a constraint failure will occur, \"constraint\"\n"
		"is returned. Otherwise, predict will return the id of the operator to be\n"
		"chosen. If operator selection will require probabilistic selection, and no\n"
		"alterations to the probabilities are made between the call to predict and\n"
		"decision phase, predict will manipulate the random number generator to enforce\n"
		"its prediction.\n"
		"\n"
		"See Also\n"
		"\n"
		"select\n"
	;
	docstrings["preferences"] = 
		"Examine details about the preferences that support the specified identifier and\n"
		"attribute.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  preferences [options] [identifier [attribute]]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"pref preferences\n"
		"\n"
		"Options\n"
		"\n"
		"-0, -n, --none     Print just the preferences themselves\n"
		"-1, -N, --names    Print the preferences and the names of the productions that\n"
		"                   generated them\n"
		"                   Print the information for the --names option above plus the\n"
		"-2, -t, --timetags timetags of the wmes matched by the LHS of the indicated\n"
		"                   productions\n"
		"-3, -w, --wmes     Print the information for the --timetags option above plus\n"
		"                   the entire WME matched on the LHS.\n"
		"-o, --object       Print the support for all the WMEs that comprise the object\n"
		"                   (the specified identifier).\n"
		"identifier         Must be an existing Soar object identifier.\n"
		"attribute          Must be an existing attribute of the specified identifier.\n"
		"\n"
		"Description\n"
		"\n"
		"The preferences command prints all the preferences for the given object\n"
		"identifier and attribute. If identifier and attribute are not specified, they\n"
		"default to the current state and the current operator. The Soar syntax\n"
		"attribute carat (^) is optional when specifying the attribute. The optional\n"
		"arguments indicates the level of detail to print about each preference.\n"
		"This command is useful for examining which candidate operators have been\n"
		"proposed and what relationships, if any, exist among them. If a preference has\n"
		"O-support, the string, :O will also be printed.\n"
		"When only the identifier is specified on the commandline, if the identifier is\n"
		"a state, Soar uses the default attribute ^operator. If the identifier is not a\n"
		"state, Soar prints the support information for all WMEs whose value is the\n"
		"identifier.\n"
		"When an identifier and the --object flag are specified, Soar prints the\n"
		"preferences / WME support for all WMEs comprising the specified identifier.\n"
		"For the time being, [cmd_numeric_indifferent_mode numeric-indifferent]\n"
		"preferences are listed under the heading `binary indifferents:`.\n"
		"By default, using the --wmes option with a WME on the top state will only print\n"
		"the timetags. To change this, the kernel can be recompiled with\n"
		"DO_TOP_LEVEL_REF_CTS, but this has other consequences (see comments in\n"
		"kernel.h).\n"
		"\n"
		"Examples\n"
		"\n"
		"This example prints the preferences on (S1 ^operator) and the production names\n"
		"which created the preferences:\n"
		"\n"
		"  soar> preferences S1 operator --names\n"
		"  Preferences for S1 ^operator:\n"
		"  acceptables:\n"
		"   O2 (fill) +\n"
		"     From waterjug*propose*fill\n"
		"   O3 (fill) +\n"
		"     From waterjug*propose*fill\n"
		"\n"
		"  unary indifferents:\n"
		"   O2 (fill) =\n"
		"     From waterjug*propose*fill\n"
		"   O3 (fill) =\n"
		"     From waterjug*propose*fill\n"
		"\n"
		"If the current state is S1, then the above syntax is equivalent to:\n"
		"\n"
		"  preferences -n\n"
		"\n"
		"This example shows the support for the WMEs with the ^jug attribute:\n"
		"\n"
		"  soar> preferences s1 jug\n"
		"\n"
		"  Preferences for S1 ^jug:\n"
		"\n"
		"  acceptables:\n"
		"    (S1 ^jug I4)  :O\n"
		"    (S1 ^jug J1)  :O\n"
		"\n"
		"This example shows the support for the WMEs with value J1, and the productions\n"
		"that generated them:\n"
		"\n"
		"  soar> pref J1 -1\n"
		"\n"
		"   Support for (31: O3 ^jug J1)\n"
		"     (O3 ^jug J1)\n"
		"       From water-jug*propose*fill\n"
		"\n"
		"   Support for (11: S1 ^jug J1)\n"
		"     (S1 ^jug J1)  :O\n"
		"       From water-jug*apply*initialize-water-jug-look-ahead\n"
		"\n"
		"This example shows the support for all WMEs that make up the object S1:\n"
		"\n"
		"  soar> pref -o s1\n"
		"\n"
		"  Support for S1 ^problem-space:\n"
		"    (S1 ^problem-space P1)\n"
		"  Support for S1 ^name:\n"
		"    (S1 ^name water-jug)  :O\n"
		"  Support for S1 ^jug:\n"
		"    (S1 ^jug I4)  :O\n"
		"    (S1 ^jug J1)  :O\n"
		"  Support for S1 ^desired:\n"
		"    (S1 ^desired D1)  :O\n"
		"  Support for S1 ^superstate-set:\n"
		"    (S1 ^superstate-set nil)\n"
		"  Preferences for S1 ^operator:\n"
		"  acceptables:\n"
		"    O2 (fill) +\n"
		"    O3 (fill) +\n"
		"  Arch-created wmes for S1 :\n"
		"  (2: S1 ^superstate nil)\n"
		"  (1: S1 ^type state)\n"
		"  Input (IO) wmes for S1 :\n"
		"  (3: S1 ^io I1)\n"
	;
	docstrings["print"] = 
		"Print items in working memory or production memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  print [options] [production_name]\n"
		"  print [options] identifier|timetag|pattern\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"p    print\n"
		"pc   print --chunks\n"
		"wmes print --internal\n"
		"\n"
		"Options\n"
		"\n"
		"Printing items in production memory\n"
		"\n"
		"What productions to print:\n"
		"\n"
		"-a, --all            print the names of all productions currently loaded\n"
		"-c, --chunks         print the names of all chunks currently loaded\n"
		"-D, --defaults       print the names of all default productions currently\n"
		"                     loaded\n"
		"-j, --justifications print the names of all justifications currently loaded.\n"
		"-r, --rl             Print Soar-RL rules\n"
		"-T, --template       Print Soar-RL templates\n"
		"-u, --user           print the names of all user productions currently loaded\n"
		"production_name      print the production named production-name\n"
		"\n"
		"How to print the productions:\n"
		"\n"
		"-f, --full     When printing productions, print the whole production. This is\n"
		"               the default when printing a named production.\n"
		"-F, --filename also prints the name of the file that contains the production.\n"
		"               items should be printed in their internal form. For productions,\n"
		"-i, --internal this means leaving conditions in their reordered (rete net)\n"
		"               form.\n"
		"               When printing productions, print only the name and not the whole\n"
		"-n, --name     production. This is the default when printing any category of\n"
		"               productions, as opposed to a named production.\n"
		"\n"
		"Printing items in working memory\n"
		"\n"
		"-d, --depth n  This option overrides the default printing depth (see the\n"
		"               default-wme-depth command for more detail).\n"
		"-e, --exact    Print only the wmes that match the pattern\n"
		"               items should be printed in their internal form. For working\n"
		"-i, --internal memory, this means printing the individual elements with their\n"
		"               timetags, rather than the objects.\n"
		"-t, --tree     wmes should be printed in in a tree form (one wme per line).\n"
		"-v, --varprint Print identifiers enclosed in angle brackets.\n"
		"identifier     print the object identifier. identifier must be a valid Soar\n"
		"               symbol such as S1\n"
		"               print the object whose working memory elements matching the\n"
		"pattern        given pattern. See Description for more information on printing\n"
		"               objects matching a specific pattern.\n"
		"timetag        print the object in working memory with the given timetag\n"
		"\n"
		"Printing the current subgoal stack\n"
		"\n"
		"-s, --stack     Specifies that the Soar goal stack should be printed. By\n"
		"                default this includes both states and operators.\n"
		"-o, --operators When printing the stack, print only operators.\n"
		"-S, --states    When printing the stack, print only states.\n"
		"\n"
		"Description\n"
		"\n"
		"The print command is used to print items from production memory or working\n"
		"memory. It can take several kinds of arguments. When printing items from\n"
		"working memory, the Soar objects are printed unless the --internal flag is\n"
		"used, in which case the wmes themselves are printed.\n"
		"\n"
		"  (identifier ^attribute value [+])\n"
		"\n"
		"The pattern is surrounded by parentheses. The identifier, attribute, and value\n"
		"must be valid Soar symbols or the wildcard symbol * which matches all\n"
		"occurrences. The optional + symbol restricts pattern matches to acceptable\n"
		"preferences. If wildcards are included, an object will be printed for each\n"
		"pattern match, even if this results in the same object being printed multiple\n"
		"times.\n"
		"\n"
		"Examples\n"
		"\n"
		"Print the objects in working memory (and their timetags) which have wmes with\n"
		"identifier s1 and value v2 (note: this will print the entire s1 object for each\n"
		"match found):\n"
		"\n"
		"  print --internal (s1 ^* v2)\n"
		"\n"
		"Print the Soar stack which includes states and operators:\n"
		"\n"
		"  print --stack\n"
		"\n"
		"Print the named production in its RETE form:\n"
		"\n"
		"  print -if named*production\n"
		"\n"
		"Print the names of all user productions currently loaded:\n"
		"\n"
		"  print -u\n"
		"\n"
		"Default print vs tree print:\n"
		"\n"
		"  print s1 --depth 2\n"
		"  (S1 ^io I1 ^reward-link R1 ^superstate nil ^type state)\n"
		"    (I1 ^input-link I2 ^output-link I3)\n"
		"\n"
		"  print s1 --depth 2 --tree\n"
		"  (S1 ^io I1)\n"
		"    (I1 ^input-link I2)\n"
		"    (I1 ^output-link I3)\n"
		"  (S1 ^reward-link R1)\n"
		"  (S1 ^superstate nil)\n"
		"  (S1 ^type state)\n"
		"\n"
		"See Also\n"
		"\n"
		"default-wme-depth\n"
	;
	docstrings["production-find"] = 
		"Find productions by condition or action patterns.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  production-find [-lrs[n|c]] pattern\n"
		"\n"
		"Options\n"
		"\n"
		"-c, --chunks        Look only for chunks that match the pattern.\n"
		"-l, --lhs           Match pattern only against the conditions (left-hand side)\n"
		"                    of productions (default).\n"
		"-n, --nochunks      Disregard chunks when looking for the pattern.\n"
		"-r, --rhs           Match pattern against the actions (right-hand side) of\n"
		"                    productions.\n"
		"-s, --show-bindings Show the bindings associated with a wildcard pattern.\n"
		"pattern             Any pattern that can appear in productions.\n"
		"\n"
		"Description\n"
		"\n"
		"The production-find command is used to find productions in production memory\n"
		"that include conditions or actions that match a given pattern. The pattern\n"
		"given specifies one or more condition elements on the left hand side of\n"
		"productions (or negated conditions), or one or more actions on the right-hand\n"
		"side of productions. Any pattern that can appear in productions can be used in\n"
		"this command. In addition, the asterisk symbol, *, can be used as a wildcard\n"
		"for an attribute or value. It is important to note that the whole pattern,\n"
		"including the parenthesis, must be enclosed in curly braces for it to be parsed\n"
		"properly.\n"
		"The variable names used in a call to production-find do not have to match the\n"
		"variable names used in the productions being retrieved.\n"
		"The production-find command can also be restricted to apply to only certain\n"
		"types of productions, or to look only at the conditions or only at the actions\n"
		"of productions by using the flags.\n"
		"\n"
		"Examples\n"
		"\n"
		"Find productions that test that some object gumby has an attribute alive with\n"
		"value t. In addition, limit the rules to only those that test an operator named\n"
		"foo:\n"
		"\n"
		"  production-find (<state> ^gumby <gv> ^operator.name foo)(<gv> ^alive t)\n"
		"\n"
		"Note that in the above command, <state> does not have to match the exact\n"
		"variable name used in the production.\n"
		"Find productions that propose the operator foo:\n"
		"\n"
		"  production-find --rhs (<x> ^operator <op> +)(<op> ^name foo)\n"
		"\n"
		"Find chunks that test the attribute ^pokey:\n"
		"\n"
		"  production-find --chunks (<x> ^pokey *)\n"
		"\n"
		"Examples using the water-jugs demo:\n"
		"\n"
		"  source demos/water-jug/water-jug.soar\n"
		"  production-find (<s> ^name *)(<j> ^volume *)\n"
		"  production-find (<s> ^name *)(<j> ^volume 3)\n"
		"  production-find --rhs (<j> ^* <volume>)\n"
		"\n"
		"See Also\n"
		"\n"
		"sp\n"
	;
	docstrings["pushd"] = 
		"Push a directory onto the directory stack, changing to it.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  pushd directory\n"
		"\n"
		"Description\n"
		"\n"
		"Maintain a stack of working directories and push the directory on to the stack.\n"
		"Can be relative path name or fully specified.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs home ls popd source pwd\n"
	;
	docstrings["pwatch"] = 
		"Trace firings and retractions of specific productions.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  pwatch [-d|e] [production name]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"pw pwatch\n"
		"\n"
		"Options\n"
		"\n"
		"                     Turn production watching off for the specified production.\n"
		"-d, --disable, --off If no production is specified, turn production watching\n"
		"                     off for all productions.\n"
		"                     Turn production watching on for the specified production.\n"
		"-e, --enable, --on   The use of this flag is optional, so this is pwatch's\n"
		"                     default behavior. If no production is specified, all\n"
		"                     productions currently being watched are listed.\n"
		"production name      The name of the production to watch.\n"
		"\n"
		"Description\n"
		"\n"
		"The pwatch command enables and disables the tracing of the firings and\n"
		"retractions of individual productions. This is a companion command to watch,\n"
		"which cannot specify individual productions by name.\n"
		"With no arguments, pwatch lists the productions currently being traced. With\n"
		"one production-name argument, pwatch enables tracing the production; --enable\n"
		"can be explicitly stated, but it is the default action.\n"
		"If --disable is specified followed by a production-name, tracing is turned off\n"
		"for the production. When no production-name is specified, --enable lists all\n"
		"productions currently being traced, and --disable disables tracing of all\n"
		"productions.\n"
		"Note that pwatch now only takes one production per command. Use multiple times\n"
		"to watch multiple functions.\n"
		"\n"
		"See Also\n"
		"\n"
		"watch\n"
	;
	docstrings["pwd"] = 
		"Print the current working directory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  pwd\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"topd pwd\n"
		"\n"
		"Description\n"
		"\n"
		"Prints the current working directory of Soar.\n"
	;
	docstrings["quit"] = 
		"Close log file, terminate Soar, and return user to the operating system.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  quit\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"exit quit\n"
		"\n"
		"Description\n"
		"\n"
		"This command stops the run, quits the log and closes Soar.\n"
	;
	docstrings["rand"] = 
		"Generate a random number.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rand                # returns a real number in [0,1] (calls SoarRand())\n"
		"  rand n              # returns a real number in [0,n] (calls SoarRand(max))\n"
		"  rand --integer      # returns an integer in [0,2^32-1] (calls SoarRandInt)\n"
		"  rand --integer n    # returns an integer in [0,n], n<2^32 (calls SoarRandInt\n"
		"  (max))\n"
		"\n"
		"Options\n"
		"\n"
		"-i, --integer Return an integer, optional argument is upper-bound (inclusive)\n"
		"\n"
		"Description\n"
		"\n"
		"Generates a random non-negative number, returning the result in a string.\n"
		"\n"
		"Examples\n"
		"\n"
		"  rand --integer 10 # returns 0..10, for example: \"4\"\n"
	;
	docstrings["remove-wme"] = 
		"Manually remove an element from working memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  remove-wme timetag\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"rw remove-wme\n"
		"\n"
		"Options\n"
		"\n"
		"timetag A positive integer matching the timetag of an existing working memory\n"
		"        element.\n"
		"\n"
		"Description\n"
		"\n"
		"The remove-wme command removes the working memory element with the given\n"
		"timetag. This command is provided primarily for use in Soar input functions;\n"
		"although there is no programming enforcement, remove-wme should only be called\n"
		"from registered input functions to delete working memory elements on\n"
		"Soar's input link.\n"
		"Beware of weird side effects, including system crashes.\n"
		"\n"
		"Warnings\n"
		"\n"
		"remove-wme should never be called from the RHS: if you try to match a wme on\n"
		"the LHS of a production, and then remove the matched wme on the RHS, Soar will\n"
		"crash.\n"
		"If used other than by input and output functions interfaced with Soar, this\n"
		"command may have weird side effects (possibly even including system crashes).\n"
		"Removing input wmes or context/impasse wmes may have unexpected side effects.\n"
		"You've been warned.\n"
		"\n"
		"See Also\n"
		"\n"
		"add-wme\n"
	;
	docstrings["replay-input"] = 
		"Load input wmes for each decision cycle from a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  replay-input --open filename\n"
		"  replay-input [--query]\n"
		"  replay-input --close\n"
		"\n"
		"Options\n"
		"\n"
		"filename    Open filename and load input and random seed.\n"
		"-o, --open  Reads captured input from file in to memory and seeds the random\n"
		"            number generator.\n"
		"-q, --query Returns open if input replay is active or closed if not active.\n"
		"-c, --close Stop replaying input.\n"
		"\n"
		"Description\n"
		"\n"
		"Replays input stored using the capture-input command. The replay file also\n"
		"includes a random number generator seed and seeds the generator with that.\n"
		"\n"
		"See Also\n"
		"\n"
		"capture-input\n"
	;
	docstrings["rete-net"] = 
		"Save the current Rete net, or restore a previous one.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rete-net -s|l filename\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"rn rete-net\n"
		"\n"
		"Options\n"
		"\n"
		"-s, --save                Save the Rete net in the named file. Cannot be saved\n"
		"                          when there are justifications present. Use excise -j\n"
		"                          Load the named file into the Rete network. working\n"
		"-l, -r, --load, --restore memory and production memory must both be empty. Use\n"
		"                          excise\n"
		"filename                  The name of the file to save or load.\n"
		"\n"
		"Description\n"
		"\n"
		"The rete-net command saves the current Rete net to a file or restores a Rete\n"
		"net previously saved. The Rete net is Soar's internal representation of\n"
		"production and working memory; the conditions of productions are reordered and\n"
		"common substructures are shared across different productions. This command\n"
		"provides a fast method of saving and loading productions since a special format\n"
		"is used and no parsing is necessary. Rete-net files are portable across\n"
		"platforms that support Soar.\n"
		"Normally users wish to save only production memory. Note that justifications\n"
		"cannot be present when saving the Rete net. Issuing an init-soar before saving\n"
		"a Rete net will remove all justifications and working memory elements.\n"
		"If the filename contains a suffix of .Z, then the file is compressed\n"
		"automatically when it is saved and uncompressed when it is loaded. Compressed\n"
		"files may not be portable to another platform if that platform does not support\n"
		"the same uncompress utility.\n"
		"\n"
		"See Also\n"
		"\n"
		"excise init-soar\n"
	;
	docstrings["rl"] = 
		"Get/Set Soar-RL parameters and statistics.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rl [options parameter|statstic]\n"
		"\n"
		"Options\n"
		"\n"
		"-g, --get   Retrieve a Soar-RL parameter value\n"
		"-s, --set   Set a Soar-RL parameter value\n"
		"-S, --stats Access Soar-RL statistics\n"
		"\n"
		"Description\n"
		"\n"
		"This command is used to get/set all parameters in Soar-RL. Additionally used to\n"
		"access statistics. See tables below for available parameters, full information\n"
		"is in the Soar-RL manual.\n"
		"\n"
		"Parameters\n"
		"\n"
		"Without any options: summary table of parameter settings.\n"
		"\n"
		"Parameter Name               Acceptable Values Default\n"
		"learning                     on, off           off\n"
		"temporal-extension           on, off           on\n"
		"discount-rate                [0, 1]            0.9\n"
		"learning-rate                [0, 1]            0.3\n"
		"learning-policy              sarsa, q-learning sarsa\n"
		"hrl-discount                 on, off           on\n"
		"eligibility-trace-decay-rate [0, 1]            0\n"
		"eligibility-trace-tolerance  (0, inf)          0.001\n"
		"\n"
		"Examples\n"
		"\n"
		"This command gets the value of the learning-rate parameter:\n"
		"\n"
		"  rl --get learning-rate\n"
		"\n"
		"This command sets the value of the learning-rate parameter to 0.5:\n"
		"\n"
		"  rl --set learning-rate 0.5\n"
	;
	docstrings["run"] = 
		"Begin Soar's execution cycle.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  run  [-f|count]\n"
		"  run -[d|e|o|p][s][un][g] [f|count]\n"
		"  run -[d|e|o|p][un] count [-i e|p|d|o]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"d    run -d 1\n"
		"e    run -e 1\n"
		"step run 1\n"
		"\n"
		"Options\n"
		"\n"
		"-d, --decision    Run Soar for count decision cycles.\n"
		"-e, --elaboration Run Soar for count elaboration cycles.\n"
		"-o, --output      Run Soar until the nth time output is generated by the agent.\n"
		"                  Limited by the value of max-nil-output-cycles.\n"
		"-p, --phase       Run Soar by phases. A phase is either an input phase,\n"
		"                  proposal phase, decision phase, apply phase, or output phase.\n"
		"-s, --self        If other agents exist within the kernel, do not run them at\n"
		"                  this time.\n"
		"                  Sets a flag in the update event callback requesting that an\n"
		"-u, --update      environment updates. This is the default if --self is not\n"
		"                  specified.\n"
		"                  Sets a flag in the update event callback requesting that an\n"
		"-n, --noupdate    environment does not update. This is the default if --self is\n"
		"                  specified.\n"
		"-f, forever       Run until halted by problem-solving completion or until\n"
		"                  stopped by an interrupt.\n"
		"count             A single integer which specifies the number of cycles to run\n"
		"                  Soar.\n"
		"                  Support round robin execution across agents at a finer grain\n"
		"-i, --interleave  than the run-size parameter. e = elaboration, p = phase, d =\n"
		"                  decision, o = output\n"
		"-g, --goal        Run agent until a goal retracts\n"
		"\n"
		"Deprecated Options\n"
		"\n"
		"These may be reimplemented in the future.\n"
		"\n"
		"--operator Run Soar until the nth time an operator is selected.\n"
		"--state    Run Soar until the nth time a state is selected.\n"
		"\n"
		"Description\n"
		"\n"
		"The run command starts the Soar execution cycle or continues any execution that\n"
		"was temporarily stopped. The default behavior of run, with no arguments, is to\n"
		"cause Soar to execute until it is halted or interrupted by an action of a\n"
		"production, or until an external interrupt is issued by the user. The run\n"
		"command can also specify that Soar should run only for a specific number of\n"
		"Soar cycles or phases (which may also be prematurely stopped by a production\n"
		"action or the stop-soar command). This is helpful for debugging sessions, where\n"
		"users may want to pay careful attention to the specific productions that are\n"
		"firing and retracting.\n"
		"The run command takes optional arguments: an integer, count, which specifies\n"
		"how many units to run; and a units flag indicating what steps or increments to\n"
		"use. If count is specified, but no units are specified, then Soar is run by\n"
		"decision cycles. If units are specified, but count is unpecified, then count\n"
		"defaults to '1'. The argument forever (can be shortened to f) is a\n"
		"keyword used instead of an integer count and indicates Soar should be run\n"
		"indefinitely, until halted by problem-solving completion, or stopped by an\n"
		"interrupt.\n"
		"If there are multiple Soar agents that exist in the same Soar process, then\n"
		"issuing a run command in any agent will cause all agents to run with the same\n"
		"set of parameters, unless the flag --self is specified, in which case only that\n"
		"agent will execute.\n"
		"If an environment is registered for the kernel's update event, then when\n"
		"the event it triggered, the environment will get information about how the run\n"
		"was executed. If a run was executed with the --update option, then then event\n"
		"sends a flag requesting that the environment actually update itself. If a run\n"
		"was executed with the --noupdate option, then the event sends a flag requesting\n"
		"that the environment not update itself. The --update option is the default when\n"
		"run is specified without the --self option is not specified. If the --self\n"
		"option is specified, then the --noupdate option is on by default. It is up to\n"
		"the environment to check for these flags and honor them.\n"
		"Some use cases include:\n"
		"\n"
		"run --self          runs one agent but not the environment\n"
		"run --self --update runs one agent and the environment\n"
		"run                 runs all agents and the environment\n"
		"run --noupdate      runs all agents but not the environment\n"
		"\n"
		"Setting an interleave size\n"
		"\n"
		"When there are multiple agents running within the same process, it may be\n"
		"useful to keep agents more closely aligned in their execution cycle than the\n"
		"run increment (--elaboration, --phases, --decisions, --output) specifies. For\n"
		"instance, it may be necessary to keep agents in \"lock step\" at the phase level,\n"
		"eventhough the run command issued is for 5 decisions. Some use cases include:\n"
		"\n"
		"1run -d 5 -inteleave p`\n"
		"                        run the agent one decision cycle and then move to the\n"
		"run -o 3 -interleave d  next agent. When an agent generates output for the 3rd\n"
		"                        time, it no longer runs even if other agents continue.\n"
		"\n"
		"The interleave parameter must always be equal to or smaller than the specified\n"
		"run parameter. This option is not currently compatible with the forever option.\n"
		"\n"
		"Note\n"
		"\n"
		"If Soar has been stopped due to a halt action, an init-soar command must be\n"
		"issued before Soar can be restarted with the run command.\n"
	;
	docstrings["save-backtraces"] = 
		"Save trace information to explain chunks and justifications.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  save-backtraces [-ed]\n"
		"\n"
		"Options\n"
		"\n"
		"-e, --enable, --on   Turn explain sysparam on.\n"
		"-d, --disable, --off Turn explain sysparam off.\n"
		"\n"
		"Description\n"
		"\n"
		"The save-backtraces variable is a toggle that controls whether or not\n"
		"backtracing information (from chunks and justifications) is saved.\n"
		"When save-backtraces is set to off, backtracing information is not saved and\n"
		"explanations of the chunks and justifications that are formed can not be\n"
		"retrieved. When save-backtraces is set to on, backtracing information can be\n"
		"retrieved by using the [cmd_explain_backtraces explain-backtraces] command.\n"
		"Saving backtracing information may slow down the execution of your Soar\n"
		"program, but it can be a very useful tool in understanding how chunks are\n"
		"formed.\n"
		"\n"
		"See Also\n"
		"\n"
		"explain-backtraces\n"
	;
	docstrings["select"] = 
		"Force the next selected operator\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  select id\n"
		"\n"
		"Options\n"
		"\n"
		"If no \"id\" is supplied, currently \"select\"ed operator (if applicable) is\n"
		"displayed\n"
		"\n"
		"id case-insensitive operator id of the operator to be selected in the next\n"
		"   decision phase\n"
		"\n"
		"Description\n"
		"\n"
		"The select command will force the selection of an operator, whose id is\n"
		"supplied as an argument, during the next decision phase. If the argument is not\n"
		"a proposed operator in the next decision phase, an error is raised and operator\n"
		"selection proceeds as if the select command had not been called. Otherwise, the\n"
		"supplied operator will be selected as the next operator, regardless of\n"
		"preferences. If select is called with no id argument, the command returns the\n"
		"operator id currently forced for selection (by a previous call to select), if\n"
		"one exists.\n"
		"\n"
		"Examples\n"
		"\n"
		"Assuming operator \"O2\" is a valid operator, this would select it as the next\n"
		"operator to be selected:\n"
		"\n"
		"  select O2\n"
		"\n"
		"After this command, issuing just \"select\" will get \"O2\" as a return:\n"
		"\n"
		"  select\n"
		"\n"
		"See Also\n"
		"\n"
		"predict\n"
	;
	docstrings["set-library-location"] = 
		"Set the top level directory containing demos/help/etc.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  set-library-location [directory]\n"
		"\n"
		"Options\n"
		"\n"
		"directory The new desired library location.\n"
		"\n"
		"Description\n"
		"\n"
		"Invoke with no arguments to query what the current library location is. The\n"
		"library location should contain at least the help/ subdirectory and the\n"
		"command-names file for help to work.\n"
		"\n"
		"See Also\n"
		"\n"
		"help\n"
	;
	docstrings["set-stop-phase"] = 
		"Controls the phase where agents stop when running by decision.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  set-stop-phase -[ABadiop]\n"
		"\n"
		"Options\n"
		"\n"
		"Options -A and -B are optional and mutually exclusive. If not specified, the\n"
		"default is -B.\n"
		"Only one of -a, -d, -i, -o, -p must be selected.\n"
		"With no options, reports the current stop phase.\n"
		"\n"
		"-A, --after    Stop after specified phase.\n"
		"-B, --before   Stop before specified phase (the default).\n"
		"-a, --apply    Select the apply phase.\n"
		"-d, --decision Select the decision phase.\n"
		"-i, --input    Select the input phase.\n"
		"-o, --output   Select the output phase.\n"
		"-p, --proposal Select the proposal phase.\n"
		"\n"
		"Description\n"
		"\n"
		"When running by decision cycle it can be helpful to have agents stop at a\n"
		"particular point in its execution cycle. This command allows the user to\n"
		"control which phase Soar stops in. The precise definition is that \"running for\n"
		"n decisions and stopping before phase ph means to run until the decision cycle\n"
		"counter has increased by n and then stop when the next phase is ph\". The phase\n"
		"sequence (as of this writing) is: input, proposal, decision, apply, output.\n"
		"Stopping after one phase is exactly equivalent to stopping before the next\n"
		"phase.\n"
		"On initialization Soar defaults to stopping before the input phase (or after\n"
		"the output phase, however you like to think of it).\n"
		"Setting the stop phase applies to all agents.\n"
		"\n"
		"Examples\n"
		"\n"
		"  set-stop-phase -Bi                 // stop before input phase\n"
		"  set-stop-phase -Ad                 // stop after decision phase (before apply\n"
		"  phase)\n"
		"  set-stop-phase -d                  // stop before decision phase\n"
		"  set-stop-phase --after --output    // stop after output phase\n"
		"  set-stop-phase                     // reports the current stop phase\n"
	;
	docstrings["soarnews"] = 
		"Prints information about the current release.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  soarnews\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"sn soarnews\n"
	;
	docstrings["source"] = 
		"Load and evaluate the contents of a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  source [options] filename\n"
		"\n"
		"Options\n"
		"\n"
		"filename      The file of Soar productions and commands to load.\n"
		"-a, --all     Enable a summary for each file sourced\n"
		"-d, --disable Disable all summaries\n"
		"-v, --verbose Print excised production names\n"
		"\n"
		"Description\n"
		"\n"
		"Load and evaluate the contents of a file. The filename can be a relative path\n"
		"or a fully qualified path. source will generate an implicit push to the new\n"
		"directory, execute the command, and then pop back to the current working\n"
		"directory from which the command was issued.\n"
		"After the source completes, the number of productions sourced and excised is\n"
		"printed:\n"
		"\n"
		"  agent> source demos/mac/mac.soar\n"
		"  ******************\n"
		"  Total: 18 productions sourced.\n"
		"  Source finished.\n"
		"  agent> source demos/mac/mac.soar\n"
		"  #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n"
		"  Total: 18 productions sourced. 18 productions excised.\n"
		"  Source finished.\n"
		"\n"
		"This can be disabled by using the -d flag:\n"
		"\n"
		"  agent> source demos/mac/mac.soar -d\n"
		"  ******************\n"
		"  Source finished.\n"
		"  agent> source demos/mac/mac.soar -d\n"
		"  #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n"
		"  Source finished.\n"
		"\n"
		"A list of excised productions is available using the -v flag:\n"
		"\n"
		"  agent> source demos/mac/mac.soar -v\n"
		"  #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n"
		"  Total: 18 productions sourced. 18 productions excised.\n"
		"  Excised productions:\n"
		"          mac*detect*state*success\n"
		"          mac*evaluate*state*failure*more*cannibals\n"
		"          monitor*move-boat\n"
		"          monitor*state*left\n"
		"  ...\n"
		"\n"
		"A separate summary for each file sourced can be enabled using the -a flag:\n"
		"\n"
		"  agent> source demos/mac/mac.soar -a\n"
		"  _firstload.soar: 0 productions sourced.\n"
		"  all_source.soar: 0 productions sourced.\n"
		"  **\n"
		"  goal-test.soar: 2 productions sourced.\n"
		"  ***\n"
		"  monitor.soar: 3 productions sourced.\n"
		"  ****\n"
		"  search-control.soar: 4 productions sourced.\n"
		"  top-state.soar: 0 productions sourced.\n"
		"  elaborations_source.soar: 0 productions sourced.\n"
		"  _readme.soar: 0 productions sourced.\n"
		"  **\n"
		"  initialize-mac.soar: 2 productions sourced.\n"
		"  *******\n"
		"  move-boat.soar: 7 productions sourced.\n"
		"  mac_source.soar: 0 productions sourced.\n"
		"  mac.soar: 0 productions sourced.\n"
		"  Total: 18 productions sourced.\n"
		"  Source finished.\n"
		"\n"
		"Combining the -a and -v flags add excised production names to the output for\n"
		"each file.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs home ls pushd popd pwd\n"
	;
	docstrings["sp"] = 
		"Define a Soar production.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  sp {production_body}\n"
		"\n"
		"Options\n"
		"\n"
		"production_body A Soar production.\n"
		"\n"
		"Description\n"
		"\n"
		"The sp command creates a new production and loads it into production memory.\n"
		"production_body is a single argument parsed by the Soar kernel, so it should be\n"
		"enclosed in curly braces to avoid being parsed by other scripting languages\n"
		"that might be in the same process. The overall syntax of a rule is as follows:\n"
		"\n"
		"    name\n"
		"        [\"documentation-string\"]\n"
		"        [FLAG*]\n"
		"        LHS\n"
		"        -->\n"
		"        RHS\n"
		"\n"
		"The first element of a rule is its name. Conventions for names are given in the\n"
		"Soar Users Manual. If given, the documentation-string must be enclosed in\n"
		"double quotes. Optional flags define the type of rule and the form of support\n"
		"its right-hand side assertions will receive. The specific flags are listed in a\n"
		"separate section below. The LHS defines the left-hand side of the production\n"
		"and specifies the conditions under which the rule can be fired. Its syntax is\n"
		"given in detail in a subsequent section. The --> symbol serves to separate the\n"
		"LHS and RHS portions. The RHS defines the right-hand side of the production and\n"
		"specifies the assertions to be made and the actions to be performed when the\n"
		"rule fires. The syntax of the allowable right-hand side actions are given in a\n"
		"later section. The Soar Users Manual gives an elaborate discussion of the\n"
		"design and coding of productions. Please see that reference for tutorial\n"
		"information about productions.\n"
		"If the name of the new production is the same as an existing one, the old\n"
		"production will be overwritten (excised).\n"
		"Rules matching the following requirement are flagged upon being created/\n"
		"sourced: a rule is a Soar-RL rule if and only if its right hand side (RHS)\n"
		"consists of a single numeric preference and it is not a template rule (see\n"
		"FLAGs below). This format exists to ease technical requirements of identifying/\n"
		"updating Soar-RL rules, as well as to make it easy for the agent programmer to\n"
		"add/maintain RL capabilities within an agent. See the Soar-RL Manual for\n"
		"further details.\n"
		"\n"
		"RULE FLAGS\n"
		"\n"
		"The optional FLAGs are given below. Note that these switches are preceeded by a\n"
		"colon instead of a dash -- this is a Soar parser convention.\n"
		"\n"
		"  :o-support      specifies that all the RHS actions are to be given\n"
		"                  o-support when the production fires\n"
		"\n"
		"  :no-support     specifies that all the RHS actions are only to be given\n"
		"                  i-support when the production fires\n"
		"\n"
		"  :default        specifies that this production is a default production\n"
		"                  (this matters for excise -task and watch task)\n"
		"\n"
		"  :chunk          specifies that this production is a chunk\n"
		"                  (this matters for learn trace)\n"
		"\n"
		"  :interrupt      specifies that Soar should stop running when this\n"
		"                  production matches but before it fires\n"
		"                  (this is a useful debugging tool)\n"
		"\n"
		"  :template       specifies that this production should be used to generate\n"
		"                  new reinforcement learning rules by filling in those\n"
		"                  variables that match constants in working memory\n"
		"\n"
		"Multiple flags may be used, but not both of o-support and no-support.\n"
		"Although you could force your productions to provide O-support or I-support by\n"
		"using these commands --- regardless of the structure of the conditions and\n"
		"actions of the production --- this is not proper coding style. The o-support\n"
		"and no-support flags are included to help with debugging, but should not be\n"
		"used in a standard Soar program.\n"
		"\n"
		"Examples\n"
		"\n"
		"  sp {blocks*create-problem-space\n"
		"       \"This creates the top-level space\"\n"
		"       (state <s1> ^superstate nil)\n"
		"       -->\n"
		"       (<s1> ^name solve-blocks-world ^problem-space <p1>)\n"
		"       (<p1> ^name blocks-world)\n"
		"  }\n"
		"\n"
		"See Also\n"
		"\n"
		"excise learn watch\n"
	;
	docstrings["srand"] = 
		"Seed the random number generator.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  srand [seed]\n"
		"\n"
		"Options\n"
		"\n"
		"seed Random number generator seed.\n"
		"\n"
		"Description\n"
		"\n"
		"Seeds the random number generator with the passed seed. Calling srand without\n"
		"providing a seed will seed the generator based on the contents of /dev/urandom\n"
		"(if available) or else based on time() and clock() values.\n"
		"\n"
		"Examples\n"
		"\n"
		"  srand 0\n"
	;
	docstrings["stats"] = 
		"Print information on Soar's runtime statistics.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  stats [options]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"st stats\n"
		"\n"
		"Options\n"
		"\n"
		"-m, --memory     report usage for Soar's memory pools\n"
		"-r, --rete       report statistics about the rete structure\n"
		"-s, --system     report the system (agent) statistics (default)\n"
		"-M, --max        report the per-cycle maximum statistics (decision cycle time,\n"
		"                 WM changes, production fires)\n"
		"-R, --reset      zero out the per-cycle maximum statistics reported by --max\n"
		"                 command\n"
		"-t, --track      begin tracking the per-cycle maximum statistics reported by --\n"
		"                 max for each cycle (instead of only the max value)\n"
		"-T, --stop-track stop and clear tracking of the per-cycle maximum statistics\n"
		"-c, --cycle      print out collected per-cycle maximum statistics saved by --\n"
		"                 track in human-readable form\n"
		"-C, --cycle-csv  print out collected per-cycle maximum statistics saved by --\n"
		"                 track in comma-separated form\n"
		"-S, --sort N     sort the tracked cycle stats by column number N, see table\n"
		"                 below\n"
		"\n"
		"Tracked Cycle Stats Columns\n"
		"\n"
		"For use with --sort option. Negative values sorts descending.\n"
		"\n"
		"0     Use default sort\n"
		"1, -1 Sort by decision cycle (use negative for descending)\n"
		"2, -2 Sort by DC time (use negative for descending)\n"
		"3, -3 Sort by WM changes (use negative for descending)\n"
		"4, -4 Sort by production firings (use negative for descending)\n"
		"\n"
		"Description\n"
		"\n"
		"This command prints Soar internal statistics. The argument indicates the\n"
		"component of interest, --system is used by default.\n"
		"With the --system flag, the stats command lists a summary of run statistics,\n"
		"including the following:\n"
		"\n"
		"* Version --- The Soar version number, hostname, and date of the run.\n"
		"* Number of productions --- The total number of productions loaded in the\n"
		"  system, including all chunks built during problem solving and all default\n"
		"  productions.\n"
		"* Timing Information --- Might be quite detailed depending on the flags set at\n"
		"  compile time. See note on timers below.\n"
		"* Decision Cycles --- The total number of decision cycles in the run and the\n"
		"  average time-per-decision-cycle in milliseconds.\n"
		"* Elaboration cycles --- The total number of elaboration cycles that were\n"
		"  executed during the run, the average number of elaboration cycles per\n"
		"  decision cycle, and the average time-per-elaboration-cycle in milliseconds.\n"
		"  This is not the total number of production firings, as productions can fire\n"
		"  in parallel.\n"
		"* Production Firings --- The total number of productions that were fired.\n"
		"* Working Memory Changes --- This is the total number of changes to working\n"
		"  memory. This includes all additions and deletions from working memory. Also\n"
		"  prints the average match time.\n"
		"* Working Memory Size --- This gives the current, mean and maximum number of\n"
		"  working memory elements.\n"
		"\n"
		"The stats argument --memory provides information about memory usage and\n"
		"Soar's memory pools, which are used to allocate space for the various data\n"
		"structures used in Soar.\n"
		"The stats argument --rete provides information about node usage in the Rete\n"
		"net, the large data structure used for efficient matching in Soar.\n"
		"The --max argument reports per-cycle maximum statistics for decision cycle\n"
		"time, working memory changes, and production fires. For example, if Soar runs\n"
		"for three cycles and there were 23 working memory changes in the first cycle,\n"
		"42 in the second, and 15 in the third, the --max argument would report the\n"
		"highest of these values (42) and what decision cycle that it occurred in (2nd).\n"
		"Statistics about the time spent executing the decision cycle and number of\n"
		"productions fired are also collected and reported by --max in this manner. --\n"
		"reset zeros out these statistics so that new maximums can be recorded for\n"
		"future runs. The numbers are also zeroed out with a call to init-soar.\n"
		"The --track argument starts tracking the same stats as the --max argument but\n"
		"records all data for each cycle instead of the maximum values. This data can be\n"
		"printed using the --cycle or --cycle-csv arguments. When printing the data with\n"
		"--cycle, it may be sorted using the --sort argument and a column integer. Use\n"
		"negative numbers for descending sort. Issue --stop-track to reset and clear\n"
		"this data.\n"
		"\n"
		"A Note on Timers\n"
		"\n"
		"The current implementation of Soar uses a number of timers to provide time-\n"
		"based statistics for use in the stats command calculations. These timers are:\n"
		"\n"
		"* total CPU time\n"
		"* total kernel time\n"
		"* phase kernel time (per phase)\n"
		"* phase callbacks time (per phase)\n"
		"* input function time\n"
		"* output function time\n"
		"\n"
		"Total CPU time is calculated from the time a decision cycle (or number of\n"
		"decision cycles) is initiated until stopped. Kernel time is the time spent in\n"
		"core Soar functions. In this case, kernel time is defined as the all functions\n"
		"other than the execution of callbacks and the input and output functions. The\n"
		"total kernel timer is only stopped for these functions. The phase timers (for\n"
		"the kernel and callbacks) track the execution time for individual phases of the\n"
		"decision cycle (i.e., input phase, preference phase, working memory phase,\n"
		"output phase, and decision phase). Because there is overhead associated with\n"
		"turning these timers on and off, the actual kernel time will always be greater\n"
		"than the derived kernel time (i.e., the sum of all the phase kernel timers).\n"
		"Similarly, the total CPU time will always be greater than the derived total\n"
		"(the sum of the other timers) because the overhead of turning these timers on\n"
		"and off is included in the total CPU time. In general, the times reported by\n"
		"the single timers should always be greater than than the corresponding derived\n"
		"time. Additionally, as execution time increases, the difference between these\n"
		"two values will also increase. For those concerned about the performance cost\n"
		"of the timers, all the run time timing calculations can be compiled out of the\n"
		"code by defining NO_TIMING_STUFF (in soarkernel.h) before compilation.\n"
		"\n"
		"Examples\n"
		"\n"
		"Track per-cycle stats then print them out using default sort:\n"
		"\n"
		"  stats --track\n"
		"  run\n"
		"  stop\n"
		"  stats --cycle\n"
		"\n"
		"Print out per-cycle stats sorting by decision cycle time\n"
		"\n"
		"  stats --cycle --sort 2\n"
		"\n"
		"Print out per-cycle stats sorting by firing counts, descending\n"
		"\n"
		"  stats --cycle --sort -4\n"
		"\n"
		"Save per-cycle stats to file stats.csv\n"
		"\n"
		"  ctf stats.csv stats --cycle-csv\n"
		"\n"
		"See Also\n"
		"\n"
		"timers init-soar command-to-file\n"
	;
	docstrings["stop-soar"] = 
		"Pause Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  stop-soar [-s] [reason string]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"interrupt stop-soar\n"
		"ss        stop-soar\n"
		"stop      stop-soar\n"
		"\n"
		"Options\n"
		"\n"
		"-s, --self    Stop only the soar agent where the command is issued. All other\n"
		"              agents continue running as previously specified.\n"
		"              An optional string which will be printed when Soar is stopped, to\n"
		"reason_string indicate why it was stopped. If left blank, no message will be\n"
		"              printed when Soar is stopped.\n"
		"\n"
		"Description\n"
		"\n"
		"The stop-soar command stops any running Soar agents. It sets a flag in the Soar\n"
		"kernel so that Soar will stop running at a \"safe\" point and return control to\n"
		"the user. This command is usually not issued at the command line prompt - a\n"
		"more common use of this command would be, for instance, as a side-effect of\n"
		"pressing a button on a Graphical User Interface (GUI).\n"
		"\n"
		"See Also\n"
		"\n"
		"run\n"
		"\n"
		"Warnings\n"
		"\n"
		"If the graphical interface doesn't periodically do an \"update\" of flush\n"
		"the pending I/O, then it may not be possible to interrupt a Soar agent from the\n"
		"command line.\n"
	;
	docstrings["time"] = 
		"Use a default system clock timer to record the wall time required while\n"
		"executing a command.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  time command [arguments]\n"
		"\n"
		"Options\n"
		"\n"
		"command   The command to execute.\n"
		"arguments Optional command arguments.\n"
	;
	docstrings["timers"] = 
		"Toggle on or off the internal timers used to profile Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  timers [options]\n"
		"\n"
		"Options\n"
		"\n"
		"-d, --disable, --off Disable all timers.\n"
		"-e, --enable, --on   Enable timers as compiled.\n"
		"\n"
		"Description\n"
		"\n"
		"This command is used to control the timers that collect internal profiling\n"
		"information while Soar is running. With no arguments, this command prints out\n"
		"the current timer status. Timers are ENABLED by default. The default\n"
		"compilation flags for soar enable the basic timers and disable the detailed\n"
		"timers. The timers command can only enable or disable timers that have already\n"
		"been enabled with compiler directives. See the [cmd_stats stats] command for\n"
		"more info on the Soar timing system.\n"
		"\n"
		"See Also\n"
		"\n"
		"stats\n"
	;
	docstrings["unalias"] = 
		"Undefine an existing alias\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  unalias name\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"un [cmd_unalias unalias]\n"
		"\n"
		"Description\n"
		"\n"
		"This command undefines a previously created alias. This command takes exactly\n"
		"one argument: the name of the alias to remove. Use the alias command by itself\n"
		"to list all defined aliases.\n"
		"\n"
		"Examples\n"
		"\n"
		"  unalias varprint\n"
		"\n"
		"See Also\n"
		"\n"
		"alias\n"
	;
	docstrings["verbose"] = 
		"Control detailed information printed as Soar runs.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  verbose [-ed]\n"
		"\n"
		"Options\n"
		"\n"
		"-d, --disable, --off Turn verbosity off. (default)\n"
		"-e, --enable, --on   Turn verbosity on.\n"
		"\n"
		"Description\n"
		"\n"
		"The verbose command enables tracing of a number of low-level Soar execution\n"
		"details during a run. The details printed by verbose are usually only valuable\n"
		"to developers debugging Soar implementation details. Invoke with no arguments\n"
		"to query the current setting.\n"
		"\n"
		"See Also\n"
		"\n"
		"watch\n"
	;
	docstrings["version"] = 
		"Returns the version number of the Soar kernel.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  version\n"
		"\n"
		"Description\n"
		"\n"
		"This command gives version information about the current Soar kernel. It\n"
		"returns the version number and build date which can then be stored by the agent\n"
		"or the application.\n"
	;
	docstrings["waitsnc"] = 
		"Generate a wait state rather than a state-no-change impasse.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  wait -[e|d]\n"
		"\n"
		"Options\n"
		"\n"
		"-e, --enable, --on   Turns a state-no-change into a wait state.\n"
		"-d, --disable, --off Default. A state-no-change generates an impasse.\n"
		"\n"
		"Description\n"
		"\n"
		"In some systems, espcially those that model expert (fully chunked) knowledge, a\n"
		"state-no-change may represent a wait state rather than an impasse. The waitsnc\n"
		"command allows the user to switch to a mode where a state-no-change that would\n"
		"normally generate an impasse (and subgoaling), instead generates a wait state.\n"
		"At a wait state, the decision cycle will repeat (and the decision cycle count\n"
		"is incremented) but no state-no-change impasse (and therefore no substate) will\n"
		"be generated.\n"
		"When issued with no arguments, waitsnc returns its current setting.\n"
	;
	docstrings["warnings"] = 
		"Enable or disable the printing of warning messages from the Soar kernel.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  warnings [options]\n"
		"\n"
		"Options\n"
		"\n"
		"-e, --enable, --on   Default. Print all warning messages from the kernel.\n"
		"-d, --disable, --off Disable all, except most critical, warning messages.\n"
		"\n"
		"Description\n"
		"\n"
		"Enables and disables the printing of warning messages. If an argument is\n"
		"specified, then the warnings are set to that state. If no argument is given,\n"
		"then the current warnings status is printed. At startup, warnings are initially\n"
		"enabled. If warnings are disabled using this command, then some warnings may\n"
		"still be printed, since some are considered too important to ignore.\n"
		"The warnings that are printed apply to the syntax of the productions, to notify\n"
		"the user when they are not in the correct syntax. When a lefthand side error is\n"
		"discovered (such as conditions that are not linked to a common state or impasse\n"
		"object), the production is generally loaded into production memory anyway,\n"
		"although this production may never match or may seriously slow down the\n"
		"matching process. In this case, a warning would be printed only if warnings\n"
		"were --on. Righthand side errors, such as preferences that are not linked to\n"
		"the state, usually result in the production not being loaded, and a warning\n"
		"regardless of the warnings setting.\n"
	;
	docstrings["watch"] = 
		"Control the run-time tracing of Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  watch [options]\n"
		"  watch level\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"w watch\n"
		"\n"
		"Options\n"
		"\n"
		"When appropriate, a specific option may be turned off using the remove\n"
		"argument. This argument has a numeric alias; you can use 0 for remove. A mix of\n"
		"formats is acceptable, even in the same command line.\n"
		"\n"
		"Basic Watch Settings\n"
		"\n"
		"Option Flag       Argument to Option       Description\n"
		"                                           This flag is optional but\n"
		"                  0 to 5 (see Watch Levels recommended. Set a specific\n"
		"-l, --level       below)                   watch level using an integer 0\n"
		"                                           to 5, this is an inclusive\n"
		"                                           operation\n"
		"                                           Turns off all printing about\n"
		"-N, --none        No argument              Soar's internals,\n"
		"                                           equivalent to --level 0\n"
		"                                           Controls whether state and\n"
		"-d, --decisions   remove (optional)        operator decisions are printed\n"
		"                                           as they are made\n"
		"                                           Controls whether decisions\n"
		"-p, --phases      remove (optional)        cycle phase names are printed\n"
		"                                           as Soar executes\n"
		"-g, --gds         remove (optional)        Controls printing of warnings\n"
		"                                           about wme changes to GDS\n"
		"                                           Controls whether the names of\n"
		"-P, --productions remove (optional)        productions are printed as they\n"
		"                                           fire and retract, equivalent to\n"
		"                                           -Dujc\n"
		"                                           Controls the printing of\n"
		"                                           working memory elements that\n"
		"-w, --wmes        remove (optional)        are added and deleted as\n"
		"                                           productions are fired and\n"
		"                                           retracted.\n"
		"                                           Controls whether the\n"
		"                                           preferences generated by the\n"
		"-r, --preferences remove (optional)        traced productions are printed\n"
		"                                           when those productions fire or\n"
		"                                           retract\n"
		"\n"
		"Watch Levels\n"
		"\n"
		"Use of the --level (-l) flag is optional but recommended.\n"
		"\n"
		"0 watch nothing; equivalent to -N\n"
		"1 watch decisions; equivalent to -d\n"
		"2 watch phases, gds, and decisions; equivalent to -dpg\n"
		"3 watch productions, phases, and decisions; equivalent to -dpgP\n"
		"4 watch wmes, productions, phases, and decisions; equivalent to -dpgPw\n"
		"5 watch preferences, wmes, productions, phases, and decisions; equivalent to -\n"
		"  dpgPwr\n"
		"\n"
		"It is important to note that watch level 0 turns off ALL watch options,\n"
		"including backtracing, indifferent selection and learning. However, the other\n"
		"watch levels do not change these settings. That is, if any of these settings is\n"
		"changed from its default, it will retain its new setting until it is either\n"
		"explicitly changed again or the watch level is set to 0.\n"
		"\n"
		"Watching Productions\n"
		"\n"
		"By default, the names of the productions are printed as each production fires\n"
		"and retracts (at watch levels 3 and higher). However, it may be more helpful to\n"
		"watch only a specific type of production. The tracing of firings and\n"
		"retractions of productions can be limited to only certain types by the use of\n"
		"the following flags:\n"
		"\n"
		"Option Flag          Argument to Option Description\n"
		"-D, --default        remove (optional)  Control only default-productions as\n"
		"                                        they fire and retract\n"
		"-u, --user           remove (optional)  Control only user-productions as they\n"
		"                                        fire and retract\n"
		"-c, --chunks         remove (optional)  Control only chunks as they fire and\n"
		"                                        retract\n"
		"-j, --justifications remove (optional)  Control only justifications as they\n"
		"                                        fire and retract\n"
		"-T, --template       remote (optional)  Soar-RL template firing trace\n"
		"\n"
		"Note: The pwatch command is used to watch individual productions specified by\n"
		"name rather than watch a type of productions, such as --user.\n"
		"Additionally, when watching productions, users may set the level of detail to\n"
		"be displayed for WMEs that are added or retracted as productions fire and\n"
		"retract. Note that detailed information about WMEs will be printed only for\n"
		"productions that are being watched.\n"
		"\n"
		"Option Flag    Description\n"
		"-n, --nowmes   When watching productions, do not print any information about\n"
		"               matching wmes\n"
		"-t, --timetags When watching productions, print only the timetags for matching\n"
		"               wmes\n"
		"-f, --fullwmes When watching productions, print the full matching wmes\n"
		"\n"
		"Watching Learning\n"
		"\n"
		"Option Flag    Argument to Option            Description\n"
		"               noprint, print, or fullprint  Controls the printing of chunks/\n"
		"-L, --learning (see table below)             justifications as they are\n"
		"                                             created\n"
		"\n"
		"As Soar is running, it may create justifications and chunks which are added to\n"
		"production memory. The watch command allows users to monitor when chunks and\n"
		"justifications are created by specifying one of the following arguments to the\n"
		"--learning command:\n"
		"\n"
		"Argument  Alias Effect\n"
		"noprint   0     Print nothing about new chunks or justifications (default)\n"
		"print     1     Print the names of new chunks and justifications when created\n"
		"fullprint 2     Print entire chunks and justifications when created\n"
		"\n"
		"Watching other Functions\n"
		"\n"
		"Option Flag                 Argument to Option Description\n"
		"                                               Controls the printing of\n"
		"-b, --backtracing           remove (optional)  backtracing information when a\n"
		"                                               chunk or justification is\n"
		"                                               created\n"
		"                                               Controls the printing of the\n"
		"-i, --indifferent-selection remove (optional)  scores for tied operators in\n"
		"                                               random indifferent selection\n"
		"                                               mode\n"
		"-R, --rl                    remove (optional)  Soar-RL debugging trace\n"
		"\n"
		"Description\n"
		"\n"
		"The watch command controls the amount of information that is printed out as\n"
		"Soar runs. The basic functionality of this command is to trace various levels\n"
		"of information about Soar's internal workings. The higher the level, the\n"
		"more information is printed as Soar runs. At the lowest setting, 0 (--none),\n"
		"nothing is printed. The levels are cumulative, so that each successive level\n"
		"prints the information from the previous level as well as some additional\n"
		"information. The default setting for the level is 1, (--decisions).\n"
		"The numerical arguments inclusively turn on all levels up to the number\n"
		"specified. To use numerical arguments to turn off a level, specify a number\n"
		"which is less than the level to be turned off. For instance, to turn off\n"
		"watching of productions, specify --level 2 (or 1 or 0). Numerical arguments are\n"
		"provided for shorthand convenience. For more detailed control over the watch\n"
		"settings, the named arguments should be used.\n"
		"With no arguments, this command prints information about the current watch\n"
		"status, i.e., the values of each parameter.\n"
		"For the named arguments, including the named argument turns on only that\n"
		"setting. To turn off a specific setting, follow the named argument with remove\n"
		"or 0.\n"
		"The named argument --productions is shorthand for the four arguments --default,\n"
		"--user, --justifications, and --chunks.\n"
		"\n"
		"Examples\n"
		"\n"
		"The most common uses of watch are by using the numeric arguments which indicate\n"
		"watch levels. To turn off all printing of Soar internals, do any one of the\n"
		"following (not all possibilities listed):\n"
		"\n"
		"  watch --level 0\n"
		"  watch -l 0\n"
		"  watch -N\n"
		"\n"
		"Although the --level flag is optional, its use is recommended:\n"
		"\n"
		"  watch --level 5   # OK\n"
		"  watch 5           # OK, avoid\n"
		"\n"
		"Be careful of where the level is on the command line, for example, if you want\n"
		"level 2 and preferences:\n"
		"\n"
		"  watch -r -l 2 # Incorrect: -r flag ignored, level 2 parsed after it and\n"
		"  overrides the setting\n"
		"  watch -r 2    # Syntax error: 0 or remove expected as optional argument to -r\n"
		"  watch -r -l 2 # Incorrect: -r flag ignored, level 2 parsed after it and\n"
		"  overrides the setting\n"
		"  watch 2 -r    # OK, avoid\n"
		"  watch -l 2 -r # OK\n"
		"\n"
		"To turn on printing of decisions, phases and productions, do any one of the\n"
		"following (not all possibilities listed):\n"
		"\n"
		"  watch --level 3\n"
		"  watch -l 3\n"
		"  watch --decisions --phases --productions\n"
		"  watch -d -p -P\n"
		"\n"
		"Individual options can be changed as well. To turn on printing of decisions and\n"
		"wmes, but not phases and productions, do any one of the following (not all\n"
		"possibilities listed):\n"
		"\n"
		"  watch --level 1 --wmes\n"
		"  watch -l 1 -w\n"
		"  watch --decisions --wmes\n"
		"  watch -d --wmes\n"
		"  watch -w --decisions\n"
		"  watch -w -d\n"
		"\n"
		"To turn on printing of decisions, productions and wmes, and turns phases off,\n"
		"do any one of the following (not all possibilities listed):\n"
		"\n"
		"  watch --level 4 --phases remove\n"
		"  watch -l 4 -p remove\n"
		"  watch -l 4 -p 0\n"
		"  watch -d -P -w -p remove\n"
		"\n"
		"To watch the firing and retraction of decisions and only user productions, do\n"
		"any one of the following (not all possibilities listed):\n"
		"\n"
		"  watch -l 1 -u\n"
		"  watch -d -u\n"
		"\n"
		"To watch decisions, phases and all productions except user productions and\n"
		"justifications, and to see full wmes, do any one of the following (not all\n"
		"possibilities listed):\n"
		"\n"
		"  watch --decisions --phases --productions --user remove --justifications\n"
		"  remove --fullwmes\n"
		"  watch -d -p -P -f -u remove -j 0\n"
		"  watch -f -l 3 -u 0 -j 0\n"
		"\n"
		"See Also\n"
		"\n"
		"pwatch print run watch-wmes\n"
	;
	docstrings["watch-wmes"] = 
		"Print information about wmes matching a certain pattern as they are added and\n"
		"removed.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  watch-wmes -[a|r]  -t type  pattern\n"
		"  watch-wmes -[l|R] [-t type]\n"
		"\n"
		"Options\n"
		"\n"
		"-a, --add-filter    Add a filter to print wmes that meet the type and pattern\n"
		"                    criteria.\n"
		"-r, --remove-filter Delete filters for printing wmes that match the type and\n"
		"                    pattern criteria.\n"
		"-l, --list-filter   List the filters of this type currently in use. Does not\n"
		"                    use the pattern argument.\n"
		"-R, --reset-filter  Delete all filters of this type. Does not use pattern arg.\n"
		"-t, --type          Follow with a type of wme filter, see below.\n"
		"\n"
		"Pattern\n"
		"\n"
		"The pattern is an id-attribute-value triplet:\n"
		"\n"
		"  id attribute value\n"
		"\n"
		"Note that * can be used in place of the id, attribute or value as a wildcard\n"
		"that maches any string. Note that braces are not used anymore.\n"
		"\n"
		"Types\n"
		"\n"
		"When using the -t flag, it must be followed by one of the following:\n"
		"\n"
		"adds    Print info when a wme is added.\n"
		"removes Print info when a wme is retracted.\n"
		"both    Print info when a wme is added or retracted.\n"
		"\n"
		"When issuing a -R or -l, the -t flag is optional. Its absence is equivalent to\n"
		"-t both.\n"
		"\n"
		"Description\n"
		"\n"
		"This commands allows users to improve state tracing by issuing filter-options\n"
		"that are applied when watching wmes. Users can selectively define which object-\n"
		"attribute-value triplets are monitored and whether they are monitored for\n"
		"addition, removal or both, as they go in and out of working memory.\n"
		"Note: The functionality of watch-wmes resided in the watch command prior to\n"
		"Soar 8.6.\n"
		"\n"
		"Examples\n"
		"\n"
		"Users can watch an attribute of a particular object (as long as that object\n"
		"already exists):\n"
		"\n"
		"  soar> watch-wmes --add-filter -t both D1 speed *\n"
		"\n"
		"or print WMEs that retract in a specific state (provided the state already\n"
		"exists):\n"
		"\n"
		"  soar> watch-wmes --add-filter -t removes S3 * *\n"
		"\n"
		"or watch any relationship between objects:\n"
		"\n"
		"  soar> watch-wmes --add-filter -t both * ontop *\n"
	;
}
