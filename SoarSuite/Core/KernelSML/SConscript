#!/usr/bin/python

Import('env')
env = env.Clone()

env.Prepend(CPPPATH = ['src', '#SoarKernel/src', '#CLI/src', '#ElementXML/src', '#ConnectionSML/src'])

libadd = None
if not env['STATIC_LINKED']:
	libadd = ['CommandLineInterface', 'ConnectionSML', 'SoarKernel', 'sqlite3']

if env['SCU']:
	if env['STATIC_LINKED']:
		SoarKernelSML = env.Library('SoarKernelSML', 'KernelSML.cxx')
	else:
		SoarKernelSML = env.SharedLibrary('SoarKernelSML', 'KernelSML.cxx', LIBS = libadd, LIBPATH = '$PREFIX/lib')
else:
	if env['STATIC_LINKED']:
		SoarKernelSML = env.Library('SoarKernelSML', Glob('src/*.cpp'))
	else:
		SoarKernelSML = env.SharedLibrary('SoarKernelSML', Glob('src/*.cpp'), LIBS = libadd, LIBPATH = '$PREFIX/lib')

env.Install('$PREFIX/lib', SoarKernelSML)

# Install resources
env.Install('$PREFIX/share/soar', '#Documentation')
env.Clean('$PREFIX/share/soar', '$PREFIX/share/soar/Documentation')
env.Install('$PREFIX/share/soar', '#Demos')
env.Clean('$PREFIX/share/soar', '$PREFIX/share/soar/Demos')

