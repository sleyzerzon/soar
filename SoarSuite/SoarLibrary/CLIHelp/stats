                                     Stats

                                      Name

   stats - Print information on SoarA-c-a*NOTa"-c-s runtime statistics.

                                    Synopsis

 stats [-s|-m|-r]

                                    Options

   +------------------------------------------------------------------------+
   |-m, --memory|report usage for Soar's memory pools                       |
   |------------+-----------------------------------------------------------|
   |-r, --rete  |report statistics about the rete structure                 |
   |------------+-----------------------------------------------------------|
   |-s, --system|report the system (agent) statistics. This is the default  |
   |            |if no args are specified.                                  |
   +------------------------------------------------------------------------+

                                  Description

   This command prints Soar internal statistics. The argument indicates the
   component of interest.

   With the --system flag, the stats command lists a summary of run
   statistics, including the following:

     * Version --- The Soar version number, hostname, and date of the run.
     * Number of productions --- The total number of productions loaded in
       the system, including all chunks built during problem solving and all
       default productions.
     * Timing Information --- Might be quite detailed depending on the flags
       set at compile time. See note on timers below.
     * Decision Cycles --- The total number of decision cycles in the run and
       the average time-per-decision-cycle in milliseconds.
     * Elaboration cycles --- The total number of elaboration cycles that
       were executed during the run, the average number of elaboration cycles
       per decision cycle, and the average time-per-elaboration-cycle in
       milliseconds. This is not the total number of production firings, as
       productions can fire in parallel.
     * Production Firings --- The total number of productions that were
       fired.
     * Working Memory Changes --- This is the total number of changes to
       working memory. This includes all additions and deletions from working
       memory. Also prints the average match time.
     * Working Memory Size --- This gives the current, mean and maximum
       number of working memory elements.

   The optional stats argument --memory provides information about memory
   usage and Soar's memory pools, which are used to allocate space for the
   various data structures used in Soar.

   The optional stats argument --rete provides information about node usage
   in the Rete net, the large data structure used for efficient matching in
   Soar.

                                Default Aliases

   +-------------+
   |Alias|Maps to|
   |-----+-------|
   |st   |stats  |
   +-------------+

                                    See Also

   timers

                                A Note on Timers

   The current implementation of Soar uses a number of timers to provide
   time-based statistics for use in the stats command calculations. These
   timers are:

 total CPU time
 total kernel time
 phase kernel time (per phase)
 phase callbacks time (per phase)
 input function time
 output function time

   Total CPU time is calculated from the time a decision cycle (or number of
   decision cycles) is initiated until stopped. Kernel time is the time spent
   in core Soar functions. In this case, kernel time is defined as the all
   functions other than the execution of callbacks and the input and output
   functions. The total kernel timer is only stopped for these functions. The
   phase timers (for the kernel and callbacks) track the execution time for
   individual phases of the decision cycle (i.e., input phase, preference
   phase, working memory phase, output phase, and decision phase). Because
   there is overhead associated with turning these timers on and off, the
   actual kernel time will always be greater than the derived kernel time
   (i.e., the sum of all the phase kernel timers). Similarly, the total CPU
   time will always be greater than the derived total (the sum of the other
   timers) because the overhead of turning these timers on and off is
   included in the total CPU time. In general, the times reported by the
   single timers should always be greater than than the corresponding derived
   time. Additionally, as execution time increases, the difference between
   these two values will also increase. For those concerned about the
   performance cost of the timers, all the run time timing calculations can
   be compiled out of the code by defining NO_TIMING_STUFF (in soarkernel.h)
   before compilation.

   Categories: Command Line Interface
