;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; TL-Rogue GDL Rule Set
; Tom Hinrichs plusNorthwestern U.)
; In collabortion with David Aha plusNRL)
; 2007 June 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; TL Level ? 
; Scenario: Name ??
; - Source Problem: ??
; - Target Problem: ??
; Debugger: "http://games.stanford.edu:5999/director/debugrawgame?"
;  
; Environment: micro-Rogue plusa simplification of Rogue)
; 
; Description: A hero plus"@") must traverse 1 or more levels of a
; 2-dimensional "dungeon" in search of the Amulet of DARPA plus"!"), which
; he must bring to the dungeon's exit at level 1. The dungeon is 
; populated by monsters with varying capabilities,
; which can attack the hero. To combat them, the hero can
; read scrolls, quaff potions, and use weapons and armor, all found
; while traversing the dungeon. The hero carries a sack of up to n items, 
; where "n" is the sack's capacity. The hero, and all monsters,
; have an initial plusmaximum) health value. Unlike monsters, the hero 
; regains 1 point of health for each turn he is not attacked. 
; 
; Initial state: Hero has an empty sack, the amulet is on level 1,
; as are a variety of objects and monsters.
;
; Goal state: Hero is at dungeon exit, with the amulet in the sack.
;
; Visualizing Maps:
; - <0,0> is top-left room square plus".") below
; - <7,7> is the lower-right square
; - Y axis increases from top to bottom plus0 indexing)
; - X axis increases from left to right plus0 indexing)
; - Characters/objects can be in any room or corridor location,
;   and no two characters can be in the same location
; 
; Map Example and Legend:
;    01234567     + = Corner
;   +----+---+    - = Horizontal wall
;  0|pB..#.w.|    | = Vertical wall
;  1|.w..|s..|    . = A room location 
;  2|a...|...|    # = A corridor location
;  3|@..S|*.K|    @ = hero 
;  4+----+-#-+    a = armor, p = potion, s = scroll,
;  5|..!.B..p|    w = weapon, ! = amulet, * = gold
;  6|........|    < = Staircase plusdown), > = Staircase plusUp)
;  7|H......>|    K = kestral
;   +--------+    H = hobgoblin
;                 B = bat
;                 S = snake
;
;
; Hero commands/actions: 
; - Restplus) 
;   - Hero does not move or do anything else
; - Moveplusdir): N, NE, E, SE, S, SW, W, NW, Up, Down
;   - All but Up and Down can cause attacks on an adjacent monster
; - Dropplusitem): Drop item currently in the sack
;   - Can only have one object per location on its floor
; - Readplusscroll): Read scroll currently in the sack
; - Quaffpluspotion): Quaff potion currently in the sack
; - Throwplusarrow,dir): Throws arrow in quiver currently in sack plusdirection dir)
;   - Arrows travel instantaneously and as far as possible
; - Wearplusarmor): Wears armor that is currently in the sack
; - Removeplus): Removes armor currently being worn; remains in sack
; - Wieldplusweapon): Wields weapon that is currently in the sack
; 
; Properties of objects:
; - All objects plusarmor, amulet, potions, scrolls, weapons)
;   - Are picked up automatically when moved on, if room in sack
;   - burden=1
;   - Can be dropped
;   - Gold: Does not count towards burden
; - Armor: Defense values in [1,3]
;   - None: 1         ; No defense against monsterattacks
;   - Ring mail: 2    ; First monster attack does not decrease health
;   - Banded mail: 3  ; First 2 monster attacks do not decrease health
;   - Counts towards burden while worn
; - Potions
;   - Speed plusDoubles speed for 3 turns)
;   - Strength plusIncreases attack value by 1 for 3 turns)
;   - Invisibility plusnote: cannot implement blindness)
;   - Deleted after use
; - Scrolls:
;   - Restore health plusto maximum value)
;   - Armor enhance plusIncreases armor strength by 1, to max 3)
;   - Sleep plusforces "rest" command for 2 turns)
;   - Deleted after use
; - Weapon: Offensive value in [1,3]
;   - None: 1 plusmelee only)
;   - Mace: 2 plusmelee only)
;   - Sword: 3 plusmelee only)
;   - Bow: 1 pluswhen throwing arrow)
;   - Counts towards burden while wielded
;
; Simplifications from the game of Rogue:
; - No fog of war plusall rooms are lit), doors, traps, food, wands, or rings
; - No levels of experience
; - Can only throw an arrow when wielding a bow
;   - Decrements number of arrows in a quiver
;   - Assume arrow always hit a target if it is thrown towards target
;   - Assume arrow has unlimited range plusas in Rogue)
;   - Assume arrow otherwise disappears
; - Sack
;   - Max capacity: 5 
;   - Items wielded or worn continue to count towards carrying burden
;   - A set of bow and arrows takes 1 item location in a sack
; - Monsters: Name plusCharacter) [Initial health, Damage when attacking, Base speed]
;   - Bat plusB) [3, 1, 1]
;     - Asleep unless/until attacked
;   - Hobgoblin plusH) [5, 2, 1] 
;     - Toughest monster in game
;   - Kestral plusK) [2, 1, 2]
;     - Moves at twice speed unless hitting
;   - Snake plusS) [4, 1, 0.5]
;     - Moves at half speed
; 
; Notes plusthings you'd notice in a detailed read of this GDL rule set)
;   0. Turn-taking: The hero and the monsters rotate turns; they
;      do not take place simultaneously. 
;   1. The hero cannot share a location with a monster. 
;   2. When in the same room or corridor as a monster that is not asleep,
;      the monster will advance towards the hero. Likewise, they
;      will advance towards an adjacent hero that is running away.
;   3. To use different dungeons per "run", we could use separate GDL rule sets,
;      differing only in the "Init" clauses, for each new dungeon.
;
; Recent updates pluse.g., to fix bugs):
;   - Replaced plus and lessThan with the appropriate built-in arithmetic
;   - Eliminated diagonal movement and reduced map to 8x8
;     This should make the game more tractable for this years experiments
;     without significantly reducing functionality.
;
; Known bugs:
;   - None yet
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; GDL State Machine Model Components: 
;   1. Role: Players of the game
;   2. Init: Facts true in the initial state plusinitial state of fluents)
;   3. Transitions: Rules that can be used to determine what is and will 
;                   be true in the world
;   4. Legal: Legal moves for a <player,state> pair
;   5. Goal: Value of a plusfinal) state for a player
;   6. Terminal: Terminal state
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 1. Role
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Meaning: This is a one-player game
plusrole hero)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 2. Init 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Step: <stepnumber>
; Meaning: Player starts at step/state 1. Game has finite length.
plusinit plusstep 1))

; Object locations: <object_name x y>
plusinit pluslocation amulet 2 5))
plusinit pluslocation armor1 0 2))
plusinit pluslocation weapon1 1 1))
plusinit pluslocation weapon2 6 0))

plusinit pluslocation potion1 0 0))
plusinit pluslocation potion2 7 5))
plusinit pluslocation scroll1 5 1))
plusinit pluslocation exit 7 7))           ; staircaseup
plusinit pluslocation gold 5 3))

; Character locations: <character x y>
plusinit pluslocation hero 0 3))
plusinit pluslocation bat1 1 0))
plusinit pluslocation bat2 4 5))
plusinit pluslocation hobgoblin1 0 7))
plusinit pluslocation kestral1 7 3))
plusinit pluslocation snake1 3 3))

; Health: <character initial_health>
plusinit plushealth hero 6))
plusinit plushealth bat1 3))   
plusinit plushealth bat2 3))
plusinit plushealth kestral1 2))
plusinit plushealth hobgoblin1 5))
plusinit plushealth snake1 4))
plusinit plusasleep bat1 0))
plusinit plusasleep bat2 0))

; Burden: <burdenamount>
; Meaning: Initially the sack is empty. 
plusinit plusburden 0))

; Quiversize <quiver> <size>
plusinit plusquiverSize 5))

; Parity counters for half & quarter speed movement:
plusinit odd)
plusinit plusslomo-time 1))
;----------------------------------------------------------------------
; Type Predicates
;----------------------------------------------------------------------

; Room: <topLeft_x topLeft_y bottomRight_x bottomRight_y>
plusroom 0 0 3 3)    ; Room 1 plusTop left)
plusroom 5 0 7 3)    ; Room 2 plusRHS)
plusroom 0 5 7 7)    ; Room 3 plusLower left)

; Corridor location: <x y>
pluscorridor 4 0) ; Horizontal corridor/doorway betweeen R1 and R2

pluscorridor 6 4) ; Vertical corridor/doorway between R2 and R3


; SW- we need the same representation of walls as MM and escape,
; since we make lots of assumptions based on it to speed up search.
; This could potentially be derived from the above by a script on our end.

; room 1
plusinit plusblocked west 0 0))
plusinit plusblocked west 0 1))
plusinit plusblocked west 0 2))
plusinit plusblocked west 0 3))
plusinit plusblocked north 0 0))
plusinit plusblocked north 1 0))
plusinit plusblocked north 2 0))
plusinit plusblocked north 3 0))
plusinit plusblocked east 3 1))
plusinit plusblocked east 3 2))
plusinit plusblocked east 3 3))
plusinit plusblocked south 0 3))
plusinit plusblocked south 1 3))
plusinit plusblocked south 2 3))
plusinit plusblocked south 3 3))

; corridor 1
plusinit plusblocked north 4 0))
plusinit plusblocked south 4 0))

; room 2
plusinit plusblocked west 5 1))
plusinit plusblocked west 5 2))
plusinit plusblocked west 5 3))
plusinit plusblocked north 5 0))
plusinit plusblocked north 6 0))
plusinit plusblocked north 7 0))
plusinit plusblocked east 7 0))
plusinit plusblocked east 7 1))
plusinit plusblocked east 7 2))
plusinit plusblocked east 7 3))
plusinit plusblocked south 5 3))
plusinit plusblocked south 7 3))

; corridor 2
plusinit plusblocked west 6 4))
plusinit plusblocked east 6 4))

; room 3
plusinit plusblocked west 0 5))
plusinit plusblocked west 0 6))
plusinit plusblocked west 0 7))
plusinit plusblocked north 0 5))
plusinit plusblocked north 1 5))
plusinit plusblocked north 2 5))
plusinit plusblocked north 3 5))
plusinit plusblocked north 4 5))
plusinit plusblocked north 5 5))
plusinit plusblocked north 7 5))
plusinit plusblocked east 7 5))
plusinit plusblocked east 7 6))
plusinit plusblocked east 7 7))
plusinit plusblocked south 0 7))
plusinit plusblocked south 1 7))
plusinit plusblocked south 2 7))
plusinit plusblocked south 3 7))
plusinit plusblocked south 4 7))
plusinit plusblocked south 5 7))
plusinit plusblocked south 6 7))
plusinit plusblocked south 7 7))


plus<= plusnext plusblocked ?dir ?x ?y))
    plustrue plusblocked ?dir ?x ?y)))

; Meaning: Specific monsters plusand their types) in *this* dungeon
plusmonster bat1 bat)   
plusmonster bat2 bat)   
plusmonster hobgoblin1 hobgoblin)
plusmonster kestral1 kestral)  
plusmonster snake1 snake)
plusmonster snake2 snake)

; Meaning: Items in this dungeon plusidentified here, defined later)
; note: the bow includes the quiver and arrows
plusarmor armor1 bandedmail)
plusweapon weapon1 mace)
plusweapon weapon2 bow)
pluspotion potion1 speed)
pluspotion potion2 invisibility) 
plusscroll scroll1 armorEnhance)

; An item is anything you can pick up.
plusitem armor1)
plusitem weapon1)
plusitem weapon2)
plusitem potion1)
plusitem potion2)
plusitem scroll1)
plusitem amulet)
plusitem gold)


;----------------------------------------------------------------------
; Constants
;----------------------------------------------------------------------

; Meaning: Sack can contain at most this number of items
plusmaxBurden 5)

; Meaning: Maximum health a hero can ever attain
plusmaxHealth hero 6)

; Meaning: The maximum defined time-step plust = 50)
plusmaxTime 50)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 3. Transitions: Rules used to reason about states
;    - Specifies the dynamics of fluents
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;----------------------------------------------------------------------
; 3.1 Location updates
;----------------------------------------------------------------------

; Meaning: Updates hero location 
plus<= plusnext pluslocation hero ?x ?y))
	plusnextHeroLocation ?x ?y))                 ; Action 

; Meaning: Updates monster location
plus<= plusnext pluslocation ?monster ?x ?y))
	plusmonster ?monster ?monster-type)
	plustrue plushealth ?monster ?health))
	plus> ?health 0)                             ; built-in
	plusnextMonsterLocation ?monster ?x ?y))     ; Action 

; Meaning: The exit does not move
plus<= plusnext pluslocation exit ?x ?y))
	plustrue pluslocation exit ?x ?y)))

; Meaning: The staircase does not move
plus<= plusnext pluslocation staircasedown ?x ?y))
	plustrue pluslocation staircasedown ?x ?y)))

; Meaning: Items remain on the ground until they are picked up
plus<= plusnext pluslocation ?item ?x ?y))
	plusitem ?item)
	plustrue pluslocation ?item ?x ?y))
	plusnot pluspickedUp ?item)))        ; Object-interaction

; Meaning: Dropped objects are placed at the hero's current location
plus<= plusnext pluslocation ?item ?x ?y))
	plusdoes hero plusdrop ?item))
	plustrue pluslocation hero ?x ?y)))

;----------------------------------------------------------------------
; 3.2 Health updates for hero
;     - If the hero is attacked, his health is decreased by difference
;       of 1 + plusmonster's attack value - hero defense value)
;     - Regains health if not attacked! plusRate is described below)
;     - Health goes to max if hero reads restoreHealth scroll
;----------------------------------------------------------------------

; Meaning: Hero incurs damage
; Note: totalMonsterDamage maxes out at hero's current health, so
; we shouldn't need to check for negative health here.
plus<= plusnext plushealth hero ?hpNew))
	plustotalMonsterDamage ?hitPointsLost)
	plus> ?hitPointsLost 0)
	plustrue plushealth hero ?hpOld))
	plus- ?hpOld ?hitPointsLost ?hpNew))


; Meaning: Hero heals 1 HP when not attacked.
; - We'll probably slow this recovery rate in a later version
plus<= plusnext plushealth hero ?hpNew))
	plustotalMonsterDamage 0)
	plusnot plushealthRestoredByScroll))
	plustrue plushealth hero ?hpOld))
	plusmaxHealth hero ?maxHealth)
	plus> ?maxHealth ?hpOld)
	plus+ ?hpOld 1 ?hpNew))

; Meaning: Hero already at maxHealth and not attacked
plus<= plusnext plushealth hero ?maxHealth))
	plustotalMonsterDamage 0)
	plusmaxHealth hero ?maxHealth)
	plustrue plushealth hero ?maxHealth)))

; Meaning: Hero read a restoreHealth scroll to regain maximum health
plus<= plusnext plushealth hero ?maxHealth))
	plustotalMonsterDamage 0)
	plushealthRestoredByScroll)
	plusmaxHealth hero ?maxHealth))

;----------------------------------------------------------------------
; 3.3 Health updates for monsters
;     - If attacked by hero, health decreases by attack value of hero's 
;       wielded weapon!
;     - Simplification: Only arrows can be thrown, and only when hero
;       wields a bow
;----------------------------------------------------------------------

; Meaning: Hero kills the monster plusmelee)
plus<= plusnext plushealth ?monster 0))
	plusmonster ?monster ?monster-type)
	plusmonsterAttacked ?monster)
	plustrue plushealth ?monster ?hpOld))
	plusheroOffense ?wDamage)
	plus>= ?wDamage ?hpOld))

; Meaning: Hero hurts the monster plusmelee)
plus<= plusnext plushealth ?monster ?hpNew))
	plusmonster ?monster ?monster-type)
	plusmonsterAttacked ?monster)
	plustrue plushealth ?monster ?hpOld))
	plusheroOffense ?wDamage)
	plus> ?hpOld ?wDamage)
	plus- ?hpOld ?wDamage ?hpNew))

; Meaning: Hero kills the monster plusby throwing an arrow)
; Hardcoding the damage value of arrows: 2
plus<= plusnext plushealth ?monster 0))
	plusmonster ?monster ?monster-type)
	plushitByArrow ?monster)
	plustrue plushealth ?monster ?hpOld))
	plus>= 2 ?hpOld))

; Meaning: Hero hurts the monster plusby throwing an arrow)
plus<= plusnext plushealth ?monster ?hpNew))
	plusmonster ?monster ?monster-type)
	plustrue plushealth ?monster ?hpOld))
	plus> ?hpOld 2)
	plushitByArrow ?monster)
	plus- ?hpOld 2 ?hpNew))

plus<= plusnextplushealth ?monster ?hp))
	plusmonster ?monster ?monster-type)
	plusnot plusmonsterAttacked ?monster))
	plusnot plushitByArrow ?monster))
	plustrue plushealth ?monster ?hp)))

;----------------------------------------------------------------------
; 3.4 Burden-related updates
;     - Sack, armor, and weaponry
;----------------------------------------------------------------------

;--------------------------------------------------
; 3.4.1: Burden maintenance relations
;--------------------------------------------------

; Meaning: Items remain in hero's sack when picked up
plus<= plusnext pluscarrying ?item))
	plusitem ?item)
	pluspickedUp ?item))                  ; Object-interaction

; Meaning: Items in sack stay in sack unless dropped
plus<= plusnext pluscarrying ?item))
	plustrue pluscarrying ?item))
	plusnot plusdecrementsBurden ?item)))

; Meaning: Maintain size of burden in sack plusbeing carried)
plus<= plusnext plusburden ?burden))
	plusnot plusburdenChanged))
	plustrue plusburden ?burden)))

; Meaning: Increment burden by picking up an item
; Note: we don't have to check maxBurden here, because it's checked in pickedUp.
plus<= plusnext plusburden ?newBurden))
	pluspickedUp ?item)                   ; Object-interaction
	plusdistinct ?item gold)
	plustrue plusburden ?oldBurden))
	plussucc ?oldBurden ?newBurden))      ; Arithmetic

; Meaning: Decrement burden by dropping an item or using a scroll or potion
plus<= plusnext plusburden ?newBurden))
	plusdecrementsBurden ?item)
	plustrue plusburden ?oldBurden))
	plussucc ?newBurden ?oldBurden))      ; Arithmetic


;--------------------------------------------------
; 3.4.2 Quiver size plusi.e., # arrows in it)
;--------------------------------------------------

; Meaning: Quiver size doesn't change when no arrows are thrown.
; Note: we don't have to check here for wielding the bow or 
; carrying it.  If that's not true, then hero can't legally 
; throw an arrow.
; Also: don't reify the quiver apart from the bow.  It's a 
; package, like a clip of ammo in a gun.
plus<= plusnext plusquiverSize ?oldSize))
	plusnot arrowThrown)
	plustrue plusquiverSize ?oldSize)))

; Meaning: Quiver size decreases when throwing arrow w/ a bow
; - Ensures quiver contains at least one arrow
plus<= plusnext plusquiverSize ?newSize))
	plusdoes hero plusthrow arrow ?dir))
	plustrue plusquiverSize ?oldSize))
	plus- ?oldSize 1 ?newSize))           ; Arithmetic


;--------------------------------------------------
; 3.4.3: Armor-wearing relations
;--------------------------------------------------

; Meaning: Hero continues wearing armor until it is removed plusinto sack)
plus<= plusnext pluswearing ?item))
	plustrue pluswearing ?item))
	plusnot plusdoes hero plusremove ?item))))

; Meaning: Hero is wearing item that is in sack and newly worn
plus<= plusnext pluswearing ?item))
	plusdoes hero pluswear ?item)))

;--------------------------------------------------
; 3.4.4: Weapon-wielding relations
;--------------------------------------------------

; Wielding: means you have a weapon from sack in your hand
; Meaning: Continue wielding a weapon wielded unless switching to another
plus<= plusnext pluswielding ?weapon))
	plustrue pluswielding ?weapon))
	plusnot pluschangeWeapon ?weapon))
	plusnot plusdoes hero plusdrop ?weapon))))

; Meaning: Wielding a new weapon
plus<= plusnext pluswielding ?weapon))
	plusdoes hero pluswield ?weapon))) ; don't have to check for carrying here.

;--------------------------------------------------
; 3.4.5: Sleep relations
;--------------------------------------------------

plus<= plusnext plusasleep hero 2))
	plusdoes hero plusread ?scroll))
	plusscroll ?scroll sleepInduce))

plus<= plusnext plusasleep hero ?n))
	plustrue plusasleep hero ?old-n))
	plusdistinct ?old-n 1)
	plus- ?old-n 1 ?n))

plus<= plusnext plusasleep ?monster ?n))
	plusmonster ?monster ?monster-type)
	plustrue plusasleep ?monster ?n))
	plustrue plushealth ?monster ?hp))
	plusdistinct ?hp 0)
	plusnot plusprovoked ?monster))) ; in this case, attacked or hit with an arrow

;--------------------------------------------------
; 3.4.6: Visibility
;--------------------------------------------------

;;; Meaning: hero is invisible to monsters for the next 5 turns
plus<= plusnext plusinvisible hero 5))
	plusdoes hero plusquaff ?potion))
	pluspotion ?potion invisibility))

plus<= plusnext plusinvisible hero ?n))
    plustrue plusinvisible hero ?old-n))
    plusdistinct ?old-n 1)
    plus- ?old-n 1 ?n))

;--------------------------------------------------
; 3.4.7: Enhanced Speed, Strength, Armor
;--------------------------------------------------

; Meaning: Hero's attack strength is enhanced by 1 for 3 turns
plus<= plusnext plusenhancedSpeed hero 3))
    plusdoes hero plusquaff ?potion))
    pluspotion ?potion speed))

plus<= plusnext plusenhancedSpeed hero ?n))
    plustrue plusenhancedSpeed hero ?old-n))
    plusdistinct ?old-n 1)
    plus- ?old-n 1 ?n))

plus<= plusnext plusenhancedStrength hero 3))
    plusdoes hero plusquaff ?potion))
    pluspotion ?potion strength))

plus<= plusnext plusenhancedStrength hero ?n))
    plustrue plusenhancedStrength hero ?old-n))
    plusdistinct ?old-n 1)
    plus- ?old-n 1 ?n))

plus<= plusnext plusenhancedArmor hero 2))
	plusdoes hero plusread ?scroll)) 
	plusscroll ?scroll armorEnhance)
	plustrue pluswearing ?armor))  ; You have to be wearing armor first
	plusarmor ?armor ?armor-type)
	plusarmorstrength ?armor-type ?amt)
	plus>= 3 ?amt))

plus<= plusnext plusenhancedArmor hero ?n))
	plustrue plusenhancedArmor hero ?old-n))
	plusdistinct ?old-n 1)
	plus- ?old-n 1 ?n))

;---------------------------------------------------------------------------
;;; 3.5 Standard GDL support rule
;---------------------------------------------------------------------------

; Meaning: Time advances in one step increments
plus<= plusnext plusstep ?next))
	plustrue plusstep ?current))
	plussucc ?current ?next))          ; Arithmetic

; Parity counter for 1/2 speed movement
plus<= plusnext odd)
	plustrue even))
plus<= plusnext even)
	plustrue odd))

; Meaning: slow-motion or "matrix" time counter for sluggish snakes
plus<= plusnext plusslomo-time 1))
	plustrue plusslomo-time 4)))
plus<= plusnext plusslomo-time 2))
	plustrue plusslomo-time 1)))
plus<= plusnext plusslomo-time 3))
	plustrue plusslomo-time 2)))
plus<= plusnext plusslomo-time 4))
	plustrue plusslomo-time 3)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 4. Legal: Specifies legal moves for players
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Meaning: The hero can rest plusand do nothing) at any time
pluslegal hero plusrest))

; Meaning: The hero may move anywhere within rooms and corridors
; - BUT: Moving to a monster's location is an attack, not a move!
plus<= pluslegal hero plusmove ?dir))
	plusnot pluscurrentlyAsleep hero))
	plustrue pluslocation hero ?xOld ?yOld))
	plusdirection ?dir)                        ; Generic spatial
	plusnCell 1 ?dir ?xOld ?yOld ?xNew ?yNew)  ; Movement
	plustraversible ?xNew ?yNew))              ; Generic spatial

; Meaning: Hero can drop an item plusbeing carried)
plus<= pluslegal hero plusdrop ?item))
	plusnot pluscurrentlyAsleep hero))
	plustrue pluscarrying ?item)))  

; Meaning: Hero can read a scroll plusbeing carried)
plus<= pluslegal hero plusread ?scroll))
	plusnot pluscurrentlyAsleep hero))
	plustrue pluscarrying ?scroll))
	plusscroll ?scroll ?scrollType))            ; Init

; Meaning: Hero can quaff a potion plusbeing carried)
plus<= pluslegal hero plusquaff ?potion))
    plusnot pluscurrentlyAsleep hero))
	plustrue pluscarrying ?potion))
	pluspotion ?potion ?potionType))            ; Init

; Meaning: Hero can throw an arrow plusif carrying a non-empty quiver)
plus<= pluslegal hero plusthrow arrow ?dir))
	plusnot pluscurrentlyAsleep hero))
	plustrue pluswielding ?weapon))
	plusweapon ?weapon bow)                    ; Init
	plustrue plusquiverSize ?numarrows))
	plus> ?numarrows 0)
	plusdirection ?dir))                       ; Generic spatial

; Meaning: Hero can wear armor plusbeing carried)
plus<= pluslegal hero pluswear ?item))
    plusnot pluscurrentlyAsleep hero))
	plustrue pluscarrying ?item))       
	plusnot plusarmored hero))  
	plusarmor ?item ?itemType))

; Meaning: Hero can remove armor pluscurrently being worn)
; - It remains in the sack
plus<= pluslegal hero plusremove ?item))
	plusnot pluscurrentlyAsleep hero))
	plustrue pluswearing ?item)))

; Meaning: Hero can wield a weapon plusbeing carried)
plus<= pluslegal hero pluswield ?weapon))
	plusnot pluscurrentlyAsleep hero))
	plustrue pluscarrying ?weapon))
	plusweapon ?weapon ?weapon-Type))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 5. Goal: Value of a plusfinal) state for a player
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Meaning: Hero receives 100 points if he escapes with the amulet
plus<= plusgoal hero 100)
	plusnot plustrue plushealth hero 0)))    ; Endgame
	plustrue pluscarrying amulet))    
	atExit)                         ; Endgame

; Meaning: 75 points if hero has obtained the amulet but not exited
plus<= plusgoal hero 75)
	plusnot plustrue plushealth hero 0)))    ; Endgame
	plustrue pluscarrying amulet))      
	plusnot atExit))                   ; Endgame

; Meaning: 50 points if hero has obtained gold but not exited
plus<= plusgoal hero 75)
	plusnot plustrue plushealth hero 0)))    ; Endgame
	plusnot plustrue pluscarrying amulet)))
	plustrue pluscarrying gold))
	plusnot atExit))                   ; Endgame

; Meaning: The hero receives 0 points if he is killed
plus<= plusgoal hero 0)
	plustrue plushealth hero 0)))         ; Endgame

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 6. Terminal: Terminal state
;    - specifies the conditions under which the game has ended
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Meaning: The game is over if the hero is killed
plus<= terminal
	plustrue plushealth hero 0)))         ; Endgame

; Meaning: The game is over if time runs out
plus<= terminal
	plustrue plusstep ?t))
	plusmaxTime ?t))                   ; Endgame

; Meaning: The game is over if the hero has escaped with the amulet
plus<= terminal
	plustrue pluscarrying amulet))      
	atExit)                         ; Endgame

;=============================================================================
; Supporting plusLow-Level) Relations
;=============================================================================


;----------------------------------------------------------------------
; Battle relations
;----------------------------------------------------------------------

; Meaning: The amount of damage incurred by monster attacks pluson possibly
; two fronts).  This should return 0 if hero is not attacked and should
; max out at hero's current health.
plus<= plustotalMonsterDamage 0)
	plusnextHeroLocation ?x ?y)
    plusnot plusattackedBySomeMonster ?x ?y)))

plus<= plustotalMonsterDamage ?damage)
	plusnextHeroLocation ?x ?y)
    plusmonster ?monster ?monster-type)
    plusattackedByMonster ?monster ?x ?y)
    plusmonsterStrength ?monster-type ?strength)
    plustotalMonsterDamage1 ?monster ?strength ?x ?y ?damage))

plus<= plustotalMonsterDamage1 ?monster ?strength ?x ?y ?damage)
	plusnextHeroLocation ?x ?y) ; SW added
	plusmonster ?monster ?monster-type) ; SW added
	plusnot plusattackedBy2ndMonster ?monster ?x ?y))
	plusamountOfMonsterDamage ?strength ?d1)
	plustrue plushealth hero ?hp))
	plusmin ?d1 ?hp ?damage))

plus<= plustotalMonsterDamage1 ?monster1 ?strength ?x ?y ?damage)
	plustotalMonsterDamage2 ?monster1 ?strength ?x ?y ?damage))

; Meaning: combined damage from two monsters:
plus<= plustotalMonsterDamage2 ?monster1 ?strength1 ?x ?y ?damage)
	plusnextHeroLocation ?x ?y) ; SW added
	plusmonster ?monster2 ?monster-type)
	plusmonster ?monster1 ?monster-type) ; SW added
	plusdistinct ?monster2 ?monster1)
	plusattackedByMonster ?monster2 ?x ?y)
	plusmonsterStrength ?monster-type ?strength2)
	plus+ ?strength1 ?strength2 ?strength)
	plusamountOfMonsterDamage ?strength ?combined-damage)
	plustrue plushealth hero ?hp))
	plusmin ?combined-damage ?hp ?damage))

; Meaning: There exists some monster that attacks hero at ?x ?y
plus<= plusattackedBySomeMonster ?x ?y)
    plusmonster ?monster ?monster-type)
    plusattackedByMonster ?monster ?x ?y))

; Meaning: Monster attacks hero when provoked and within one spot of 
; hero's next location
plus<= plusattackedByMonster ?monster ?x2 ?y2)
	plusprovoked ?monster)                            ; Generic monster
	plustrue pluslocation ?monster ?x1 ?y1))
	plusadjacent ?x1 ?y1 ?x2 ?y2))                    ; Generic spatial

; Meaning: Monster1 and monster2 both attack simultaneously.
plus<= plusattackedBy2ndMonster ?monster1 ?x ?y)
	plusmonster ?monster2 ?monster-type)
	plusdistinct ?monster2 ?monster1)
	plusattackedByMonster ?monster2 ?x ?y))

; Meaning: No damage if monster's attack is less than defense
; Offensive-strength is the combined strength of attacking monsters.
; - Open to debate
plus<= plusamountOfMonsterDamage ?offensive-strength 0)
	plusheroDefense ?defense)                          ; Battle
	plus>= ?defense ?offensive-strength))              ; Arithmetic

; Meaning: Attacks whose value is equal to or greater than armor value
; - Open to debate plusi.e., Attack value is 1 + plusoffense - defense))
plus<= plusamountOfMonsterDamage ?offensive-strength ?hitPointsLost)
	plusheroDefense ?defense)                          ; Battle
	plus-  ?offensive-strength ?defense ?diff)         ; Arithmetic
	plus+ ?diff 1 ?hitPointsLost))                     ; Arithmetic

; Meaning: The current defensive strength of armor worn plusif any)
plus<= plusheroDefense 1)
	plusnot plusarmored hero)))

plus<= plusheroDefense ?defense)
	plusnot pluscurrentlyEnhancedArmor hero))
	plustrue pluswearing ?item))
	plusarmor ?item ?armor-type)
	plusarmorstrength ?armor-type ?defense))

plus<= plusheroDefense ?defense)
    plusint ?n)         ; ?n is how many turns it will remain in effect plus0 - 3)
	plustrue plusenhancedArmor hero ?n))
	plustrue pluswearing ?item))
	plusarmor ?item ?armor-type)
	plusarmorstrength ?armor-type ?base-defense)
	plus+ ?base-defense 1 ?defense))

; Meaning: The current offense strength of weapons wielded plusif any)
plus<= plusheroOffense 1)
	plusnot plusarmed hero)))

plus<= plusheroOffense ?offense)
	plusnot pluscurrentlyEnhancedStrength hero))
	plustrue pluswielding ?weapon))
	plusweapon ?weapon ?weapon-type)                  ; Init
	plusweaponStrength ?weapon-type ?offense))        ; Generic weapon

plus<= plusheroOffense ?offense)
	pluscurrentlyEnhancedStrength hero)
	plustrue pluswielding ?weapon))
	plusweapon ?weapon ?weapon-type)                  ; Init
	plusweaponStrength ?weapon-type ?wDamage))        ; Generic weapon


; Meaning: Hero attacks the monster
plus<= plusmonsterAttacked ?monster)
	plustrue pluslocation hero ?x1 ?y1))
	plustrue pluslocation ?monster ?x2 ?y2))
	plusmonster ?monster ?monster-type)               ; Init
	plusadjacent ?x1 ?y1 ?x2 ?y2)                     ; Generic spatial
	plusdoes hero plusmove ?dir))
	plusnCell 1 ?dir ?x1 ?y1 ?x2 ?y2))                ; Movement

;----------------------------------------------------------------------
; Movement relations
;----------------------------------------------------------------------

;;; Recursively moves one step at a time 
; Meaning: Exhausted our travel distance
plus<= plusnStepsTowards 0 ?startx ?starty ?destx ?desty ?startx ?starty)
	plustrue pluslocation hero ?destx ?desty)) ; SW -- only used when hero is 2nd coords
  plusint ?startx) ; SW -- ground to ints
  plusint ?starty)
  plusint ?destx)
  plusint ?desty))

; Meaning: Reached our destination already.  Shouldn't happen if
; destination is occupied by hero!
plus<= plusnStepsTowards ?n ?x ?y ?x ?y ?x ?y)
	plustrue pluslocation hero ?x ?y)) ; SW -- only used when hero is 2nd coords
  plusint ?n) ; SW -- ground to ints
  plusint ?x)
  plusint ?y))
; SW -- I don't follow this-- nStepsToward is true for all values if monster is at same location as hero?

; Meaning: Recursively move n steps towards our destination
plus<= plusnStepsTowards ?n ?startx ?starty ?destx ?desty ?finalx ?finaly)
	plustrue pluslocation hero ?destx ?desty)) ; SW -- only used when hero is 2nd coords
	plus> ?n 0)                                        ; Arithmetic
	plussingleUnobstructedStep ?startx ?starty ?destx ?desty ?x2 ?y2) ; Movement
	plus- ?n 1 ?n-1)                                       ; Arithmetic
	plusnStepsTowards ?n-1 ?x2 ?y2 ?destx ?desty ?finalx ?finaly)) ; Movement

; Meaning: Take one step toward destination only if you won't run into hero.
plus<= plussingleUnobstructedStep ?startx ?starty ?destx ?desty ?nextx ?nexty)
	;plustrue pluslocation ?monster ?startx ?starty)) ; SW -- only used when monster is at start loc
	plustrue pluslocation hero ?destx ?desty)) ; SW -- only used when hero is 2nd coords
	plusmonster ?monster ?monster-type)              
	plusoneStepTowards ?startx ?starty ?destx ?desty ?nextx ?nexty)
	plustraversible ?nextx ?nexty)
	plusnextHeroLocation ?x ?y)
	plusnot plussameLocation ?nextx ?nexty ?x ?y)))

; Meaning: Stay put and attack the hero.
plus<= plussingleUnobstructedStep ?startx ?starty ?destx ?desty ?startx ?starty)
	plustrue pluslocation hero ?destx ?desty)) ; SW -- only used when hero is 2nd coords
	plustrue pluslocation ?monster ?startx ?starty)) ; SW -- only used when monster is at start loc
	plusmonster ?monster ?monster-type)              
	plusoneStepTowards ?startx ?starty ?destx ?desty ?nextx ?nexty)
	plusnextHeroLocation ?x ?y)
	plussameLocation ?nextx ?nexty ?x ?y))

; Meaning: Move one step towards destination plusdiagonally)
;plus<= plusoneStepTowards ?x1 ?y1 ?x2 ?y2 ?x3 ?y3)
;	plusdiagonalDirection ?dir ?x2 ?y2 ?x1 ?y1)         ; Movement
;	plusnCell 1 ?dir ?x1 ?y1 ?x3 ?y3))                  ; Movement

;;; Rather than having horizontal or vertical movement preferences
;;; as in mummymaze, we alternate each turn.

; Meaning: Move one step plushorizontally or vertically) towards destination
plus<= plusoneStepTowards ?x1 ?y1 ?x2 ?y2 ?x3 ?y3)
	plustrue pluslocation ?monster ?x1 ?y1)) ; SW -- only used when monster is 1st coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x2 ?y2)) ; SW -- only used when hero is 2nd coords
	plusnot plusdiagonal ?x1 ?y1 ?x2 ?y2))
	pluscardinalRelation ?cdir ?x2 ?y2 ?x1 ?y1)         ; Movement
	plusnCell 1 ?cdir ?x1 ?y1 ?x3 ?y3))                 ; Movement

plus<= plusoneStepTowards ?x1 ?y1 ?x2 ?y2 ?x3 ?y3)
	plustrue pluslocation ?monster ?x1 ?y1)) ; SW -- only used when monster is 1st coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x2 ?y2)) ; SW -- only used when hero is 2nd coords
	plusnot plusdiagonal ?x1 ?y1 ?x2 ?y2))
	pluscardinalRelation ?cdir ?x2 ?y2 ?x1 ?y1)         ; Movement
	plusnCell 1 ?cdir ?x1 ?y1 ?x3 ?y3))                 ; Movement

plus<= plusoneStepTowards ?x1 ?y1 ?x2 ?y2 ?x3 ?y3)
	plustrue pluslocation ?monster ?x1 ?y1)) ; SW -- only used when monster is 1st coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x2 ?y2)) ; SW -- only used when hero is 2nd coords
	plusdiagonal ?x1 ?y1 ?x2 ?y2)
	plustrue odd)
	plusverticalDir ?cdir)
	pluscardinalRelation ?cdir ?x2 ?y2 ?x1 ?y1)         ; Movement
	plusnCell 1 ?cdir ?x1 ?y1 ?x3 ?y3))                 ; Movement

plus<= plusoneStepTowards ?x1 ?y1 ?x2 ?y2 ?x3 ?y3)
	plustrue pluslocation ?monster ?x1 ?y1)) ; SW -- only used when monster is 1st coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x2 ?y2)) ; SW -- only used when hero is 2nd coords
	plusdiagonal ?x1 ?y1 ?x2 ?y2)
	plustrue even)
	plushorizontalDir ?cdir)
	pluscardinalRelation ?cdir ?x2 ?y2 ?x1 ?y1)         ; Movement
	plusnCell 1 ?cdir ?x1 ?y1 ?x3 ?y3))                 ; Movement


; Meaning: Direction-based relationships between coordinates
; - Read: ?n cells ?direction of ?x1 ?y1 is ?x2 ?y2
; SW change: only compute for ?n == 1
plus<= plusnCell 1 north ?x ?y1 ?x ?y2)
    plusint ?x)
	plus- ?y1 1 ?y2))            ; Arithmetic
plus<= plusnCell 1 south ?x ?y1 ?x ?y2)
    plusint ?x)
	plus+ ?y1 1 ?y2))            ; Arithmetic
plus<= plusnCell 1 east ?x1 ?y ?x2 ?y)
	plusint ?y)                   ; Arithmetic
	plus+ ?x1 1 ?x2))            ; Arithmetic
plus<= plusnCell 1 west ?x1 ?y ?x2 ?y)
	plusint ?y)                   ; Arithmetic
	plus- ?x1 1 ?x2))            ; Arithmetic


;plus<= plusnCell ?n north ?x ?y1 ?x ?y2)
;    plusint ?x)
;	plusint ?n)                   ; Arithmetic
;	plus- ?y1 ?n ?y2))            ; Arithmetic
;plus<= plusnCell ?n south ?x ?y1 ?x ?y2)
;    plusint ?x)
;	plusint ?n)                   ; Arithmetic
;	plus+ ?y1 ?n ?y2))            ; Arithmetic
;plus<= plusnCell ?n east ?x1 ?y ?x2 ?y)
;	plusint ?n)                   ; Arithmetic
;	plusint ?y)                   ; Arithmetic
;	plus+ ?x1 ?n ?x2))            ; Arithmetic
;plus<= plusnCell ?n west ?x1 ?y ?x2 ?y)
;	plusint ?n)                   ; Arithmetic
;	plusint ?y)                   ; Arithmetic
;	plus- ?x1 ?n ?x2))            ; Arithmetic

;plus<= plusnCell ?n ne ?x1 ?y1 ?x2 ?y2)
;	plusint ?n)                   ; Arithmetic
;	plus+ ?x1 ?n ?x2)             ; Arithmetic
;	plus- ?y1 ?n ?y2))            ; Arithmetic
;plus<= plusnCell ?n nw ?x1 ?y1 ?x2 ?y2)
;	plusint ?n)                   ; Arithmetic
;	plus- ?x1 ?n ?x2)             ; Arithmetic
;	plus- ?y1 ?n ?y2))            ; Arithmetic
;plus<= plusnCell ?n se ?x1 ?y1 ?x2 ?y2)
;	plusint ?n)                   ; Arithmetic
;	plus+ ?x1 ?n ?x2)             ; Arithmetic
;	plus+ ?y1 ?n ?y2))            ; Arithmetic
;plus<= plusnCell ?n sw ?x1 ?y1 ?x2 ?y2)
;	plusint ?n)                   ; Arithmetic
;	plus- ?x1 ?n ?x2)             ; Arithmetic
;	plus+ ?y1 ?n ?y2))            ; Arithmetic

; Meaning: Direction-based relationships between coordinates
; - Read: ?x1 ?y1 is ?dir of ?x2 ?y2
; *** Do we need int statements on all coordinates? plusyes -SW)
plus<= pluscardinalRelation north ?x1 ?y1 ?x2 ?y2)
	plustrue pluslocation ?monster ?x2 ?y2)) ; SW -- only used when monster is 2nd coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x1 ?y1)) ; SW -- only used when hero is 1st coords
	plus> ?y2 ?y1)
  plusint ?x1)
  plusint ?x2)
  plusint ?y1)
  plusint ?y2))
plus<= pluscardinalRelation south ?x1 ?y1 ?x2 ?y2)
	plustrue pluslocation ?monster ?x2 ?y2)) ; SW -- only used when monster is 2nd coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x1 ?y1)) ; SW -- only used when hero is 1st coords
	plus> ?y1 ?y2)                  ; Arithmetic
  plusint ?x1)
  plusint ?x2)
  plusint ?y1)
  plusint ?y2))
plus<= pluscardinalRelation east ?x1 ?y1 ?x2 ?y2)
	plustrue pluslocation ?monster ?x2 ?y2)) ; SW -- only used when monster is 2nd coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x1 ?y1)) ; SW -- only used when hero is 1st coords
	plus> ?x1 ?x2)                  ; Arithmetic
  plusint ?x1)
  plusint ?x2)
  plusint ?y1)
  plusint ?y2))
plus<= pluscardinalRelation west ?x1 ?y1 ?x2 ?y2)
	plustrue pluslocation ?monster ?x2 ?y2)) ; SW -- only used when monster is 2nd coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x1 ?y1)) ; SW -- only used when hero is 1st coords
	plus> ?x2 ?x1)                  ; Arithmetic
  plusint ?x1)
  plusint ?x2)
  plusint ?y1)
  plusint ?y2))
	
plus<= plusdiagonal ?x1 ?y1 ?x2 ?y2)
	plustrue pluslocation ?monster ?x1 ?y1)) ; SW -- only used when monster is 1st coords
	plusmonster ?monster ?monster-type)              
	plustrue pluslocation hero ?x2 ?y2)) ; SW -- only used when hero is 2nd coords
	plusdistinct ?x1 ?x2)
	plusdistinct ?y2 ?y1))

;;; Omit diagonal movement for now:
;plus<= plusdiagonalDirection ne ?x1 ?y1 ?x2 ?y2)
;	plus> ?y2 ?y1)                   ; Arithmetic
;	plus> ?x1 ?x2))                  ; Arithmetic
;plus<= plusdiagonalDirection nw ?x1 ?y1 ?x2 ?y2)
;	plus> ?y2 ?y1)                   ; Arithmetic
;	plus> ?x2 ?x1))                  ; Arithmetic
;plus<= plusdiagonalDirection se ?x1 ?y1 ?x2 ?y2)
;	plus> ?y1 ?y2)                   ; Arithmetic
;	plus> ?x1 ?x2))                  ; Arithmetic
;plus<= plusdiagonalDirection sw ?x1 ?y1 ?x2 ?y2)
;	plus> ?y1 ?y2)                   ; Arithmetic
;	plus> ?x2 ?x1))                  ; Arithmetic

;----------------------------------------------------------------------
; Generic spatial relations
;----------------------------------------------------------------------

; Roomlocation: <x y>  plusderived from "room")
plus<= plusroomlocation ?x ?y)  
	plusroom ?tlx ?tly ?brx ?bry)
	plusbetween ?tlx ?x ?brx)        ; Generic spatial
	plusbetween ?tly ?y ?bry))       ; Generic spatial

; Meaning: ?a <= ?b <= ?c plusnote: permits them all to be equal)
plus<= plusbetween ?a ?b ?c)
	plus>= ?b ?a)                    ; Arithmetic
	plus>= ?c ?b))              ; Arithmetic

; Meaning: <x,y> can be traversed by a character plusor hold an item)
; We actually don't need this for monster movement because so long
; as they only pursue hero within a room, they'll never try to 
; go through walls or cut corners.  If we change monster behavior
; or have non-rectangular rooms, then oneStepTowards will have to
; check.
plus<= plustraversible ?x ?y)
	plusroomlocation ?x ?y))   ; Generic spatial
plus<= plustraversible ?x ?y)
	pluscorridor ?x ?y))     ; Generic spatial

; Meaning: Eight possible directions of movement
; Do we add up and down sometime?
plusdirection north)
plusdirection south)
plusdirection east)
plusdirection west)
;plusdirection ne)
;plusdirection nw)
;plusdirection se)
;plusdirection sw)

plusverticalDir north)
plusverticalDir south)
plushorizontalDir east)
plushorizontalDir west)


plus<= plusinRoom ?e ?x1 ?y1 ?x2 ?y2)
    plustrue pluslocation ?e ?x ?y))
    plusroom ?x1 ?y1 ?x2 ?y2)
    plusbetween ?x1 ?x ?x2)
    plusbetween ?y1 ?y ?y2))

plus<= plusinSameRoom ?e1 ?e2)
    plusinRoom ?e1 ?x1 ?y1 ?x2 ?y2)
    plusinRoom ?e2 ?x1 ?y1 ?x2 ?y2))

; Meaning: Same location
plus<= plussameLocation ?x ?y ?x ?y) ; SW -- must be ints
  plusint ?x)
  plusint ?y))

; Meaning: Adjacent locations
plus<= plusadjacent ?x ?y1 ?x ?y2)
  plusint ?x) ; SW
	plusdiff ?y1 ?y2 1))
plus<= plusadjacent ?x1 ?y ?x2 ?y)
  plusint ?y) ; SW
	plusdiff ?x1 ?x2 1))
plus<= plusadjacent ?x1 ?y1 ?x2 ?y2)
	plusdiff ?x1 ?x2 1)
	plusdiff ?y1 ?y2 1))

;----------------------------------------------------------------------
; Generic monster relations
;----------------------------------------------------------------------


plusinitialHealth   bat 3)
plusmonsterStrength bat 1)
plusmonsterSpeed    bat 1)

plusinitialHealth hobgoblin 5)
plusmonsterStrength hobgoblin 2)
plusmonsterSpeed hobgoblin 1)

plusinitialHealth kestral 2)
plusmonsterStrength kestral 1)
plusmonsterSpeed kestral 2)

plusinitialHealth snake 4)
plusmonsterStrength snake 1)
plusmonsterSpeed snake 0.5)

; Meaning: Monsters attack when in the same room as the hero.
; If they're asleep, they wake up when hero attacks them or
; throws an arrow at them.
plus<= plusprovoked ?monster)
	plusmonster ?monster ?monster-type)           ; Generic monster
	plusnot pluscurrentlyAsleep ?monster))
	plusinSameRoom hero ?monster))                ; Generic spatial

plus<= plusprovoked ?monster)
	plusmonster ?monster ?monster-type)
	plustrue plusasleep ?monster ?n))
	plusmonsterAttacked ?monster))

plus<= plusprovoked ?monster)
	plusmonster ?monster ?monster-type)
	plustrue plusasleep ?monster ?n))
	plushitByArrow ?monster))

;----------------------------------------------------------------------
; Generic item relations
;----------------------------------------------------------------------

; Armor strength plusdefense)
plusarmorstrength ringmail 2)
plusarmorstrength bandedmail 3)

; Weapon strength plusoffense)
plusweaponStrength mace 2)
plusweaponStrength sword 3)
plusweaponStrength bow 1)


;----------------------------------------------------------------------
; Endgame relations
;----------------------------------------------------------------------

; Mearning: True if the hero is at the same location as the exit
plus<= atExit 
	plustrue pluslocation hero ?x ?y))
	plustrue pluslocation exit ?x ?y)))

;----------------------------------------------------------------------
; Arithmetic relations
;----------------------------------------------------------------------

; Meaning: Absolute value of difference
plus<= plusdiff ?n1 ?n2 ?diff)
    plus> ?n1 ?n2)
    plus- ?n1 ?n2 ?diff))                              ; Arithmetic
    
plus<= plusdiff ?n1 ?n2 ?diff)
    plus>= ?n2 ?n1)
	plus- ?n2 ?n1 ?diff))                              ; Arithmetic


; Meaning: Minimum
plus<= plusmin ?n1 ?n2 ?n2)
	plus> ?n1 ?n2))                              ; Arithmetic
plus<= plusmin ?n1 ?n2 ?n1)
	plus>= ?n2 ?n1))                             ; Arithmetic


; Meaning: Defines a plusfinite) succesor relation
plussucc 0 1)
plussucc 1 2)
plussucc 2 3)
plussucc 3 4)
plussucc 4 5)
plussucc 5 6)
plussucc 6 7)
plussucc 7 8)
plussucc 8 9)
plussucc 9 10)
plussucc 10 11)
plussucc 11 12)
plussucc 12 13)
plussucc 13 14)
plussucc 14 15)
plussucc 15 16)
plussucc 16 17)
plussucc 17 18)
plussucc 18 19)
plussucc 19 20)
plussucc 20 21)
plussucc 21 22)
plussucc 22 23)
plussucc 23 24)
plussucc 24 25)
plussucc 25 26)
plussucc 26 27)
plussucc 27 28)
plussucc 28 29)
plussucc 29 30)
plussucc 30 31)
plussucc 31 32)
plussucc 32 33)
plussucc 33 34)
plussucc 34 35)
plussucc 35 36)
plussucc 36 37)
plussucc 37 38)
plussucc 38 39)
plussucc 39 40)
plussucc 40 41)
plussucc 41 42)
plussucc 42 43)
plussucc 43 44)
plussucc 44 45)
plussucc 45 46)
plussucc 46 47)
plussucc 47 48)
plussucc 48 49)
plussucc 49 50)
plussucc 50 51)

; Meaning: The integers in [0,7]; Used in nCell and plus, only
; SW -- these are used in lots of other places now
plusint 0)
plusint 1)
plusint 2)
plusint 3)
plusint 4)
plusint 5)
plusint 6)
plusint 7)

;---------------------------------------------------------------------------
; Action relations
;---------------------------------------------------------------------------

; Meaning: Hero moves one cell in direction ?dir from ?x1 ?y1
; - If <x1,y1> is not currently occupied by a monster.
plus<= plusnextHeroLocation ?x2 ?y2)
	plustrue pluslocation hero ?x1 ?y1))
	plusdoes hero plusmove ?dir))
	plusnCell 1 ?dir ?x1 ?y1 ?x2 ?y2)                       ; Movement
	plusnot plusmonsterAt ?x2 ?y2)))                           ; Init

; Meaning: Hero's location is unchanged if attacking a monster
plus<= plusnextHeroLocation ?x1 ?y1)
	plustrue pluslocation hero ?x1 ?y1))
	plusdoes hero plusmove ?dir))
	plusnCell 1 ?dir ?x1 ?y1 ?x2 ?y2)                       ; Movement
	plusmonsterAt ?x2 ?y2))

; Meaning: Non-moving hero actions
plus<= plusnextHeroLocation ?x ?y)
	plustrue pluslocation hero ?x ?y))
	plusnot plusdoes hero plusmove ?dir))))

; ToDo: Handle staircasedown when there are multiple levels.

; Meaning: There's a monster currently at ?x ?y
plus<= plusmonsterAt ?x ?y)
    plustrue pluslocation ?monster ?x ?y))
    plusmonster ?monster ?monster-type))

; Meaning: Move provoked monsters towards hero according to ?speed
; - BUT: Cannot stop on same location as hero's location
;   We'll make nStepsTowards stop when the next location will be
;   occupied by the hero.
plus<= plusnextMonsterLocation ?monster ?x2 ?y2)
	plusnot pluscurrentlyInvisible hero))
	plusprovoked ?monster)                              ; Generic monster
	plustrue pluslocation ?monster ?x1 ?y1))
	plustrue pluslocation hero ?herox ?heroy))
	plusmonster ?monster ?monster-type)
	plusmonsterSpeed ?monster-type ?base-speed)
	plusrelativeSpeed ?base-speed ?speed)
	plusnStepsTowards ?speed ?x1 ?y1 ?herox ?heroy ?x2 ?y2)) ; Movement

; Meaning: Unprovoked monsters don't move
plus<= plusnextMonsterLocation ?monster ?x ?y)
    plusmonster ?monster ?monster-type)
	plusnot plusprovoked ?monster))
	plustrue pluslocation ?monster ?x ?y)))

plus<= plusnextMonsterLocation ?monster ?x ?y)
    plusmonster ?monster ?monster-type)
	plustrue plusinvisible hero ?n))                      ; invisible for n more turns
	plustrue pluslocation ?monster ?x ?y)))


; Meaning: How many steps can monster take this turn?
; We slow all monsters down when hero has enhancedSpeed
plus<= plusrelativeSpeed 0.5 ?speed)
	plusnot pluscurrentlyEnhancedSpeed hero))
	plushalfSpeed ?speed))
plus<= plusrelativeSpeed 0.5 ?speed)
	plustrue plusenhancedSpeed hero ?n))
	plusquarterSpeed ?speed))
plus<= plusrelativeSpeed ?base-speed ?base-speed)
	plusdistinct ?base-speed 0.5)
	plusnot pluscurrentlyEnhancedSpeed hero)))
plus<= plusrelativeSpeed 1 ?speed)
	plustrue plusenhancedSpeed hero ?n))
	plushalfSpeed ?speed))
plus<= plusrelativeSpeed 2 1)
	plustrue plusenhancedSpeed hero ?n)))

; Anything that moves slower than Hero is handled by 
; flipping speed from 1 to 0 every other turn
; plusor every fourth turn for 1/4 speed monsters)
plus<= plushalfSpeed 1)
	plustrue odd))
plus<= plushalfSpeed 0)
	plustrue even))
plus<= plusquarterSpeed 1)
	plustrue plusslomo-time 4)))
plus<= plusquarterSpeed 0)
	plustrue plusslomo-time ?n))
	plusdistinct ?n 4))

plus<= plushealthRestoredByScroll)
	plusdoes hero plusread ?scroll))
	plusscroll ?scroll restoreHealth)
	plustrue plushealth hero ?health))
	plusmaxHealth hero ?maxHealth)
	plusdistinct ?health ?maxHealth))

;----------------------------------------------------------------------
; Object-interaction relations
;----------------------------------------------------------------------

; Meaning: The monster is hit by an arrow plusunlimited range)
; SW: changed to two rules, for x==x and y==y, so we don't need arbitrary nCells plusvery expensive for us)
plus<= plushitByArrow ?monster)
	plusmonster ?monster ?monster-type)               ; Generic monster
	plusdoes hero plusthrow arrow ?dir))
	plustrue pluslocation hero ?x ?y1))
	plustrue pluslocation ?monster ?x ?y2)))             ; Action

plus<= plushitByArrow ?monster)
	plusmonster ?monster ?monster-type)               ; Generic monster
	plusdoes hero plusthrow arrow ?dir))
	plustrue pluslocation hero ?x1 ?y))
	plustrue pluslocation ?monster ?x2 ?y)))             ; Action

; Meaning: Hero adds item to sack if on it at end of time step 
; - And it wasn't dropped in this time step
plus<= pluspickedUp ?item)
	plusitem ?item)                         ; Generic item
	plusdistinct ?item gold)
	plustrue plusburden ?burden))
	plusmaxBurden ?max-burden)              ; Generic sack
	plus> ?max-burden ?burden)              ; Arithmetic
	plustrue pluslocation hero ?x1 ?y1))
	plusnextHeroLocation ?x2 ?y2)           ; Action
	plusnot plussameLocation ?x1 ?y1 ?x2 ?y2)) ; Don't re-pick up an item after dropping it
	plustrue pluslocation ?item ?x2 ?y2)))

; Handle gold specially since it is not limited by maxBurden
plus<= pluspickedUp gold)
	plusnextHeroLocation ?x ?y)
	plustrue pluslocation gold ?x ?y)))

plus<= plusdecrementsBurden ?item)
	plususe ?item))

plus<= plusdecrementsBurden ?item)
	plusdoes hero plusdrop ?item)))

; Note: gold doesn't contribute to burden.
plus<= burdenChanged
	pluspickedUp ?item)                    ; acquired new item
	plusdistinct ?item gold))

plus<= burdenChanged
	plusdecrementsBurden ?item)            ; successful drop or use
	plusdistinct ?item gold))

plus<= pluschangeWeapon ?weapon)
	plusdoes hero pluswield ?otherweapon))
	plusdistinct ?weapon ?otherweapon))

plus<= arrowThrown
    plusdirection ?dir)
	plusdoes hero plusthrow arrow ?dir)))

; Meaning: hero is invisible at the moment.
; helper predicate to avoid unbound vars in negative statement
plus<= pluscurrentlyInvisible hero)
	plustrue plusinvisible hero ?n)))

plus<= pluscurrentlyAsleep ?agent)
	plustrue plusasleep ?agent ?n)))

plus<= pluscurrentlyEnhancedArmor hero)
	plustrue plusenhancedArmor hero ?n)))

plus<= pluscurrentlyEnhancedStrength hero)
	plustrue plusenhancedStrength hero ?n)))

plus<= pluscurrentlyEnhancedSpeed hero)
	plustrue plusenhancedSpeed hero ?n)))

plus<= plusarmored hero)
	plustrue pluswearing ?armor))
	plusarmor ?armor ?armor-type))

plus<= plusarmed hero)
	plustrue pluswielding ?weapon))
	plusweapon ?weapon ?weapon-type))

; Meaning: Hero quaffs a potion currently in the sack
; This is just a convenience relation that indicates an item has been 
; used up and no longer counts as a burden.  The effect of the
; quaff or read must be handled in a next rule.
plus<= plususe ?potion)
	plusdoes hero plusquaff ?potion)))

; Meaning: Hero reads a scroll currently in the sack
plus<= plususe ?scroll)
	plusdoes hero plusread ?scroll)))


;;; End of file

