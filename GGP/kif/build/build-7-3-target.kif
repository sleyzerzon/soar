;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * mini-Build Transfer Problem: Level 7, Scenario 3 -- Pyramids           *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: August    29, 2007                                          *
;;;; * Revised:   September 14, 2007                                          *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a pyramid from objects of three different types. The bottom 
;;;;   blocks must be reinforced, and only one type of object is reinforceable.
;;;;   The pyramid must also contain an alignment of 3 blocks on the right 
;;;;   side.
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (reinforce b1 steel-bar)
;;;;   (reinforce b2 steel-bar)
;;;;   (reinforce b3 steel-bar)
;;;;   (place-adjacent i1 i2 right)
;;;;   (place-adjacent o1 o2 right)
;;;;   (place-adjacent o2 o1 right)
;;;;
;;;; Visualization of the initial state:
;;;; 7
;;;; 6   O_
;;;; 5   01
;;;; 4   I___
;;;; 3   0001
;;;; 2 B___B___B_I___O___
;;;; 1 000200030100020002
;;;; 0 ++++g1++++++++++++
;;;;   012345678901234567
;;;;
;;;; Visualization of the final state:
;;;; 7
;;;; 6     O___O_
;;;; 5     000201
;;;; 4   I___I___   
;;;; 3   00010002    
;;;; 2 B___B___B_
;;;; 1 0002000301
;;;; 0 ++++g1++++++++++++
;;;;   012345678901234567

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state.
;;;             These will not change during the game.

(max-movable-weight 100)
(max-time 10)

;;; (material-type ?type)
(material-type ground)
(material-type cinder-block)
(material-type iron)
(material-type oak)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type steel-bar cinder-block)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties steel-bar 2 2)

;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (time 0))

(init (count steel-bar 3))

(init (object-type g1 ground))
(init (object-type b1 cinder-block))
(init (object-type b2 cinder-block))
(init (object-type b3 cinder-block))
(init (object-type i1 iron))
(init (object-type i2 iron))
(init (object-type o1 oak))
(init (object-type o2 oak))

(init (object-dimensions g1 18 1))
(init (object-dimensions b1 2 2))
(init (object-dimensions b2 4 2))
(init (object-dimensions b3 4 2))
(init (object-dimensions i1 4 2))
(init (object-dimensions i2 4 2))
(init (object-dimensions o1 2 2))
(init (object-dimensions o2 4 2))

(init (object-location g1 0 0))
(init (object-location b1 8 1))
(init (object-location b2 0 1))
(init (object-location b3 4 1))
(init (object-location i1 2 3))
(init (object-location i2 10 1))
(init (object-location o1 2 5))
(init (object-location o2 14 1))

(init (object-load g1 292))
(init (object-load b1 0))
(init (object-load b2 22))
(init (object-load b3 22))
(init (object-load i1 4))
(init (object-load i2 0))
(init (object-load o1 0))
(init (object-load o2 0))

(init (object-strength g1 1000))
(init (object-strength b1 12))
(init (object-strength b2 24))
(init (object-strength b3 24))
(init (object-strength i1 12))
(init (object-strength i2 12))
(init (object-strength o1 2))
(init (object-strength o2 4))

(init (object-weight g1 1000))
(init (object-weight b1 40))
(init (object-weight b2 80))
(init (object-weight b3 80))
(init (object-weight i1 40))
(init (object-weight i2 40))
(init (object-weight o1 4))
(init (object-weight o2 8))

(init (pyramid i1 4))

(init (tower i1 4))
(init (tower o1 6))


;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (true (pyramid ?object 6))
    (right-alignment ?object1 ?object2 ?object3)
    (not structural-failure))

(<= (goal agent 0)
    (collapsed ?object))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) Maximum time-step reached

(<= terminal
    (true (pyramid ?object 6))
    (right-alignment ?object1 ?object2 ?object3))

(<= terminal
    (collapsed ?object))

(<= terminal
    (true (time ?t))
    (max-time ?t))

;;; ---------------------------------------------------------------------------
;;; END build-7-3-target.kif
