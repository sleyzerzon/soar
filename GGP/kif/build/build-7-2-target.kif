;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * mini-Build Transfer Problem: Level 7, Scenario 2 -- Stairs             *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: August    29, 2007                                          *
;;;; * Revised:   September 11, 2007                                          *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a stairway that climbs to the right by constructing towers
;;;;   of increasing height. The agent must rearrange blocks from three
;;;;   initial stacks of 3 or 4, and then place them such that the stairway is 
;;;;   formed. Note: the block material has changed.
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (place-adjacent s7 s1 right)
;;;;   (place-adjacent s1 s2 top)
;;;;   (place-adjacent s2 s3 top)
;;;;   (place-adjacent s1 s8 right)
;;;;   (place-adjacent s8 s9 top)
;;;;   (place-adjacent s8 s10 right)
;;;;
;;;; Visualization of the initial state:
;;;; 8         S_
;;;; 7         04        
;;;; 6 S_      S_      S_
;;;; 5 01      05      08 
;;;; 4 S_      S_      S_ 
;;;; 3 02      06      09 
;;;; 2 S_      S_      S_ 
;;;; 1 03      07      10
;;;; 0 ++++++++g1+++++++++
;;;;   0123456789012345678
;;;;
;;;; Visualization of the final state:
;;;; 8         S_
;;;; 7         04        
;;;; 6         S_S_        
;;;; 5         0503       
;;;; 4         S_S_S_
;;;; 3         060209     
;;;; 2         S_S_S_S_         
;;;; 1         07010810        
;;;; 0 ++++++++g1+++++++++
;;;;   0123456789012345678

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state.
;;;             These will not change during the game.

(max-movable-weight 100)
(max-time 10)

;;; (material-type ?type)
(material-type ground)
;(material-type concrete)
(material-type steel)
;(material-type wood)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type titanium steel)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties titanium 2 2)

;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (time 0))

(init (count titanium 0))

(init (object-type g1 ground))
(init (object-type s1 steel))
(init (object-type s2 steel))
(init (object-type s3 steel))
(init (object-type s4 steel))
(init (object-type s5 steel))
(init (object-type s6 steel))
(init (object-type s7 steel))
(init (object-type s8 steel))
(init (object-type s9 steel))
(init (object-type s10 steel))

(init (object-dimensions g1 19 1))
(init (object-dimensions s1 2 2))
(init (object-dimensions s2 2 2))
(init (object-dimensions s3 2 2))
(init (object-dimensions s4 2 2))
(init (object-dimensions s5 2 2))
(init (object-dimensions s6 2 2))
(init (object-dimensions s7 2 2))
(init (object-dimensions s8 2 2))
(init (object-dimensions s9 2 2))
(init (object-dimensions s10 2 2))

(init (object-location g1 0 0))
(init (object-location s1 0 5))
(init (object-location s2 0 3))
(init (object-location s3 0 1))
(init (object-location s4 8 7))
(init (object-location s5 8 5))
(init (object-location s6 8 3))
(init (object-location s7 8 1))
(init (object-location s8 16 5))
(init (object-location s9 16 3))
(init (object-location s10 16 1))

(init (object-load g1 80))
(init (object-load s1 0))
(init (object-load s2 8))
(init (object-load s3 16))
(init (object-load s4 0))
(init (object-load s5 8))
(init (object-load s6 16))
(init (object-load s7 24))
(init (object-load s8 0))
(init (object-load s9 8))
(init (object-load s10 16))

(init (object-strength g1 1000))
(init (object-strength s1 24))
(init (object-strength s2 24))
(init (object-strength s3 24))
(init (object-strength s4 24))
(init (object-strength s5 24))
(init (object-strength s6 24))
(init (object-strength s7 24))
(init (object-strength s8 24))
(init (object-strength s9 24))
(init (object-strength s10 24))

(init (object-weight g1 1000))
(init (object-weight s1 8))
(init (object-weight s2 8))
(init (object-weight s3 8))
(init (object-weight s4 8))
(init (object-weight s5 8))
(init (object-weight s6 8))
(init (object-weight s7 8))
(init (object-weight s8 8))
(init (object-weight s9 8))
(init (object-weight s10 8))

(init (tower s1 6))
(init (tower s2 4))
(init (tower s4 8))
(init (tower s5 6))
(init (tower s6 4))
(init (tower s8 6))
(init (tower s9 4))


;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (stairway left)
    (not structural-failure))

(<= (goal agent 0)
    (collapsed ?object))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) Maximum time-step reached

(<= terminal
    (stairway left))

(<= terminal
    (collapsed ?object))

(<= terminal
    (true (time ?t))
    (max-time ?t))

