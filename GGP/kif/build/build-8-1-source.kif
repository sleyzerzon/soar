;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * mini-Build Transfer Problem: Level 8, Scenario 1 -- Tower              *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: August 29, 2007                                             *
;;;; * Revised:   August 31, 2007                                             *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a tower 11 units high by first constructing an arch 5 units
;;;;   high, then stacking three blocks on top of it. This is the only possible
;;;;   solution structure (I think) for to this problem, as the material
;;;;   properties are insufficient to allow a taller arch, and a shorter arch
;;;;   would no longer meet the basic requirements in the arch definition.
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (place-adjacent c1 c3 top)
;;;;   (place-adjacent c2 c4 top)
;;;;   (place-adjacent c4 c5 top)
;;;;   (place-adjacent c5 c6 top)
;;;;   (place-adjacent c6 c7 top)
;;;;   (place-adjacent c7 c8 top)
;;;;
;;;; Visualization of the initial state:
;;;; 0
;;;; 9
;;;; 8
;;;; 7
;;;; 6          C
;;;; 5          06
;;;; 4          C
;;;; 3     C  C 07
;;;; 2C  C 03 04C
;;;; 101 02[C05]08
;;;; 0++++g1++++++
;;;;  012345678901
;;;;
;;;; Visualization of the final state:
;;;; 1C
;;;; 008
;;;; 9C
;;;; 807
;;;; 7C
;;;; 606
;;;; 5[C05] 
;;;; 4C  C  
;;;; 303 04    
;;;; 2C  C     
;;;; 101 02    
;;;; 0++++g1++++++
;;;;  0123456789

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state.
;;;             These will not change during the game.

(max-movable-weight 100)
(max-time 10)

;;; (material-type ?type)
(material-type ground)
(material-type concrete)
(material-type steel)
(material-type wood)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type rebar concrete)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties rebar 2 2)

;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (time 0))

(init (count rebar 0))

(init (object-type g1 ground))
(init (object-type c1 concrete))
(init (object-type c2 concrete))
(init (object-type c3 concrete))
(init (object-type c4 concrete))
(init (object-type c5 concrete))
(init (object-type c6 concrete))
(init (object-type c7 concrete))
(init (object-type c8 concrete))

(init (object-dimensions g1 12 1))
(init (object-dimensions c1 2 2))
(init (object-dimensions c2 2 2))
(init (object-dimensions c3 2 2))
(init (object-dimensions c4 2 2))
(init (object-dimensions c5 5 1))
(init (object-dimensions c6 2 2))
(init (object-dimensions c7 2 2))
(init (object-dimensions c8 2 2))

(init (object-location g1 0 0))
(init (object-location c1 0 1))
(init (object-location c2 3 1))
(init (object-location c3 5 2))
(init (object-location c4 8 2))
(init (object-location c5 5 1))
(init (object-location c6 10 5))
(init (object-location c7 10 3))
(init (object-location c8 10 1))

(init (object-load g1 58))
(init (object-load c1 0))
(init (object-load c2 0))
(init (object-load c3 0))
(init (object-load c4 0))
(init (object-load c5 16))
(init (object-load c6 0))
(init (object-load c7 8))
(init (object-load c8 16))

(init (object-strength g1 1000))
(init (object-strength c1 28))
(init (object-strength c2 28))
(init (object-strength c3 28))
(init (object-strength c4 28))
(init (object-strength c5 70))
(init (object-strength c6 28))
(init (object-strength c7 28))
(init (object-strength c8 28))

(init (object-weight g1 1000))
(init (object-weight c1 8))
(init (object-weight c2 8))
(init (object-weight c3 8))
(init (object-weight c4 8))
(init (object-weight c5 10))
(init (object-weight c6 8))
(init (object-weight c7 8))
(init (object-weight c8 8))

(init (tower c3 3))
(init (tower c4 3))
(init (tower c6 6))
(init (tower c7 4))


;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (true (tower ?object 11))
    (not structural-failure))

(<= (goal agent 0)
    (collapsed ?object))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) Maximum time-step reached

(<= terminal
    (true (tower ?object 11)))

(<= terminal
    (collapsed ?object))

(<= terminal
    (true (time ?t))
    (max-time ?t))
