
#sp {prefer*place-adjacent
#	(state <s> ^operator <o1> +)
#	(<o1> ^name place-adjacent)
#-->
#	(<s> ^operator <o1> >)
#}

#sp {prefer*reinforce
#	(state <s> ^operator <o1> +)
#	(<o1> ^name reinforce)
#-->
#	(<s> ^operator <o1> > =)
#}

#sp {prefer*add-to-compound
#	(state <s> ^operator <o1> +)
#	(<o1> ^name add-to-compound)
#-->
#	(<s> ^operator <o1> >)
#}

#sp {reject*not*add-to-compound
#	(state <s> ^operator <o1> +)
#	(<o1> ^name << nudge rotate reinforce brace place-adjacent >>)
#-->
#	(<s> ^operator <o1> -)
#}

#sp {prefer*reinforce*than*other
#	(state <s> ^operator <o1> + <o2> +)
#	(<o1> ^name <> reinforce)
#	(<o2> ^name reinforce)
#-->
#	(<s> ^operator <o2> > <o1>)
#}

#sp {prefer*place-top*than*place-adjacent
#	(state <s> ^operator <o1> + <o2> +)
#	(<o1> ^name place-adjacent ^p3 top)
#	(<o2> ^name place-adjacent ^p3 <> top)
#-->
#	(<s> ^operator <o1> > <o2>)
#}


#current evaluation depth
sp {selection*propose*init-current-evaluation-depth*top-selection
   (state <s> ^name selection
              ^top-selection true
             -^current-evaluation-depth
             -^superstate.elaborations.minimum-explorer-exit-distance)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name init-current-evaluation-depth
         ^value 1)
}


sp {monitor*operators
	(state <s> ^operator.name <oname>)
-->
	(write (crlf) <s> |: | <oname> (crlf))
}

sp {build*monitor*init
   (state <s> ^name game
^superstate nil)
-->
(<s> ^depth-from-top 0)
}

sp {elaborate*depth*from*top
(state <s> ^duplicate-of <ss>)
(<ss> ^depth-from-top <depth>)
-->
(<s> ^depth-from-top (+ 1 <depth>))
}

sp {build-monitor*print*info*1p
	(state <s> ^superstate <ss> ^depth-from-top <dft> ^current-evaluation-depth <cur-dep> ^tried-tied-operator.duplicate-of <op> ^state-analyzed)
	(<ss> ^remaining-operators <remaining> ^item-count <branching-factor>)
	-(state <s2> ^duplicate-of <s>)
	(<op> ^name <oname> ^p1 <v1> -^p2)
-->
	(write (crlf) |Depth-from-top | <dft> (crlf) |Operator | <oname> | | <v1> (crlf) |Branching factor | <branching-factor> (crlf)|Remaining branches | <remaining> (crlf) |Remaining depth limit | <cur-dep> (crlf))
}

sp {build-monitor*print*info*2p
	(state <s> ^superstate <ss> ^depth-from-top <dft> ^current-evaluation-depth <cur-dep> ^tried-tied-operator.duplicate-of <op> ^state-analyzed)
	(<ss> ^remaining-operators <remaining> ^item-count <branching-factor>)
	-(state <s2> ^duplicate-of <s>)
	(<op> ^name <oname> ^p1 <v1> ^p2 <v2> -^p3)
-->
	(write (crlf) |Depth-from-top | <dft> (crlf) |Operator | <oname> | | <v1> | | <v2> (crlf) |Branching factor | <branching-factor> (crlf)|Remaining branches | <remaining> (crlf) |Remaining depth limit | <cur-dep> (crlf))
}

sp {build-monitor*print*info*3p
	(state <s> ^superstate <ss> ^depth-from-top <dft> ^current-evaluation-depth <cur-dep> ^tried-tied-operator.duplicate-of <op> ^state-analyzed)
	(<ss> ^remaining-operators <remaining> ^item-count <branching-factor>)
	-(state <s2> ^duplicate-of <s>)
	(<op> ^name <oname> ^p1 <v1> ^p2 <v2> ^p3 <v3> -^p4)
-->
	(write (crlf) |Depth-from-top | <dft> (crlf) |Operator | <oname> | | <v1> | | <v2> | | <v3> (crlf) |Branching factor | <branching-factor> (crlf)|Remaining branches | <remaining> (crlf) |Remaining depth limit | <cur-dep> (crlf))
}

sp {build-monitor*print*info*4p-or-more
	(state <s> ^superstate <ss> ^depth-from-top <dft> ^current-evaluation-depth <cur-dep> ^tried-tied-operator.duplicate-of <op>  ^state-analyzed)
	(<ss> ^remaining-operators <remaining> ^item-count <branching-factor>)
	-(state <s2> ^duplicate-of <s>)
	(<op> ^name <oname> ^p1 <v1> ^p2 <v2> ^p3 <v3> ^p4 <v4>)
-->
	(write (crlf) |Depth-from-top | <dft> (crlf) |Operator | <oname> | | <v1> | | <v2> | | <v3> | | <v4> (crlf) |Branching factor | <branching-factor> (crlf)|Remaining branches | <remaining> (crlf) |Remaining depth limit | <cur-dep> (crlf))
}


sp {ebalorate*new-tower
   (state <s> ^name game
              ^elaborations <e>
			  ^duplicate-of <prev-s>)
	(<e> ^tower.p1 <t>)
	(<prev-s> -^elaborations.tower.p1 <t>) #new tower
-->
	(<s> ^new-tower <t>)
}

#A tower may disppear if an adjacent object on left/rigth is added to the compound
sp {ebalorate*disappearing*tower
   (state <s> ^name game
              ^elaborations <e>
			  ^duplicate-of <prev-s>)
	(<e> -^tower.p1 <t>)
	(<prev-s> ^elaborations.tower.p1 <t>) #disappearing tower
-->
	(<s> ^disappearing-tower <t>)
}

#sp {ebalorate*higher-tower
#   (state <s> ^name game
#              ^elaborations <e>
#			  ^duplicate-of <prev-s>
#			  ^gs <gs>)
#	(<gs> ^object-size <size>)
#	(<size> ^p1 <t> ^p3 <height>)
#	(<e> ^tower.p1 <t>)
#	(<prev-s> ^elaborations.tower.p1 <t> ^gs.object-size <old-size>)
#	(<old-size> ^p1 <t> ^p3 {<old-height> < <height>})
#-->
#	(<s> ^higher-tower <t>)
#}


#sp {apply*analyze-state*bump*new-tower*test
#   (state <s> ^name game
#              ^operator.name analyze-state
#			  ^gs <gs>
#              ^current-evaluation-depth <ced>)
#	(<s> ^new-tower <t>
#		-^disappearing-tower)
#	(<gs> ^object-size <size>)
#	(<size> ^p1 <t> ^p3 <height>)
#-->
#   (<s> ^current-evaluation-depth <ced> -
#                                  (+ <ced> 1))
#   (write (crlf) |Bump 1 due to appearence of tower | <t> | of height | <height> (crlf))
#}

sp {apply*analyze-state*bump*higher-tower*test
   (state <s> ^name game
              ^operator.name analyze-state
			  ^gs <gs>
              ^current-evaluation-depth <ced>)
	(<s> ^higher-tower <t>)
	(<gs> ^object-size <size>)
	(<size> ^p1 <t> ^p3 <height>)
-->
   (<s> ^current-evaluation-depth <ced> -
                                  (+ <ced> 1))
   (write (crlf) |Bump 1 due to higher tower | <t> | of height | <height> (crlf))
}

#decreasing may cause duplicatedly saved visited state
#bump/decrease -> failure-check -> register current game state
#sp {apply*analyze-state*decrease*tower*test
#   (state <s> ^name game
#              ^operator.name analyze-state
#			  ^gs <gs>
#              ^current-evaluation-depth <ced>)
#	(<s> ^disappearing-tower <t>
#		-^new-tower)
#	(<gs> ^object-size <size>)
#	(<size> ^p1 <t> ^p3 <height>)
#-->
#   (<s> ^current-evaluation-depth <ced> -
#                                  (- <ced> 1))
#   (write (crlf) |Decrease 1 due to disappearing of tower | <t>  | of height | <height> (crlf))
#}


############
## unique state representation rule
##############
# The idea is: object-coordinates (location + orientation), membership, reinforce (don't consider brace)... should uniquely specify the state.
# Do we need the complete game state, or just part of it? Counter should be critical
# Game state (maybe minus counter) + remanining steps should be the real game state.
#
sp {create*visited*states*hash*top
	(state <s> ^top-selection true)
-->
	(<s> ^visited-states-hash <vsh>)
}

sp {init*equivalent*symbols
	(state <s> ^superstate nil)
-->
	(<s> ^equivalent-symbols <es>)
	(<es> ^p1 c1 c2 c3 c4 c6 c7 c8)
}

sp {init*identifier*symbols
	(state <s> ^superstate nil)
-->
	(<s> ^identifier-symbols <es>)
	(<es> ^p1 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 s1 s2 g1)
}


sp {apply*analyze-state*hash*current*gs
	(state <s> ^duplicate-of <s2>
				^gs <gs>
				^operator.name analyze-state #must do this after update-state completed
				^current-evaluation-depth <remaining-steps> > 0
				#adding equivalent_symbols
				#^top-state.equivalent-symbols <es>
				^top-state.identifier-symbols <is>
				)
-->
	#(<s> ^current-state-hash (cmd struct-to-string <gs> -a <remaining-steps> -e time))
	#(<s> ^current-state-hash (cmd struct-to-string <gs> -e time -i <es>))
	(<s> ^current-state-hash (cmd struct-to-string <gs> -e time -s <is>))
}

##############
## important rules to prevent intermediate explosions
##############
sp {elaborate*adjacent*appear*1
	(state <s> ^elaborations <e>)
	(<e> ^adjacent-to-object)
-->
	(<s> ^adjacent-appear yes)
}

sp {elaborate*adjacent*appear*2
	(state <s> ^elaborations <e>
				^adjacent-appear yes)
-->
	(<e> ^adjacent-appear <aa>)
	(<aa> ^p1 yes)
}


#if the same game state has been experienced before in substate, it means either it's a failure or it's in the circle - failure no doubt
# some visited states are 'failures' - hard to detect
# most are just exceed-depth type
sp {duplicate-state*exceed-depth
	(state <s> ^current-state-hash <csh>
				^desired <d>
				^operator.name check-for-duplicate-location
				^current-evaluation-depth <remaining-steps>)
	(state <ts> ^top-selection true
				^visited-states-hash <vsh>)
	(<vsh> ^<csh> <visited>)
	(<visited> ^remaining-steps >= <remaining-steps>)  #current must be depth-exceeded if the previously visited is depth-exceeded
-->
	(write (crlf) <csh> | visited-state !!!!!!!!!!!!| (crlf))
	(<s> ^depth-exceeded <d>)
}

sp {duplicate-state*update*repeats
	(state <s> ^current-state-hash <csh>
				^operator.name check-for-duplicate-location
				^current-evaluation-depth <remaining-steps>
				)
	(state <ts> ^top-selection true
				^visited-states-hash <vsh>)
	(<vsh> ^<csh> <visited>)
	(<visited> ^remaining-steps >= <remaining-steps>  #current must be depth-exceeded if the previously visited is depth-exceeded
				^repeats <repeats>)
-->
	(<visited> ^repeats <repeats> -
				(+ <repeats> 1))
}

#if there is no operator tie, it won't be able to check duplicate state during the sequences of operators, but this is OK - it'll detect it in the end
# first time, init at 0
sp {copy*visited*state*to*top-selection*1
	(state <s> ^top-selection true
				^visited-states-hash <vsh>)
	(state <s2> ^current-state-hash <csh> ^current-evaluation-depth <remaining-steps>
				^operator.name save-location)  #register visited state
	(<vsh> -^<csh>) #not previously visited state
-->
	(<vsh> ^<csh> <h>)
	(<h> ^remaining-steps <remaining-steps>
		^repeats 0)
	(write |new state saved !!!!!!!!!!!!| (cmd struct-to-string <csh>))
}

# if existing visited state has lower remaining-depths, this is not depth-exceeded, add remaining-steps to current one
sp {copy*visited*state*to*top-selection*2
	(state <s> ^top-selection true
				^visited-states-hash <vsh>)
	(state <s2> ^current-state-hash <csh> ^current-evaluation-depth <remaining-steps>
				^operator.name save-location)  #register visited state
	(<vsh> ^<csh> <h>)
-->
	(<h> ^remaining-steps <remaining-steps>)
}

learn --d
indifferent-selection --first