
sp {canvas*init
   (state <s> ^name game
^superstate nil)
-->
(<s> ^max-x 50
	^max-y 50
	^scale 2
	^x-offset 10
	^depth-from-top 0
	^label-x-offset 0
	^label-y-offset 0)

   (exec set_scale | 0 60 0 60 |)

   }


sp {elaborate*depth*from*top
(state <s> ^duplicate-of <ss>)
(<ss> ^depth-from-top <depth>)
-->
(<s> ^depth-from-top (+ 1 <depth>))
}

sp {build-canvas*draw*objects*primitive
	(state <s>
		^gs <gs>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>
		^top-state.scale <scale>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> <> compound})
	-{(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)}
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> <scale>)) | | (- <max-y> (+ (* <y> <scale>) (* <height> <scale>))) | | (+ <x-offset> (+ (* <x> <scale>) (* <width> <scale>))) | | (- <max-y>  (* <y> <scale>)) | blue|)
	(exec draw_text | update | <id> |-text | (+ <x-offset> (+ 1 (* <scale> <x>))) | | (- <max-y> (+ (* <scale> <y>) 1)) | blue | <id> )
}

sp {build-canvas*draw*compound
	(state <s>
		^gs <gs>
		^elaborations <e>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>
		^top-state.scale <scale>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> compound})
	-{(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)}
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> <scale>)) | | (- <max-y> (+ (* <y> <scale>) (* <height> <scale>))) | | (+ <x-offset> (+ (* <x> <scale>) (* <width> <scale>))) | | (- <max-y>  (* <y> <scale>)) | black|)
	(exec draw_text | update | <id> |-text-1 | (+ <x-offset> (+ 1 (* <scale> <x>))) | | (- <max-y> (+ (* <scale> (+ <y> <height>)) 0)) | black | <id> )
	(exec draw_text | update | <id> |-text-2 | (+ <x-offset> (- (* <scale> (+ <x> <width>)) 2)) | | (- <max-y> (+ (* <scale> <y>) 1)) | black | <id> )
}

#sp {build-canvas*draw*outermost-compound
#	(state <s>
#		^gs <gs>
#		^elaborations <e>
#		^top-state.max-y <max-y>
#		^top-state.x-offset <x-offset>)
#	-(state <s2> ^duplicate-of <s>)
#	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
#	(<obj> ^p1 <id> ^p2 {<type> compound})
#	-{(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)}
#	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
#	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
#-->
#	#(exec draw_rectangle | update | <id> |-rec | (* <x> 4) | | (- <max-y>  (* <y> 4)) | | (+ (* <x> 4) (* <width> 4)) | | (- <max-y> (+ (* <y> 4) (* <height> 4))) | blue|)
#	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> 4)) | | (- <max-y> (+ (* <y> 4) (* <height> 4))) | | (+ <x-offset> (+ (* <x> 4) (* <width> 4))) | | (- <max-y>  (* <y> 4)) | black|)
#	(exec draw_text | update | <id> |-text | (+ <x-offset> (+ 1 (* 4 <x>))) | | (- <max-y> (+ (* 4 (+ <y> <height>)) 0)) | black | <id> )
#	(write (crlf) |drawing | <id> (crlf))
#}

sp {build-canvas*delete*internal-compound
	(state <s>
		^gs <gs>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> compound})
	(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | delete | <id> |-rec|)
	(exec draw_text | delete | <id> |-text-1 |)
	(exec draw_text | delete | <id> |-text-2 |)
}


sp {build-canvas*draw*objects*compound*level-1
	(state <s>
		^gs <gs>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>
		^top-state.scale <scale>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> <> compound})
	(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)
	-{(<gs> ^member <M2>) (<M2> ^p1 <super-compound> ^p2 <compound-id>)}
	-{(<gs> ^reinforced <r>) (<r> ^p1 <id> ^p2 <r-type>)}
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> <scale>)) | | (- <max-y> (+ (* <y> <scale>) (* <height> <scale>))) | | (+ <x-offset> (+ (* <x> <scale>) (* <width> <scale>))) | | (- <max-y>  (* <y> <scale>)) | blue|)
	(exec draw_text | update | <id> |-text | (+ <x-offset> (+ 1 (* <scale> <x>))) | | (- <max-y> (+ (* <scale> <y>) 2)) | blue | <id> |-|<compound-id> )
}

sp {build-canvas*draw*objects*compound*level-1*reinforced
	(state <s>
		^gs <gs>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>
		^top-state.scale <scale>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> <> compound})
	(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)
	-{(<gs> ^member <M2>) (<M2> ^p1 <super-compound> ^p2 <compound-id>)}
	(<gs> ^reinforced <r>) (<r> ^p1 <id> ^p2 <r-type>)
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> <scale>)) | | (- <max-y> (+ (* <y> <scale>) (* <height> <scale>))) | | (+ <x-offset> (+ (* <x> <scale>) (* <width> <scale>))) | | (- <max-y>  (* <y> <scale>)) | blue|)
	(exec draw_text | update | <id> |-text | (+ <x-offset> (+ 1 (* <scale> <x>))) | | (- <max-y> (+ (* <scale> <y>) 2)) | blue (| <id> |/| <r-type>|)-|<compound-id> )
}

sp {build-canvas*draw*objects*compound*level-2
	(state <s>
		^gs <gs>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>
		^top-state.scale <scale>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> <> compound})
	-{(<gs> ^reinforced <r>) (<r> ^p1 <id> ^p2 <r-type>)}
	(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)
	(<gs> ^member <M2>) (<M2> ^p1 <super-compound> ^p2 <compound-id>)
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> <scale>)) | | (- <max-y> (+ (* <y> <scale>) (* <height> <scale>))) | | (+ <x-offset> (+ (* <x> <scale>) (* <width> <scale>))) | | (- <max-y>  (* <y> <scale>)) | blue|)
	(exec draw_text | update | <id> |-text | (+ <x-offset> (+ 1 (* <scale> <x>))) | | (- <max-y> (+ (* <scale> <y>) 2)) | blue | <id> |-| <compound-id> |-|<super-compound>)
}

sp {build-canvas*draw*objects*compound*level-2*reinforced
	(state <s>
		^gs <gs>
		^top-state.max-y <max-y>
		^top-state.x-offset <x-offset>
		^top-state.scale <scale>)
	-(state <s2> ^duplicate-of <s>)
	(<gs> ^object <obj> ^object-location <loc> ^object-size <size>)
	(<obj> ^p1 <id> ^p2 {<type> <> compound})
	(<gs> ^member <M>) (<M> ^p1 <compound-id> ^p2 <id>)
	(<gs> ^member <M2>) (<M2> ^p1 <super-compound> ^p2 <compound-id>)
	(<gs> ^reinforced <r>) (<r> ^p1 <id> ^p2 <r-type>)
	(<loc> ^p1 <id> ^p2 <x> ^p3 <y>)
	(<size> ^p1 <id> ^p2 <width> ^p3 <height> ^p4 <weight>)
-->
	(exec draw_rectangle | update | <id> |-rec | (+ <x-offset> (* <x> <scale>)) | | (- <max-y> (+ (* <y> <scale>) (* <height> <scale>))) | | (+ <x-offset> (+ (* <x> <scale>) (* <width> <scale>))) | | (- <max-y>  (* <y> <scale>)) | blue|)
	(exec draw_text | update | <id> |-text | (+ <x-offset> (+ 1 (* <scale> <x>))) | | (- <max-y> (+ (* <scale> <y>) 2)) | blue (| <id> |/| <r-type>|)-| <compound-id> |-|<super-compound> )
}

sp {build-canvas*draw*depth*from*top
	(state <s> ^depth-from-top <dft>)
	-(state <s2> ^duplicate-of <s>)
-->
	(exec draw_text | update | depth-from-top |-text 0 0 blue Depth-from-top-| <dft>)
}

sp {build-canvas*draw*depth
	(state <s> ^superstate <> nil
		^current-evaluation-depth <cur-dep>)
	-(state <s2> ^duplicate-of <s>)
-->
	(exec draw_text | update | remaining-depth-limit |-text 0 1 blue Remaining-depth-limit-| <cur-dep>)
}
sp {build-canvas*draw*branching
	(state <s> ^superstate <> nil
		^superstate.item-count <branching-factor>)
	-(state <s2> ^duplicate-of <s>)
-->
	(exec draw_text | update | branching |-text 0 2 blue Total-branch-| <branching-factor>)
}
sp {build-canvas*draw*remaining
	(state <s> ^superstate <> nil
		^remaining-operators <remaining>)
	-(state <s2> ^duplicate-of <s>)
-->
	(exec draw_text | update | remaining |-text 0 3 blue Remaining-branch-| <remaining>)
}