
# hierarchical test for RL-Soar ; taken from dietterich ; also source taxi.tcl
# rewrite navigate to end at goal

sp {elaborate*taxi
  (state <s> ^superstate nil)
-->
  (<s> ^name taxi)}
 
 
sp {elaborate*io
   (state <s> ^superstate.io <io>)
  -->
   (<s> ^io <io>)}
 
sp {elaborate*have*passenger
  (state <s> ^name taxi
             ^io.input-link.pass_loc 4)
  -->
  (<s> ^passenger yes)}
  
sp {elaborate*arrived
   (state <s> ^superstate.operator <o>
              ^io.input-link.stand <p>)   
   (<o> ^name << get put >>
        ^location <> <p>)
 -->
   (<s> ^arrived no)}
  
#   ---------  top state -------------- #

sp {propose*get
  (state <s> ^name taxi
             ^io.input-link <il>
             -^passenger yes)
  (<il> ^pass_loc <p>
        ^dest_loc <d>
        ^horizontal <h>
        ^vertical <v>)
  -->
  (<s> ^operator <o> + =)
  (<o> ^name get
       ^location <p>)}
 
 sp {propose*put
   (state <s> ^name taxi
              ^io.input-link <il>
              ^passenger yes)
   (<il> ^dest_loc <p>
         ^horizontal <h>
         ^vertical <v>)
  -->
   (<s> ^operator <o> + =)
   (<o> ^name put
        ^location <p>)}

 
        
 sp {propose*halt
     (state <s> ^name taxi
                ^io.input-link.dest_loc <p>
                ^io.input-link.pass_loc <p>)
 -->
     (<s> ^operator <o> + >)
     (<o> ^name halt)}


# ---------------- top level - applications ------------ #

sp {apply*halt
      (state <s> ^name taxi
                 ^operator.name halt)
   -->
      (halt)}



# ------------- second level - proposals -------------- #   
   
sp {propose*pickup
   (state <s> ^superstate.operator.name get
   	      ^io.input-link.stand <p>
   	      ^io.input-link.pass_loc <p>)
   -->
   (<s> ^operator <o> + =)
   (<o> ^name pickup)}
   
sp {propose*putdown
    (state <s> ^superstate.operator.name put
               ^io.input-link.stand <p>
               ^io.input-link.dest_loc <p>)
    -->
    (<s> ^operator <o> + =)
    (<o> ^name putdown)}
    
sp {propose*navigate
   (state <s> ^superstate.operator <o>
              ^arrived no)
   (<o> ^name << get put >> 
        ^location <p>)
   -->
   (<s> ^operator <o1> + =)
   (<o1> ^name navigate
        ^location <p>)}
        
# -------------- second level - applications ------------ #
   
sp {apply*pickup
    (state <s> ^superstate.operator.name get
               ^operator <o>
               ^io.output-link <ol>)
    (<o> ^name pickup)
    -->
    (<ol> ^command <c>)
    (<c> ^do pickup)}
    

    
sp {apply*putdown
     (state <s> ^superstate.operator.name put
                ^operator <o>
                ^io.output-link <ol>)
     (<o> ^name putdown)
    -->
     (<ol> ^command <c>)
     (<c> ^do putdown)}
     
     
# -------------- third level - proposals --------- #
   
sp {propose*move*north
   (state <s> ^superstate.operator.name navigate
              ^io.input-link <il>)
   (<il> ^dest_loc <d>
         ^horizontal <h>
         ^vertical <v>)
 -->
   (<s> ^operator <o> + =)
   (<o> ^name move
        ^direction north)}
        
        
sp {propose*move*south
   (state <s> ^superstate.operator.name navigate
              ^io.input-link <il>)
   (<il> ^dest_loc <d>
         ^horizontal <h>
         ^vertical <v>)
 -->
   (<s> ^operator <o> + =)
   (<o> ^name move
        ^direction south)}
    
 sp {propose*move*east
    (state <s> ^superstate.operator.name navigate
               ^io.input-link <il>)
    (<il> ^dest_loc <d>
          ^horizontal <h>
          ^vertical <v>)
  -->
    (<s> ^operator <o> + =)
    (<o> ^name move
        ^direction east)}
        
  sp {propose*move*west
     (state <s> ^superstate.operator.name navigate
                ^io.input-link <il>)
     (<il> ^dest_loc <d>
           ^horizontal <h>
           ^vertical <v>)
   -->
     (<s> ^operator <o> + =)
     (<o> ^name move
        ^direction west)}
   
 # ------------- third level - applications ---------------- #
  sp {apply*move
    (state <s> ^operator <o>
               ^io.output-link <ol>)
    (<o> ^name move
         ^direction <dir>)
    -->
    (<ol> ^command <c>)
    (<c> ^move <dir>)}
    
# ----------- miscellaneous --------------------------- #  
  
  sp {apply*move*remove-command
     (state <s> ^name taxi
                ^io.output-link <ol>
                ^operator)
     (<ol> ^command <c>)
     (<c> ^status complete)
  -->
   (<ol> ^command <c> -)}
   

# Shelley's default rule
sp {default*select*reject*conflict
   "Reject an object if it leads to a conflict that can not be resolved."
   :default
   (state <s1> ^operator <o>)
   (state <s2> ^impasse no-change
	         ^attribute operator
	         ^superstate <s1> 
	         ^quiescence t)
   (state <s3> ^attribute state
	         ^choices none
	         ^superstate <s2>
	         ^quiescence t)
   -->
   (<s1> ^operator <o> -)}