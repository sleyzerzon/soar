# propose the action associated with each unblocked arc
sp {go-to-waypoint*propose*action
   (state <s> ^name go-to-waypoint
              ^superoperator.move-now true
              ^io.input-link.ranges.range <r>
              ^io.input-link.time.microseconds <microsecs>)
   (<r> ^blocked false
        ^action <a>
        ^angular-distance <d>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name action
         ^action <a>
         ^angular-distance <d>)
}

# prefer actions associated with closer arcs
sp {go-to-waypoint*compare*action
   (state <s> ^name go-to-waypoint
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name action
          ^angular-distance <d>)
   (<op2> ^name action
          ^angular-distance > <d>)
-->
   (<s> ^operator <op1> > <op2>)
}

# if all arcs are blocked, propose turning left
sp {go-to-waypoint*propose*turn-left
   (state <s> ^name go-to-waypoint
              ^superoperator.move-now true
              ^io.input-link.ranges <rs>
              ^parameters.throttle <thr>
              ^io.input-link.time.microseconds <microsecs>
              ^io.input-link.self.pose.utime <utime>)
  -(<rs> ^range.blocked false)
-->
   (<s> ^operator <op> + =)
   (<op> ^name action
         ^action <a>)
   (<a> ^rotate <params>)
   (<params> ^direction left
             ^throttle <thr>
             ^utime <utime>)
   (write (crlf) |all arcs blocked (or missing), so rotating left until not blocked|)
}

sp {apply*action
   (state <s> ^operator <op>
              ^io.output-link <ol>)
   (<op> ^name action
         ^action <a>)
   (<a> ^<action> <params>)
   (<params> ^direction <dir>
             ^throttle <thr>
             ^utime <utime>)
-->
   (<ol> ^<action> <acopy>)
   (<acopy> ^direction <dir>
            ^throttle <thr>
            ^utime <utime>)
}

sp {monitor*action
   (state <s> ^operator.action <a>)
   (<a> ^<action> <p>)
   (<p> ^direction <d>
        ^throttle <thr>
        ^utime <utime>)
-->
   (write (crlf) <action> | | <d> | at | <thr> | utime | <utime>)
}
