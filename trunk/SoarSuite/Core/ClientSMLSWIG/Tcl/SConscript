#!/usr/bin/python
# Project: Soar <http://soar.googlecode.com>
# Author: Jonathan Voigt <voigtjr@gmail.com>
#
import sys
import os
import SCons.Script

Import('env')
clone = env.Clone()

lib_install_dir = clone['OUT_DIR']

libname = 'Tcl_sml_ClientInterface'

tclsml_wrap = env.File('Tcl_sml_ClientInterface_wrap.cpp')
tclsml_i = env.File('Tcl_sml_ClientInterface.i')
include_dirs = [ env.Dir('#Core/%s/src' % d).abspath for d in 'ClientSML ElementXML ConnectionSML'.split() ]
includes = ' '.join('-I%s' % d for d in include_dirs)
wrap_cmd = 'swig -o %s -c++ -tcl -pkgversion 9.0.1 -Wall %s %s' % (tclsml_wrap.abspath, includes, tclsml_i)

makepkg_script = env.File('SconsMakeTclSMLPackage.tcl')
pkgdir = env.Dir('$OUT_DIR')
pkgindex = os.path.join(pkgdir.abspath, 'pkgIndex.tcl')
makepkg_cmd = 'tclsh %s %s' % (makepkg_script, pkgdir)

# Scanner for dependencies in .i files
SWIGScanner = SCons.Scanner.ClassicCPP("SWIGScan",".i","CPPPATH",'^[ \t]*[%,#][ \t]*(?:include|import)[ \t]*(<|")([^>"]+)(>|")')
clone.Append(SCANNERS=[SWIGScanner])

# Create the wrap cpp
tclstep1 = clone.Command(tclsml_wrap, tclsml_i, wrap_cmd)
#env.Alias('tclstep1', tclstep1)

clone.Append(
  CPPPATH  = ['/usr/include/tcl8.6'],
  LIBS     = ['tcl8.6'],
  CPPFLAGS = ['-w'],
)

if os.name == 'posix':
  clone.Append(CXXFLAGS = Split('-Wno-unused -fno-strict-aliasing'))

if sys.platform == 'darwin':
  clone.Append(SHLINKFLAGS = Split('$LINKFLAGS -bundle -flat_namespace -undefined suppress'))

tclstep2 = clone.SharedLibrary(libname, tclsml_wrap)
#env.Alias('tclstep2', tclstep2)
lib = env.Install(lib_install_dir, tclstep2)
#env.Alias('tclstep3', lib)

env.Alias('sml_tcl', env.Command(pkgindex, lib, makepkg_cmd))
env.Clean(lib, pkgdir)
