sp {propose*turn-left
   (state <s> -^operator-state.below-threshold true
               ^operator-state.should-turn left
               ^operator-state.movement-state stationary)
-->
   (<s> ^operator <o> > +)
   (<o> ^name turn-left)
}

sp {propose*turn-right
   (state <s> -^operator-state.below-threshold true
               ^operator-state.should-turn right
               ^operator-state.movement-state stationary)
-->
   (<s> ^operator <o> +)
   (<o> ^name turn-right)
}

sp {propose*go-forward
   (state <s> ^operator-state.below-threshold true
              ^operator-state.movement-state stationary)
-->
   (<s> ^operator <o> +)
   (<o> ^name go-forward)
}

sp {apply*turn-left
   (state <s> ^operator.name turn-left
              ^io.output-link <out>)
-->
   (<out> ^turn.direction left)
   (<s> ^operator-state.movement-state stationary -
        ^operator-state.movement-state moving)
}

sp {apply*turn-right
   (state <s> ^operator.name turn-right
              ^io.output-link <out>)
-->
   (<out> ^turn.direction right)
   (<s> ^operator-state.movement-state stationary -
        ^operator-state.movement-state moving)
}

sp {apply*go-forward
   (state <s> ^operator.name go-forward
              ^io.output-link <out>)
-->
   (<out> ^walk.direction forward)
   (<s> ^operator-state.movement-state stationary -
        ^operator-state.movement-state moving)
}

sp {propose*stop
   (state <s> ^operator-state.movement-state moving
              ^io.output-link <out>)
-->
   (<s> ^operator <o>)
   (<o> ^name stop)
}

sp {apply*stop
   (state <s> ^operator.name stop
              ^io.output-link <out>)
-->
   (<out> ^do.info nothing)
   (<s> ^operator-state.movement-state stationary
        ^operator-state.movement-state moving -)
}
