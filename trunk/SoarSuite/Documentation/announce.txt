Soar 8.6.2 Release Notes
========================

Soar-8.6.2 includes all source code, many demo programs, and a 
number of applications that serve as examples of how to interface 
Soar to an external Environment.  There is support for integrating 
Soar with C++, Java, Tcl and C# applications.  Many Tools that aid 
in development of Soar programs are also included.

These Release Notes describe the primary changes in this 
latest release.  More detailed information can be obtained at 
http://winter.eecs.umich.edu/soarwiki

This release was generated for Windows and Linux systems (OS X forthcoming).

Soar 8.6.2 can be downloaded from the Soar homepage at:

        http://sitemaker.umich.edu/soar


Installation Requirements
=========================

* On Windows, the 19MB download file expands to ~46MB when installed.  
  Linux disk requirements are similar.

* Java 1.4.2 or newer is required to use the SoarJavaDebugger, which is
  required for most of the demos and applications.  (java must be 
  available in the path). Get it at http://java.sun.com/. Most operating
  systems probably already have Java installed.

* If you want to run Tcl applications on Linux, Tcl 8.4.x or later is
  required (note that the tutorial applications are now available in
  Java).  Also note that we do not currently support threaded builds
  of Tcl (e.g. ActiveTcl 8.4.11.2 or later).


Components of Soar 8.6.2
========================
* pre-built libraries and executables for Windows (SoarLibrary/bin)
* all source code, config files, and OS tools for automated Soar builds
* SoarJavaDebugger 
* VisualSoar
* JavaEaters, JavaTankSoar, TclEaters
* Test and Demo programs
* Documentation


New in 8.6.2
============

* Components and Capabilities added:
  -- C# added to list of supported languages (now C++, Java, Tcl, C#).
  -- Java versions of Eaters and TankSoar  
  -- Support for arbitrary communication from one client to 
     another (not just to/from the kernel)
  -- Tcl commands can now be used from the SoarJavaDebugger by running 
     a separate Tcl filter alongside the debugger 
     (this is a preliminary version in this release).
  -- Support for filtering of command line input in any supported language 
     Filtering can be chained.  
  -- Support for logging output in SoarJavaDebugger on a window-by-window basis
  -- Support for arbitrary logging of Soar execution through custom logging 
     applications.  Sample programs included in Tools directory.
  -- Added new SML tutorial for developers (in Environments/JavaTOH)
  -- Ability to unregister an event during its callback execution
  -- Support for setting a "stop-point" before any phase in Soar's 
     execution cycle. Upon interrupt, or when stepping, agents will 
     stop at this location.  By default Soar will stop after the 
     decision phase so users can examine the match set.
  -- "run 0" (zero) will move agents to the stop-point location, 
     unless already there.  (mechanism for synching agents easily)
  -- Applications can interleave the execution of multiple agents by 
     any increment supported in SoarKernel: elaboration, phase, decision
     or output-generation.  
  -- Phase-specific event generation  (e.g. BEFORE_PROPOSE_PHAE & 
     AFTER_PROPOSE_PHASE etc)

 
* Performance improvements:
  -- Windows performance improved (> 30% faster in Towers of Hanoi SML).
  -- Vastly improved Linux performance (~20x in some cases).
  -- Java versions of Eaters and TankSoar are many times faster than
     their Tcl equivalents.

* Updates and code fixes
  -- New algorithm in SoarKernel supports more efficient garbage 
     collection, won't blow callstack when lots of work done in subgoal, 
     and  supports undefining DO_TOP_LEVEL_REF_CTS which inherently 
     leaks memory at the top state
  -- Fixed logic for checking quiescence in Propose phase.  For some
     applications using I/O, could result in fewer SNCs in substates  
  -- Reorganized directory structure to be more intuitive.
  -- Static libraries required for building SML applications are now
     distributed in SoarLibrary/lib.
  -- Many memory leaks fixed in SoarKernel, gSKI and SML.
  -- RunEvents generated directly in SoarKernel rather than by gSKI.
  -- SML RunScheduler rewritten.  Order of RunEvents guaranteed for all agents.
  -- init-soar support works much better for all clients.
  -- Updated Java apps to SWT 3.1.2.
  -- Java 5.0 supported.
  -- Visual Studio 2005 supported.
  -- Java Debugger now uses GTK interface by default in Linux (fixes
     many motif-specific bugs).
  -- Lots of SML changes to improve correctness and functionality.
  -- Registering for callbacks in Java now uses interfaces.
  -- Several Soar7-mode commands added back in.
  -- Soar kernel now uses a new random number generator.
  -- Improved portability and removed legacy files from SoarKernel.
  -- Lots of documentation updates.
  -- Many, many other changes (see bugzilla for details).
  -- more details posted at 
     http://winter.eecs.umich.edu/soarwiki/Items_for_Consortium_Review

  
Known issues:
=============

* TankSoar and Eaters have some redraw issues (forcing a redraw, e.g. by
  moving the window, fixes this).
* Remote connections on Linux can be slow.
* ^status complete appears on the ^output-link immediately instead 
  of during the next input phase.
* The Soar 7 mode implementation currently relies on an ugly hack. If you
  experience problems in this mode, please let us know.
* In TankSoar, the obscure-bot sometimes generates a scary-looking kernel
  error message.  It appears to be safe to ignore.
* Many other minor issues (see bugzilla for details).

If any other issues or bugs are found, please send mail to:

soar-sml-list@lists.sourceforge.net (preferred)
-or-
soar-group@lists.sourceforge.net