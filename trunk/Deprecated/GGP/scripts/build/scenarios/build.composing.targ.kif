;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * Build Game Instance: Transfer Level 6 - Composing, Target              *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: July 12, 2007                                               *
;;;; * Revised:   July 20, 2007                                               *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game 
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a tower with four levels. The lowest is a large concrete
;;;;   block (c1) which must be reinforced, the second is a steel frame with 
;;;;   all joints braced (s1 - s4), and the top two are small concrete blocks
;;;;   (c2 and c3).
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (add-to-compound id1 s1)
;;;;   (add-to-compound id1 s2)
;;;;   (add-to-compound id1 s3)
;;;;   (add-to-compound id1 s4)
;;;;   (brace s1 s2 steel-plate)
;;;;   (brace s1 s3 steel-plate)
;;;;   (brace s2 s4 steel-plate)
;;;;   (brace s3 s4 steel-plate)
;;;;   (place-adjacent c2 c3 top)
;;;;   (add-to-compound id2 c3)
;;;;   (add-to-compound id2 c2)
;;;;   (place-adjacent id1 id2 top)
;;;;   (add-to-compound id2 id1)
;;;;   (reinforce c1 rebar)
;;;;   (place-adjacent c1 id2 top)
;;;;   (add-to-compound id2 c1)
;;;; Goal completed as shown in file build.composing.pdf in 16 steps

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state. 
;;;             These will not change during the game.

(max-movable-weight 220)
(max-time 20)

;;; (brace-type ?brace-material ?bracable-material)
(brace-type steel-plate steel-beam)
(brace-type steel-plate wood-beam)

;;; (brace-properties ?brace-material ?strength ?weight)
(brace-properties steel-plate 2 1)

;;; (material-type ?type ?strength)
(material-type ground 1000)
(material-type concrete 30)
(material-type steel-beam 20)
(material-type wood-beam 10)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type rebar concrete)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties rebar 2 2)


;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (current-identifier id1))

(init (time 0))

;;; (count ?brace-reinforcement-type ?number)
(init (count steel-plate 4))
(init (count rebar 1))

;;; (object ?object-id ?object-type)
(init (object g1 ground))
(init (object c1 concrete))
(init (object c2 concrete))
(init (object c3 concrete))
(init (object s1 steel-beam))
(init (object s2 steel-beam))
(init (object s3 steel-beam))
(init (object s4 steel-beam))

;;; (object-location ?object-id ?x ?y)
(init (object-location g1 0 0))
(init (object-location c1 0 1))
(init (object-location c2 2 4))
(init (object-location c3 5 4))
(init (object-location s1 7 5))
(init (object-location s2 7 2))
(init (object-location s3 11 2))
(init (object-location s4 7 1))

;;; (object-size ?object-id ?width ?height ?weight)
(init (object-size g1 12 1 1000))
(init (object-size c1 7 3 210))
(init (object-size c2 3 3 90))
(init (object-size c3 2 2 40))
(init (object-size s1 5 1 25))
(init (object-size s2 1 3 15))
(init (object-size s3 1 3 15))
(init (object-size s4 5 1 25))


;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: No actions available to agent
;;; 4) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (tower ?tower)
    (true (object-size ?tower ?width ?height ?weight))
    (> ?height 10)
    (not collapsed))

(<= (goal agent 0)
    collapsed)

(<= (goal agent 50)
    (not (available-action)))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) No actions available to agent
;;; 4) Maximum time-step reached

(<= terminal
    (tower ?tower)
    (true (object-size ?tower ?width ?height ?weight))
    (> ?height 12))

(<= terminal
    collapsed)

(<= terminal
    (not (available-action)))

(<= terminal
    (true (time ?t))
    (max-time ?t))
