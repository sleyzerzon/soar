;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * mini-Build Transfer Problem: Level 7, Scenario 2 -- Stairs             *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: August    29, 2007                                          *
;;;; * Revised:   September 11, 2007                                          *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a stairway that climbs to the left by constructing towers
;;;;   of increasing height. The agent must rearrange blocks from each of three
;;;;   initial stacks of 3 or 4, and then place them such that the stairway is 
;;;;   formed.
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (place-adjacent c7 c1 right)
;;;;   (place-adjacent c1 c2 top)
;;;;   (place-adjacent c2 c3 top)
;;;;   (place-adjacent c1 c8 right)
;;;;   (place-adjacent c8 c9 top)
;;;;   (place-adjacent c8 c10 right)
;;;;
;;;; Visualization of the initial state:
;;;; 8         C_
;;;; 7         04        
;;;; 6 C_      C_      C_
;;;; 5 01      05      08 
;;;; 4 C_      C_      C_ 
;;;; 3 02      06      09 
;;;; 2 C_      C_      C_ 
;;;; 1 03      07      10
;;;; 0 ++++++++g1+++++++++
;;;;   0123456789012345678
;;;;
;;;; Visualization of the final state:
;;;; 8         C_
;;;; 7         04
;;;; 6         C_C_
;;;; 5         0503
;;;; 4         C_C_C_
;;;; 3         060209
;;;; 2         C_C_C_C_
;;;; 1         07010810
;;;; 0 ++++++++g1+++++++++
;;;;   0123456789012345678

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state.
;;;             These will not change during the game.

(max-movable-weight 100)
(max-time 10)

;;; (material-type ?type)
(material-type ground)
(material-type concrete)
;(material-type steel)
;(material-type wood)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type rebar concrete)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties rebar 2 2)

;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (time 0))

(init (count rebar 0))

(init (object-type g1 ground))
(init (object-type c1 concrete))
(init (object-type c2 concrete))
(init (object-type c3 concrete))
(init (object-type c4 concrete))
(init (object-type c5 concrete))
(init (object-type c6 concrete))
(init (object-type c7 concrete))
(init (object-type c8 concrete))
(init (object-type c9 concrete))
(init (object-type c10 concrete))

(init (object-dimensions g1 18 1))
(init (object-dimensions c1 2 2))
(init (object-dimensions c2 2 2))
(init (object-dimensions c3 2 2))
(init (object-dimensions c4 2 2))
(init (object-dimensions c5 2 2))
(init (object-dimensions c6 2 2))
(init (object-dimensions c7 2 2))
(init (object-dimensions c8 2 2))
(init (object-dimensions c9 2 2))
(init (object-dimensions c10 2 2))

(init (object-location g1 0 0))
(init (object-location c1 0 5))
(init (object-location c2 0 3))
(init (object-location c3 0 1))
(init (object-location c4 8 7))
(init (object-location c5 8 5))
(init (object-location c6 8 3))
(init (object-location c7 8 1))
(init (object-location c8 16 5))
(init (object-location c9 16 3))
(init (object-location c10 16 1))

(init (object-load g1 80))
(init (object-load c1 0))
(init (object-load c2 8))
(init (object-load c3 16))
(init (object-load c4 0))
(init (object-load c5 8))
(init (object-load c6 16))
(init (object-load c7 24))
(init (object-load c8 0))
(init (object-load c9 8))
(init (object-load c10 16))

(init (object-strength g1 1000))
(init (object-strength c1 24))
(init (object-strength c2 24))
(init (object-strength c3 24))
(init (object-strength c4 24))
(init (object-strength c5 24))
(init (object-strength c6 24))
(init (object-strength c7 24))
(init (object-strength c8 24))
(init (object-strength c9 24))
(init (object-strength c10 24))

(init (object-weight g1 1000))
(init (object-weight c1 8))
(init (object-weight c2 8))
(init (object-weight c3 8))
(init (object-weight c4 8))
(init (object-weight c5 8))
(init (object-weight c6 8))
(init (object-weight c7 8))
(init (object-weight c8 8))
(init (object-weight c9 8))
(init (object-weight c10 8))

(init (tower c1 6))
(init (tower c2 4))
(init (tower c4 8))
(init (tower c5 6))
(init (tower c6 4))
(init (tower c8 6))
(init (tower c9 4))


;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (stairway right)
    (not structural-failure))

(<= (goal agent 0)
    (collapsed ?object))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) Maximum time-step reached

(<= terminal
    (stairway right))

(<= terminal
    (collapsed ?object))

(<= terminal
    (true (time ?t))
    (max-time ?t))

