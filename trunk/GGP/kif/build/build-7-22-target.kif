;;;; -*-Lisp-*-
;;;; **************************************************************************
;;;; * mini-Build Transfer Problem: Level 7, Scenario 2 -- Stairs             *
;;;; * Transfer Learning in Integrated Cognitive Systems Project              *
;;;; *                                                                        *
;;;; * David J. Stracuzzi                                                     *
;;;; * Arizona State University                                               *
;;;; * Completed: August 29, 2007                                             *
;;;; * Revised:   August 31, 2007                                             *
;;;; **************************************************************************
;;;;
;;;; This file contains rules, facts and persistants for a specific game
;;;; instance of BUILD. The file build.core.kif contains the core description
;;;; for the BUILD domain. Appending this file to build.core.kif will produce
;;;; a complete, playable game description.
;;;;
;;;; Goal:
;;;;   Construct a stairway that climbs to the left by constructing towers
;;;;   of increasing height. The agent must remove blocks from each of three
;;;;   initial stacks of 5, and then place them such that the stairway is 
;;;;   formed.
;;;;
;;;; Solution Sequence (several are possible):
;;;;   (place-adjacent c1 c5 left)
;;;;   (place-adjacent c5 c10 top)
;;;;   (place-adjacent c10 c9 top)
;;;;   (place-adjacent c9 c15 top)
;;;;   (place-adjacent c15 c14 top)
;;;;   (place-adjacent c11 c13 right)
;;;;
;;;; Visualization of the initial state:
;;;; 0  C C C
;;;; 9  051015 
;;;; 8  C C C
;;;; 7  040914 
;;;; 6  C C C
;;;; 5  030813 
;;;; 4  C C C 
;;;; 3  020712 
;;;; 2  C C C 
;;;; 1  010611
;;;; 0++++g1++++
;;;;  0123456789
;;;;
;;;; Visualization of the final state:
;;;; 0C      
;;;; 914      
;;;; 8C C   
;;;; 71504  
;;;; 6C C C 
;;;; 5090308
;;;; 4C C C C 
;;;; 310020712 
;;;; 2C C C C C 
;;;; 1 501061113
;;;; 0++++g1++++
;;;;  0123456789

;;; ---------------------------------------------------------------------------
;;; PARAMETERS: Game-instance-specific relations that define the state.
;;;             These will not change during the game.

(max-movable-weight 100)
(max-time 10)

;;; (material-type ?type)
(material-type ground)
(material-type concrete)
;(material-type steel)
;(material-type wood)

;;; (reinforcement-type ?reinforcement-material ?reinforcable-material)
(reinforcement-type rebar concrete)

;;; (reinforcement-properties ?reinforcement-material ?strength ?weight)
(reinforcement-properties rebar 2 2)

;;; ---------------------------------------------------------------------------
;;; PERSISTANTS: Relations that define the state. These may be added and
;;;              removed during the game.

(init (time 0))

(init (count rebar 0))

(init (object-type g1 ground))
;;(init (object-type c1 concrete))
;;(init (object-type c2 concrete))
;;(init (object-type c3 concrete))
;;(init (object-type c4 concrete))
;;(init (object-type c5 concrete))
(init (object-type c6 concrete))
(init (object-type c7 concrete))
(init (object-type c8 concrete))
(init (object-type c9 concrete))
(init (object-type c10 concrete))
(init (object-type c11 concrete))
(init (object-type c12 concrete))
(init (object-type c13 concrete))
(init (object-type c14 concrete))
(init (object-type c15 concrete))

(init (object-dimensions g1 10 1))
;;(init (object-dimensions c1 2 2))
;;(init (object-dimensions c2 2 2))
;;(init (object-dimensions c3 2 2))
;;(init (object-dimensions c4 2 2))
;;(init (object-dimensions c5 2 2))
(init (object-dimensions c6 2 2))
(init (object-dimensions c7 2 2))
(init (object-dimensions c8 2 2))
(init (object-dimensions c9 2 2))
(init (object-dimensions c10 2 2))
(init (object-dimensions c11 2 2))
(init (object-dimensions c12 2 2))
(init (object-dimensions c13 2 2))
(init (object-dimensions c14 2 2))
(init (object-dimensions c15 2 2))

(init (object-location g1 0 0))
;;(init (object-location c1 2 1))
;;(init (object-location c2 2 3))
;;(init (object-location c3 2 5))
;;(init (object-location c4 2 7))
;;(init (object-location c5 2 9))
(init (object-location c6 4 1))
(init (object-location c7 4 3))
(init (object-location c8 4 5))
(init (object-location c9 4 7))
(init (object-location c10 4 9))
(init (object-location c11 6 1))
(init (object-location c12 6 3))
(init (object-location c13 6 5))
(init (object-location c14 6 7))
(init (object-location c15 6 9))

(init (object-load g1 120))
;;(init (object-load c1 32))
;;(init (object-load c2 24))
;;(init (object-load c3 16))
;;(init (object-load c4 8))
;;(init (object-load c5 0))
(init (object-load c6 32))
(init (object-load c7 24))
(init (object-load c8 16))
(init (object-load c9 8))
(init (object-load c10 0))
(init (object-load c11 32))
(init (object-load c12 24))
(init (object-load c13 16))
(init (object-load c14 8))
(init (object-load c15 0))

(init (object-strength g1 1000))
;;(init (object-strength c1 32))
;;(init (object-strength c2 32))
;;(init (object-strength c3 32))
;;(init (object-strength c4 32))
;;(init (object-strength c5 32))
(init (object-strength c6 32))
(init (object-strength c7 32))
(init (object-strength c8 32))
(init (object-strength c9 32))
(init (object-strength c10 32))
(init (object-strength c11 32))
(init (object-strength c12 32))
(init (object-strength c13 32))
(init (object-strength c14 32))
(init (object-strength c15 32))

(init (object-weight g1 1000))
;;(init (object-weight c1 8))
;;(init (object-weight c2 8))
;;(init (object-weight c3 8))
;;(init (object-weight c4 8))
;;(init (object-weight c5 8))
(init (object-weight c6 8))
(init (object-weight c7 8))
(init (object-weight c8 8))
(init (object-weight c9 8))
(init (object-weight c10 8))
(init (object-weight c11 8))
(init (object-weight c12 8))
(init (object-weight c13 8))
(init (object-weight c14 8))
(init (object-weight c15 8))

;;(init (tower c2 4))
;;(init (tower c3 6))
;;(init (tower c4 8))
;;(init (tower c5 10))
(init (tower c7 4))
(init (tower c8 6))
(init (tower c9 8))
(init (tower c10 10))
(init (tower c12 4))
(init (tower c13 6))
(init (tower c14 8))
(init (tower c15 10))

;;; ---------------------------------------------------------------------------
;;; GOAL STATES
;;; 1) WIN:  Building meets success conditions
;;; 2) LOSE: Building collapsed
;;; 3) DRAW: Maximum time-step reached

(<= (goal agent 100)
    (stairway left)
    (not structural-failure))

(<= (goal agent 0)
    (collapsed ?object))

(<= (goal agent 50)
    (true (time ?t))
    (max-time ?t))


;;; ---------------------------------------------------------------------------
;;; TERMINAL STATES
;;; 1) Building meets success conditions
;;; 2) Building collapsed
;;; 3) Maximum time-step reached

(<= terminal
    (stairway left))

(<= terminal
    (collapsed ?object))

(<= terminal
    (true (time ?t))
    (max-time ?t))