sp {create*visited*states*hash*top
	(state <s> ^top-selection true)
-->
	(<s> ^visited-states-hash <vsh>)
}

# This will fail if there is no bookkeeping state present, and will act odd if
# more than one exists
sp {apply*analyze-state*hash*current*gs
	(state <s> ^duplicate-of <s2>
				^gs <gs>
				^operator.name analyze-state #must do this after update-state completed
        ^top-state.facts.counter <cnt>
        ^top-state.arbitrary-gs-constants <ags>)
-->
   (<s> ^current-state-hash (cmd struct-to-string <gs> -e <cnt> -s <ags>))
}

# if there is a current-state-hash during update state, it must be old
# so remove it-- this happens when a tie is resolved (or there is no tie),
# multiple game operators happen in the same state
sp {apply*update-state*hash*remove-stale
  (state <s> ^name game
             ^operator.name update-state
             ^current-state-hash <csh>)
-->
   (<s> ^current-state-hash <csh> -)
}

#if the same game state has been experienced before in substate, it means either it's a failure or it's in the circle - failure no doubt
# some visited states are 'failures' - hard to detect
# most are just exceed-depth type
sp {duplicate-state*exceed-depth
	(state <s> ^current-state-hash <csh>
				^desired <d>
				^operator.name check-for-duplicate-location
				^current-evaluation-depth <remaining-steps>)
	(state <ts> ^top-selection true
				^visited-states-hash <vsh>)
	(<vsh> ^<csh> <visited>)
	(<visited> ^remaining-steps >= <remaining-steps>)  #current must be depth-exceeded if the previously visited is depth-exceeded
-->
	(write (crlf) | State was visited previously, ID | <csh> )
   #(<s> ^depth-exceeded <d>)
   (<s> ^failure <d>)
}

sp {duplicate-state*update*repeats
	(state <s> ^current-state-hash <csh>
				^operator.name check-for-duplicate-location
				^current-evaluation-depth <remaining-steps>
				)
	(state <ts> ^top-selection true
				^visited-states-hash <vsh>)
	(<vsh> ^<csh> <visited>)
	(<visited> ^remaining-steps >= <remaining-steps>  #current must be depth-exceeded if the previously visited is depth-exceeded
				^repeats <repeats>)
-->
	(<visited> ^repeats <repeats> -
				(+ <repeats> 1))
}

#if there is no operator tie, it won't be able to check duplicate state during the sequences of operators, but this is OK - it'll detect it in the end
# first time, init at 0
sp {copy*visited*state*to*top-selection*1
	(state <s> ^top-selection true
            ^counter <val>
				^visited-states-hash <vsh>)
	(state <s2> ^current-state-hash <csh> ^current-evaluation-depth <remaining-steps>
				^operator.name save-location
    ^superstate.name <name>)  #register visited state
	(<vsh> -^<csh>) #not previously visited state
-->
	(<vsh> ^<csh> <h>)
	(<h> ^remaining-steps <remaining-steps>
		^repeats 0)
   (<s> ^counter <val> -)
   (<s> ^counter (+ <val> 1))
   (write |New state saved: | (cmd struct-to-string <csh>))
}

# if existing visited state has lower remaining-depths, this is not depth-exceeded, update/increase remaining-steps to current one
sp {copy*visited*state*to*top-selection*2
	(state <s> ^top-selection true
            ^counter <val>
				^visited-states-hash <vsh>)
	(state <s2> ^current-state-hash <csh> ^current-evaluation-depth <remaining-steps>
				^operator.name save-location
    ^superstate.name <name>)  #register visited state
	(<vsh> ^<csh> <h>)
-->
	(<h> ^remaining-steps <remaining-steps>)
   (<s> ^counter <val> -)
   (<s> ^counter (+ <val> 1))
}

sp {assert*no-store-over-max
	(state <ts> ^top-selection true
        ^current-evaluation-depth <ced>
				^visited-states-hash <vsh>)
	(<vsh> ^<csh> <visited>)
	(<visited> ^remaining-steps > <ced>)  
-->
   (write (crlf) | ERROR: bad remaining-steps |)
   (halt)
}


sp {top-selection*counter*init
   (state <s> ^top-selection true)
-->
   (<s> ^counter 0)
}


###########################
## Rules to record failure
############################
#Since failure is not known until all children is evaluated,
# It cannot be done the same way as depth-exceed, which is to record the current state with it's remaining depth, before it actually exceeds the depth
# Failure must be recorded in the parent, with each operator evaluation and corresponding result state
# Notice: there is a difference between real depth-exceed and visited state
# Visited state should actually be treated as failure, but now it doesn't work correctly for some reason

sp {elaborate*resulting*state
	(state <s> ^current-state-hash <csh>
				^superstate.operator <eval-op>
				^superstate.evaluation <e>)
	(<e> ^superoperator <actual-op>)
	(<eval-op> ^superoperator <actual-op>)
-->
	(<e> ^resulting-state-hash <csh>)
}


sp {create*failure*state*link
:o-support
	#(state <s> ^superstate nil)
	(state <s> ^top-selection true)
-->
	(<s> ^failure-states <fs>)
}

sp {record*evaluation*result*top-selection
#:o-support
	(state <s> ^evaluation <eval>
				#^top-state.failure-states <fs>
				^operator.name evaluate-operator
				^current-evaluation-depth <remaining-steps>
				)
	(state <s2> ^failure-states <fs>)
	(<eval> ^resulting-state-hash <state-hash>
			^symbolic-value failure)
-->
	(<fs> ^<state-hash> <remaining-steps>) #1 means direct failure, >=2 means circular failure
}

#this will only happen after update state for states that is not direct failure
#The state can only lead to failure
sp {elaborate*resulting*state*failure
	(state <s> ^current-state-hash <csh>
				^superstate.operator <eval-op>
				^superstate.evaluation <e>)
	(<e> ^resulting-state-hash <csh>)
	(<e> ^superoperator <actual-op>)
	(<eval-op> ^superoperator <actual-op>)
	(state <s2> ^failure-states <fs>)
	(<fs> ^<csh>)
-->
	(<e> ^symbolic-value failure)
	(write (crlf) |Found previously failed state | <csh> (crlf))
}
