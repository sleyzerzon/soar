#!/usr/bin/python
import os
import SCons.Script

Import('env')

# unnecessary?
env = env.Copy()

env.Prepend(CPPPATH = ['#foo',])

SWIGScanner = SCons.Scanner.ClassicCPP(
    "SWIGScan",
    ".i",
    "CPPPATH",
    '^[ \t]*[%,#][ \t]*(?:include|import)[ \t]*(<|")([^>"]+)(>|")'
)
env.Append(SCANNERS=[SWIGScanner])

#if env['CPPFLAGS'].find('fvisibility') >= 0:
#    env.Append(CPPFLAGS = ' -Wno-unused -fno-strict-aliasing -fvisibility=default')
#else:
#    env.Append(CPPFLAGS = ' -Wno-unused -fno-strict-aliasing')

libadd = ['foo',]

libpath = ['#foo',]

swigflags = '-c++ -java -Wall -package foopack -Ifoo -outdir java/build'

Java_foo_interface = env.SharedLibrary(
    'Java_foo_interface', 
    'Java_foo_interface.i', 
    LIBS = libadd, 
    LIBPATH = libpath, 
    SWIGFLAGS = swigflags, 
    SWIGCXXFILESUFFIX = "_wrap.cpp")

foopack_jar_javac = env.Java('classes', 'build')

env['JARCHDIR'] = 'java/classes'
foopack_jar = env.Jar(target = 'foopack.jar', source = 'classes')
