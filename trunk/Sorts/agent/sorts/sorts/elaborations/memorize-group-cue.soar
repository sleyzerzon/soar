# figures out if the group being cued to be memorized has a conflict

sp {elaborate*memorize-group-cue-mine-no-conflict
   (state <s> ^top-state <ts>
              ^io.input-link <in> 
              ^memorize-group-cue <mgc>)
   (<in> ^objects.object <obj>
         ^grouping-level <gl>)
   (<ts> ^group-memory.mine <gm>)
   (<mgc> ^id <id>
          ^type mine)
   (<obj> ^id <id>
          ^type <t>
          ^x-min <xmin>
          ^x-max <xmax>
          ^y-min <ymin>
          ^y-max <ymax>)
  -{(<gm> ^group <g>)
    (<g> ^type <t>
         ^grouping-level <gl>
         ^x-pos { >= <xmin> <= <xmax> }
         ^y-pos { >= <ymin> <= <ymax> })}
-->
   (<mgc> ^no-conflict)}

sp {elaborate*memorize-group-mine-cue-conflict
   (state <s> ^top-state <ts>
              ^io.input-link <in> 
              ^memorize-group-cue <mgc>)
   (<in> ^objects.object <obj>
         ^grouping-level <gl>)
   (<ts> ^group-memory.mine <gm>)
   (<mgc> ^id <id>
          ^type mine)
   (<obj> ^id <id>
          ^type <t>
          ^x-min <xmin>
          ^x-max <xmax>
          ^y-min <ymin>
          ^y-max <ymax>)
   (<gm> ^group <g>)
   (<g> ^type <t>
        ^grouping-level <gl>
        ^x-pos { >= <xmin> <= <xmax> }
        ^y-pos { >= <ymin> <= <ymax> })
-->
   (<mgc> ^conflict <g>)}