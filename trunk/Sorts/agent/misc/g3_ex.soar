
## vsExtract.pl: extracting from file game3.soar

## vsExtract.pl: extracting from file game3_source.soar

## vsExtract.pl: extracting from file _firstload.soar

## vsExtract.pl: extracting from file all_source.soar

## vsExtract.pl: extracting from file elaborations_source.soar

## vsExtract.pl: extracting from file _all.soar
sp {elaborate*state*name
   (state <s> ^superstate.operator.name <name>)
-->
   (<s> ^name <name>)
}

sp {elaborate*state*top-state
   (state <s> ^superstate.top-state <ts>)
-->
   (<s> ^top-state <ts>)
}


# copy down the task id from the operator to the impasse state
#sp {elaborate*state*task-id
#   (state <s> ^superstate.operator.task-id <tid>)
#-->
#   (<s> ^task-id <tid>>)
#}

## vsExtract.pl: extracting from file top-state.soar
sp {elaborate*top-state*top-state
   (state <s> ^superstate nil)
-->
   (<s> ^top-state <s>)
}


## vsExtract.pl: extracting from file apply-basic-actions.soar
sp {apply*orts-move
   (state <s> ^operator <o>
              ^io.output-link <ol>)
   (<o> ^name orts-move
        ^group <g>
        ^x <x>
        ^y <y> )
-->
   (<ol> ^move <m>)
   (<m> ^group0 <g>
        ^param0 <x>
        ^param1 <y>)
}
sp {apply*orts-mine
   (state <s> ^operator <o>
              ^io.output-link <ol>)
   (<o> ^name orts-mine
        ^group <g>)
-->
   (<ol> ^mine <m>)
   (<m> ^group0 <g>)
}

sp {apply*orts-build-building
   (state <s> ^operator <o>
              ^io.output-link <ol>
              ^top-state <ts>)
   (<o> ^name orts-build-building
        ^worker <w>
        ^x <x>
        ^y <y>
        ^building-type <t>
        ^task-id <tid>)
-->
   (<ol> ^build <b>)
   (<b> ^group0 <w>
        ^param0 <t>
        ^param1 <x>
        ^param2 <y>)
   (<ts> ^finished-command <fc>)
   (<fc> ^name orts-build-building
         ^task-id <tid>)
}

sp {apply*orts-set-sticky
   (state <s> ^operator <o>
              ^io.output-link <ol>
              ^top-state <ts>)
   (<o> ^name orts-set-sticky
        ^group <g>)
-->
   (<ol> ^stick <m>)
   (<m> ^group0 <g>)
   (<ts> ^finished-command orts-set-sticky)
}

sp {apply*orts-locate-building
   (state <s> ^operator <o>
              ^io.output-link <ol>
              ^top-state <ts>)
   (<o> ^name orts-locate-building
        ^building-type <t>
        ^x <x>
        ^y <y>
        ^distance <dist>
        ^task-id <tid>)
-->
   (<ol> ^locate-building <lb>)
   (<lb> ^building <t>
         ^x <x>
         ^y <y>
         ^distance <dist>)
   (<ts> ^finished-command <fc>)
   (<fc> ^name orts-locate-building
         ^task-id <tid>)
}
 
sp {apply*orts-train-units
   (state <s> ^operator <o>
              ^io.output-link <ol>
              ^top-state <ts>)
   (<o> ^name orts-train-units
        ^building <b>
        ^unit-type <t>
        ^number <n>
        ^task-id <tid>)
-->
   (<ol> ^train <tr>)
   (<tr> ^group0 <b>
        ^param0 <t>
        ^param1 <n>)
   (<ts> ^finished-command <fc>)
   (<fc> ^name orts-train-units
         ^task-id <tid>)
}

## vsExtract.pl: extracting from file basic.soar
sp {elaborate*io
   (state <s> ^superstate.io <io>)
-->
   (<s> ^io <io>)
}


sp {top-state*propose*wait
    (state <s> ^attribute state
               ^choices none
               ^comment out
              -^operator.name wait)
-->
    (<s> ^operator <o> +)
    (<o> ^name wait)
}

## vsExtract.pl: extracting from file build-barracks.soar
sp {propose*build-barracks
   (state <s> ^name sorts
              ^running-task <rt>
              ^execution-buffer.task <ts>)
   (<rt> ^name build-barracks
         ^id <id>)
   (<ts> ^id <id>
        -^completed <cmp>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name build-building
        ^building-type 1 # see general.h for building type->int translation
        ^building-dim 32 # width/2
        ^task-id <id>) 
}

## vsExtract.pl: extracting from file build-building.soar
sp {build-building*propose*init
   (state <s> ^name build-building
              ^superstate.operator <op>
              ^top-state <ts>)
   (<op> ^task-id <tid>
         ^building-type <ty>
         ^building-dim <dim>)
   (<ts> -^build-building.task-id <tid>)
-->
   (<s> ^operator <o> +)
   (<o> ^name init*build-building
        ^task-id <tid>
        ^building-type <ty>
        ^building-dim <dim>)
}

sp {build-building*apply*init
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name init*build-building
        ^task-id <tid>
        ^building-type <ty>
        ^building-dim <dim>)
-->
   (<s> ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^building-type <ty>
         ^building-dim <dim>)
}

sp {build-building*propose*set-cCenter-loc
   (state <s> ^name build-building
              ^io.input-link.groups <gs>
              ^task-id <tid>
              ^top-state.build-building <bb>)
   (<bb> ^task-id <tid>
        -^cCenter <cc>)
   (<gs> ^group <g>)
   (<g> ^type controlCenter
        ^owner 0
        ^x-pos <x>
        ^y-pos <y>)
        
-->
   (<s> ^operator <o> + > =)
   (<o> ^name set-cCenter-loc
        ^x <x>
        ^y <y>
        ^bb-data <bb>)
}

sp {build-building*apply*set-cCenter-loc
   (state <s> ^operator <o>)
   (<o> ^name set-cCenter-loc
        ^x <x>
        ^y <y>
        ^bb-data <bb>)
-->
   (<bb> ^cCenter <cc>)
   (<cc> ^x <x>
         ^y <y>)
}

# this should keep looking at friendly units until a cCenter is seen
sp {build-building*propose*find-cCenter
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state.build-building <bb>)
   (<bb> ^task-id <tid>
        -^cCenter <cc>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name visual-search
        ^search-type friendly)
}

sp {build-building*propose*find-build-location
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^cCenter <cc>
        -^location <loc>
         ^building-dim <dim>
         ^building-type <t>)
  -{(<ts> ^finished-command <fc>)
    (<fc> ^task-id <tid>
          ^name orts-locate-building)}
   (<cc> ^x <x>
         ^y <y>)
        
-->
   (<s> ^operator <o> + > =)
   (<o> ^name orts-locate-building
        ^x <x>
        ^y <y>
        ^task-id <tid>
        ^distance (+ <dim> 31 40) # keep a gap of 40 cCenter->building
        ^building-type <t>) 
}
sp {build-building*propose*no-location-found
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state.finished-command <fi>
              ^io.input-link <il>)
   (<fi> ^task-id <tid>
         ^name orts-locate-building)
   (<il> ^query-results <q>)
   (<q> ^query-name locate-building
        ^param0 -1
        ^param1 -1)
-->
   (<s> ^operator <o> + >) # prefer to location-found
   (<o> ^name bb*no-location-found
        ^task-id <tid>
        ^finished-command <fi>)
}

sp {build-building*apply*no-location-found
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bb*no-location-found
        ^task-id <tid>
        ^finished-command <fi>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
   
-->
   (<ts> ^finished-command <fi> -)
}

sp {build-building*propose*location-found
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state.finished-command <fi>
              ^io.input-link <il>)
   (<fi> ^task-id <tid>
         ^name orts-locate-building)
   (<il> ^query-results <q>)
   (<q> ^query-name locate-building
        ^param0 <x>
        ^param1 <y>)
-->
   (<s> ^operator <o> +)
   (<o> ^name building-location-found
        ^x <x>
        ^y <y>
        ^task-id <tid>
        ^finished-command <fi>)
}

sp {build-building*apply*location-found
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name building-location-found
        ^x <x>
        ^y <y>
        ^task-id <tid>
        ^finished-command <fi>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
   
-->
   (<bb> ^location <l>)
   (<l> ^x <x>
        ^y <y>)
   (<ts> ^finished-command <fi> -)
}
   

sp {build-building*propose*change-grouping-level
   (state <s> ^name build-building
              -^top-state.grouping-level individuals
               ^io.input-link.groups <gs>)
  -{(<gs> ^group <g>)
     (<g> ^type worker
          ^owner 0
          ^command_running 0
          ^num_members 1)}
-->
   (<s> ^operator <o> + > =)
   (<o> ^name set-grouping-individuals)
}

sp {build-building*propose*find-worker
   (state <s> ^name build-building
              ^top-state <ts>
              ^io.input-link <il>
              ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^location.x <x>
         ^location.y <y>
        -^worker)
   (<il> ^groups <gs>)
   -{(<gs> ^group <g>)
     (<g> ^type worker
          ^owner 0
          ^command_running 0
          ^num_members 1)}
-->
   (<s> ^operator <o> + < =) # prefer changing group level
   (<o> ^name visual-search
        ^search-type friendly_workers)
}

sp {build-building*propose*remember-id
   (state <s> ^name build-building
              ^top-state <ts>
              ^io.input-link.groups.group <g>
              ^task-id <tid>)
   (<g> ^type worker
        ^id <id>
        ^owner 0
        ^command_running 0
        ^num_members 1)
   (<ts> ^build-building <bb>)
      #  -^reserved-worker <id>)
   (<bb> ^task-id <tid>
         ^location.x <x>
         ^location.y <y>
        -^worker <wrk>)
  
-->
    (<s> ^operator <o> +  =)
    (<o> ^name bb*remember-id
         ^worker <id>
         ^task-id <tid>)
}

sp {build-building*apply*remember-id
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<ts> ^build-building <bb>)
   (<o> ^name bb*remember-id
        ^worker <id>
        ^task-id <tid>)
   (<bb> ^task-id <tid>)
-->
   (<bb> ^worker <id>)
  # (<ts> ^reserved-worker <id>)
}

sp {build-building*propose*clear-worker-id # worker disappears
   (state <s> ^name build-building
              ^top-state <ts>
              ^io.input-link.groups <gs>
              ^task-id <tid>)
   (<bb> ^task-id <tid>
         ^worker <id>)
  -{(<gs> ^group <g>)
    (<g> ^type worker
        ^id <id>)}
   (<ts> ^build-building <bb>)
  
-->
   (<s> ^operator <o> + > =)
    (<o> ^name bb*clear-worker-id
         ^task-id <tid>)
}

sp {build-building*apply*clear-worker-id
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<ts> ^build-building <bb> )
#         ^reserved-worker <id>)
   (<o> ^name bb*clear-worker-id
        ^task-id <tid>)
   (<bb> ^task-id <tid>
         ^worker <id>)
-->
   (<bb> ^worker <id> -)
  # (<ts> ^reserved-worker <id> -)
}

sp {build-building*propose*start-build
   (state <s> ^name build-building
              ^top-state <ts>
              ^task-id <tid>
              ^io.input-link <il>) 
   (<il> ^groups <gs>)
   (<gs> ^group <g>)
   (<g> ^type worker
        ^id <id>
        ^owner 0
        ^command_running 0
        ^num_members 1)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^location.x <x>
         ^location.y <y>
        -^started-build true
         ^building-type <tp>
         ^worker <id>)
   -{(<ts> ^finished-command <fc>)
    (<fc> ^task-id <tid>
          ^name orts-build-building)}
-->
    (<s> ^operator <o> +  =)
    (<o> ^name orts-build-building
         ^worker <id>
         ^x <x>
         ^y <y>
         ^building-type <tp>
         ^task-id <tid>)
}

sp {build-building*propose*mark-started
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>)
   (<ts> ^finished-command <fc>)
   (<fc> ^task-id <tid>
         ^name orts-build-building)
-->
   (<s> ^operator <o> + >)
   (<o> ^name build-building*mark-started
        ^task-id <tid>)
}

sp {build-building*apply*mark-started
   (state <s> ^operator <o> 
              ^top-state <ts>)
   (<o> ^name build-building*mark-started
        ^task-id <tid>)
   (<ts> ^finished-command <fc>
         ^build-building <bb>)
   (<fc> ^task-id <tid>
         ^name orts-build-building)
   (<bb> ^task-id <tid>)
-->
   (<bb> ^started-build true)
   (<ts> ^finished-command <fc> -)
}

sp {build-building*propose*retry-failed
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>
              ^io.input-link.groups.group <g>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^worker <id>
         ^started-build true)
   (<g> ^id <id>
        ^command_failure 1)
-->
   (<s> ^operator <o> +)
   (<o> ^name bb*retry-failed
        ^task-id <tid>)
}


sp {build-building*apply*retry-failed
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bb*retry-failed
        ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
-->
   (<ts> ^build-building <bb> -)
}

sp {build-building*propose*done
   (state <s> ^name build-building
              ^task-id <tid>
              ^top-state <ts>
              ^io.input-link.groups.group <g>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>
         ^worker <id>
         ^started-build true)
   (<g> ^id <id>
        ^command_success 1)
-->
   (<s> ^operator <o> +)
   (<o> ^name bb*done
        ^task-id <tid>)
}


sp {build-building*apply*done
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bb*done
        ^task-id <tid>)
   (<ts> ^build-building <bb>)
   (<bb> ^task-id <tid>)
   (<ts> ^execution-buffer.task <t>)
   (<t> ^id <tid>)
-->
   (<ts> ^build-building <bb> -)
   (<t> ^completed true)
}
## vsExtract.pl: extracting from file build-units.soar
sp {build-units*propose*init
   (state <s> ^name build-units
              ^superstate.operator <op>
              ^top-state <ts>)
   (<op> ^task-id <tid>
         ^number <num>
         ^building-name <nam>
         ^unit-type <ty>)
   (<ts> -^build-units.task-id <tid>)
-->
   (<s> ^operator <o> +)
   (<o> ^name init*build-units
        ^task-id <tid>
        ^number <num>
        ^building-name <nam>
        ^unit-type <ty>)
}

sp {build-units*apply*init
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name init*build-units
        ^task-id <tid> 
        ^number <num>
        ^building-name <nam>
        ^unit-type <ty>)
-->
   (<s> ^task-id <tid>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
        ^number <num>
        ^building-name <nam>
        ^unit-type <ty>)
}

# fix this up if we are in danger of non-singleton groups of buildings
sp {build-units*propose*change-grouping-level
   (state <s> ^name build-units
              ^comment out
              -^top-state.grouping-level individuals
               ^io.input-link.groups <gs>)
  -{(<gs> ^group <g>)
     (<g> ^type worker
          ^owner 0
          ^command_running 0
          ^num_members 1)}
-->
   (<s> ^operator <o> + > =)
   (<o> ^name set-grouping-individuals)
}

# this should keep looking at friendly units until the correct building is seen
# todo: find building not already training (or training the least)
sp {build-units*propose*find-building
   (state <s> ^name build-units
              ^top-state <ts>
              ^io.input-link <il>
              ^task-id <tid>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
         ^building-name <nam>
        -^building-id)
   (<il> ^groups <gs>)
   -{(<gs> ^group <g>)
     (<g> ^type <nam>
          ^owner 0
          ^num_members 1)}
-->
   (<s> ^operator <o> + <) # prefer changing group level
   (<o> ^name visual-search
        ^search-type friendly)
}

sp {build-units*propose*remember-id
   (state <s> ^name build-units
              ^top-state <ts>
              ^io.input-link.groups.group <g>
              ^task-id <tid>)   
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
         ^building-name <nam>
        -^building-id <id>)
   (<g> ^type <nam>
        ^id <id>
        ^owner 0
        ^num_members 1)

  
-->
    (<s> ^operator <o> +)
    (<o> ^name bu*remember-id
         ^building-id <id>
         ^task-id <tid>)
}

sp {build-units*apply*remember-id
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<ts> ^build-units <bu>)
   (<o> ^name bu*remember-id
        ^building-id <id>
        ^task-id <tid>)
   (<bu> ^task-id <tid>)
-->
   (<bu> ^building-id <id>)
}

sp {build-units*propose*clear-building-id # building disappears
   (state <s> ^name build-units
              ^top-state <ts>
              ^io.input-link.groups <gs>
              ^task-id <tid>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
         ^building-id <id>
         ^building-name <nam>)
  -{(<gs> ^group <g>)
    (<g> ^type <nam>
        ^id <id>)}
  
-->
   (<s> ^operator <o> + >)
    (<o> ^name bu*clear-building-id
         ^task-id <tid>)
}

sp {build-units*apply*clear-building-id
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<ts> ^build-units <bu> )
   (<o> ^name bu*clear-building-id
        ^task-id <tid>)
   (<bu> ^task-id <tid>
         ^building-id <id>)
-->
   (<bu> ^building-id <id> -)
}

sp {build-units*propose*start-train
   (state <s> ^name build-units
              ^top-state <ts>
              ^task-id <tid>
              ^io.input-link <il>) 
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
         ^building-id <id>
         ^building-name <nam>
        -^started-train true
         ^unit-type <ty>
         ^number <num>)
   (<il> ^groups <gs>)
   (<gs> ^group <g>)
   (<g> ^type <nam>
        ^id <id>)
   -{(<ts> ^finished-command <fc>)
    (<fc> ^task-id <tid>
          ^name orts-train-units)}
-->
    (<s> ^operator <o> + =)
    (<o> ^name orts-train-units
         ^building <id>
         ^unit-type <ty>
         ^number <num>
         ^task-id <tid>)
}

sp {build-units*propose*mark-started
   (state <s> ^name build-units
              ^task-id <tid>
              ^top-state <ts>)
   (<ts> ^finished-command <fc>)
   (<fc> ^task-id <tid>
         ^name orts-train-units)
-->
   (<s> ^operator <o> + >)
   (<o> ^name build-units*mark-started
        ^task-id <tid>)
}

sp {build-units*apply*mark-started
   (state <s> ^operator <o> 
              ^top-state <ts>)
   (<o> ^name build-units*mark-started
        ^task-id <tid>)
   (<ts> ^finished-command <fc>
         ^build-units <bu>)
   (<fc> ^task-id <tid>
         ^name orts-train-units)
   (<bu> ^task-id <tid>)
-->
   (<bu> ^started-train true)
   (<ts> ^finished-command <fc> -)
}

sp {build-units*propose*retry-failed
   (state <s> ^name build-units
              ^task-id <tid>
              ^top-state <ts>
              ^io.input-link.groups.group <g>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
         ^building-id <id>
         ^started-train true)
   (<g> ^id <id>
        ^command_failure 1)
-->
   (<s> ^operator <o> +)
   (<o> ^name bu*retry-failed
        ^task-id <tid>)
}


sp {build-units*apply*retry-failed
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bu*retry-failed
        ^task-id <tid>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>)
-->
   (<ts> ^build-units <bu> -)
}
   
sp {build-units*propose*done
   (state <s> ^name build-units
              ^task-id <tid>
              ^top-state <ts>
              ^io.input-link.groups.group <g>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>
         ^building-id <id>
         ^started-train true)
   (<g> ^id <id>
        ^command_success 1)
-->
   (<s> ^operator <o> +)
   (<o> ^name bu*done
        ^task-id <tid>)
}
sp {build-units*apply*done
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name bu*done
        ^task-id <tid>)
   (<ts> ^build-units <bu>)
   (<bu> ^task-id <tid>)
   (<ts> ^execution-buffer.task <t>)
   (<t> ^id <tid>)
-->
   (<ts> ^build-units <bu> -)
   (<t> ^completed true)
}
   

## vsExtract.pl: extracting from file build-workers.soar
sp {propose*build-workers
   (state <s> ^name sorts
              ^running-task <rt>
              ^execution-buffer.task <ts>)
   (<rt> ^name build-workers
         ^id <id>)
   (<ts> ^id <id>
        -^completed <cmp>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name build-units
        ^number 20
        ^building-name controlCenter
        ^unit-type 0 # see general.h for unit type->int translation
        ^task-id <id>)
}

## vsExtract.pl: extracting from file fake-planning-start.soar
sp {propose*start-build-barracks
   (state <s> ^name sorts
   ^comment out
             -^running-task.name build-barracks)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name start-build-barracks)
}

sp {propose*start-build-workers
   (state <s> ^name sorts
             -^running-task.name build-workers)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name start-build-workers)
}

sp {propose*start-miner-assignment
   (state <s> ^name sorts
              ^comment out
             -^running-task.name miner-assignment)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name start-miner-assignment)
}

sp {apply*start-build-barracks
   (state <s> ^operator.name start-build-barracks)
-->
   (<s> ^running-task <rt>
        ^execution-buffer <eb>)
   (<rt> ^name build-barracks
         ^id 1234)
   (<eb> ^task <t>)
   (<t> ^id 1234)
}

sp {apply*start-build-workers
   (state <s> ^operator.name start-build-workers)
-->
   (<s> ^running-task <rt>
        ^execution-buffer <eb>)
   (<rt> ^name build-workers
         ^id 15151)
   (<eb> ^task <t>)
   (<t> ^id 15151)
}

sp {apply*start-miner-assignment
   (state <s> ^operator.name start-miner-assignment)
-->
   (<s> ^running-task <rt>)
   (<rt> ^name miner-assignment
         ^id 26612)
}
## vsExtract.pl: extracting from file find-free-worker.soar
#TODO: visual search if no free workers!

sp {find-free-worker*propose*change-grouping-level
   (state <s> ^name find-free-worker
              -^top-state.grouping-level individuals)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name set-grouping-individuals)
}

sp {find-free-worker*propose*search
   (state <s> ^name find-free-worker
              ^top-state <ts>
              ^io.input-link.groups <gs>
             -^top-state.find-free-worker.worker)
   (<gs> ^group <g>)
   -{(<g> ^type worker
        ^id <id>
        ^owner 0
        ^command_running 0
        ^num_members 1
        ^sticky 0)
     (<ts> -^reserved-worker <id>)}
-->
   (<s> ^operator <o> + < =)
   (<o> ^name visual-search
        ^search-type friendly_workers)
}

sp {find-free-worker*propose*choose-worker
   (state <s> ^name find-free-worker
              ^top-state <ts>
              ^io.input-link.groups <gs>
             -^top-state.find-free-worker.worker)
   (<gs> ^group <g>)
   (<g> ^type worker
        ^id <id>
        ^owner 0
        ^command_running 0
        ^num_members 1
        ^sticky 0)
   (<ts> -^reserved-worker <id>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name choose-worker
        ^id <id>)
}

sp {find-free-worker*apply*choose-worker
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name choose-worker
        ^id <id>)
-->
   (<ts> ^find-free-worker.worker <id>)
}
   
sp {find-free-worker*propose*set-worker-sticky
   (state <s> ^name find-free-worker
              ^top-state.find-free-worker <w>
              ^top-state <ts>
             -^top-state.finished-command orts-set-sticky)
   (<w> ^worker <id>
       -^done true)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name orts-set-sticky
        ^group <id>)
}

sp {find-free-worker*propose*worker-found
   (state <s> ^name find-free-worker
              ^top-state.find-free-worker.worker <id>
              ^top-state.finished-command orts-set-sticky)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name worker-found)
}

sp {find-free-worker*apply*worker-found
   (state <s> ^operator.name worker-found
              ^top-state <ts>)
   (<ts> ^find-free-worker <w>
         ^finished-command orts-set-sticky)
   (<w> ^worker <id>)
-->
   (<ts> ^finished-command orts-set-sticky -) # clean up
   (<w> ^done true)
   (<ts> ^reserved-worker <id>)
}

## vsExtract.pl: extracting from file find-location-near.soar
sp {apply*find-location-near
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name find-location-near
        ^x <x>
        ^y <y>
        ^width <w>)
-->
   (<ts> ^find-location-near.result <l>)
   (<l> ^x (- <x> <w>)
        ^y <y>)
}


## vsExtract.pl: extracting from file miner-assignment.soar
sp {propose*miner-assignment
   (state <s> ^name sorts
              ^running-task.name miner-assignment)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name miner-assignment)
}

sp {miner-assignment*assign-miner
   (state <s> ^name miner-assignment
              ^io.input-link.groups <gs>)
   (<gs> ^group <g>)
   (<g> ^type worker
        ^id   <gid>
        ^owner 0
        ^command_running 0)
-->
   (<s> ^operator <o> + > =)
    (<o> ^name mine
         ^group <gid>)
}

## vsExtract.pl: extracting from file task-switch.soar
sp {top-state*propose*wait
    (state <s> ^attribute state
               ^choices none
              -^operator.name wait)
-->
    (<s> ^operator <o> +)
    (<o> ^name wait)
}


sp {task-switch*propose*switch
   (state <s> ^attribute state
              ^choices none
              ^comment out
              ^top-state <ts>
             -^operator.name task-switch)
   (<ts> ^running-task <rt>)
-->
   (<s> ^operator <o> +)
   (<o> ^name task-switch)
}

sp {task-switch*apply*switch
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name task-switch)
   (<ts> ^running-task <rt>)
-->
   (<ts> ^running-task <rt> -)
}
## vsExtract.pl: extracting from file visual-search.soar


sp {visual-search*propose*start-search
    (state <s> ^name visual-search
               ^top-state <ts>
               ^comment out)
    (<ts> -^visual-search <vs>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name visual-search*start-search)
}

sp {visual-search*apply*start-search
   (state <s> ^operator <o>
              ^top-state <ts>)
   (<o> ^name visual-search*start-search)
-->
   (<ts> ^visual-search.count 0)
}

sp {visual-search*propose*search-type
   (state <s> ^name visual-search
              ^superstate.operator.search-type <f>
              ^io.input-link <il>
              ^top-state <ts>)
   (<il> ^feature-maps.friendly <fr>)
   (<fr> ^<sector> > 0)
  # (<ts> ^visual-search.count <c>)
   (<il> ^groups.group <g>) #re-propose if groups change
-->
   (<s> ^operator <o> + > =)
   (<o> ^name look-at-feature
        ^feature <f>
        ^sector <sector>)
}

sp {visual-search*propose*search-worker
   (state <s> ^name visual-search
              ^superstate.operator.worker-id <id>
              ^io.input-link <il>
              ^top-state <ts>)
   (<il> ^feature-maps.friendly_workers <fr>)
   (<fr> ^<sector> > 0)
   (<il> ^groups <gs>)
   -{(<gs> ^group <g>)
     (<g> ^type worker
          ^id <id>)}
   (<il> ^groups.group <xx>) #re-propose if groups change
-->
   (<s> ^operator <o> + > =)
   (<o> ^name look-at-feature
        ^feature friendly_workers
        ^sector <sector>)
}

## vsExtract.pl: extracting from file x_plan-one.soar
## vsExtract.pl: file has been disabled with x_ prefix
# sp {plan-memory*propose*get-init-task-explore1
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>)
#  -(<eb> ^task.name explore1)
#  -(<rb> ^task.name explore1)
#  -(<c> ^task.name explore1)
# -->
#   (<s> ^operator <o> + =)
#   (<o> ^name get-init-task-explore1)}
# 
# sp {plan-memory*apply*get-init-task-explore1
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name get-init-task-explore1)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name explore1
#         ^instance-of explore
#         ^params <p>)
#   (<p>  ^unit worker)}
# 
# sp {plan-memory*propose*get-init-task-build_barracks0
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>)
#  -(<eb> ^task.name build_barracks0)
#  -(<rb> ^task.name build_barracks0)
#  -(<c> ^task.name build_barracks0)
# -->
#   (<s> ^operator <o> + =)
#   (<o> ^name get-init-task-build_barracks0)}
# 
# sp {plan-memory*apply*get-init-task-build_barracks0
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name get-init-task-build_barracks0)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name build_barracks0
#         ^instance-of build_barracks
#    )
# }
# 
# sp {plan-memory*propose*explore1-trigger-attack4-2
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>
#         ^comment out)
#   (<nc> ^task.name explore1)
#  -(<eb> ^task.name attack4)
#  -(<rb> ^task.name attack4)
#  -(<c> ^task.name attack4)
# -->
#   (<s> ^operator <o> +)
#   (<o> ^name explore1-trigger-attack4-2)}
# 
# sp {plan-memory*apply*explore1-trigger-attack4-2
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name explore1-trigger-attack4-2)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name attack4
#         ^instance-of attack       
#          ^start-dep build_marines2 ^dep explore1)
# }
# 
# sp {plan-memory*propose*build_barracks0-trigger-mine3-3
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>)
#   (<nc> ^task.name build_barracks0)
#  -(<eb> ^task.name mine3)
#  -(<rb> ^task.name mine3)
#  -(<c> ^task.name mine3)
# -->
#   (<s> ^operator <o> +)
#   (<o> ^name build_barracks0-trigger-mine3-3)}
# 
# sp {plan-memory*apply*build_barracks0-trigger-mine3-3
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name build_barracks0-trigger-mine3-3)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name mine3
#         ^instance-of mine
#         ^params <p>
#          ^start-dep build_barracks0)
#   (<p>  ^workers 0)}
# 
# sp {plan-memory*propose*build_barracks0-trigger-build_workers5-4
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>)
#   (<nc> ^task.name build_barracks0)
#  -(<eb> ^task.name build_workers5)
#  -(<rb> ^task.name build_workers5)
#  -(<c> ^task.name build_workers5)
# -->
#   (<s> ^operator <o> +)
#   (<o> ^name build_barracks0-trigger-build_workers5-4)}
# 
# sp {plan-memory*apply*build_barracks0-trigger-build_workers5-4
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name build_barracks0-trigger-build_workers5-4)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name build_workers5
#         ^instance-of build_workers
#         ^params <p>
#          ^start-dep build_barracks0)
#   (<p>  ^num 0)}
# 
# sp {plan-memory*propose*build_barracks0-trigger-build_marines2-5
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>)
#   (<nc> ^task.name build_barracks0)
#  -(<eb> ^task.name build_marines2)
#  -(<rb> ^task.name build_marines2)
#  -(<c> ^task.name build_marines2)
# -->
#   (<s> ^operator <o> +)
#   (<o> ^name build_barracks0-trigger-build_marines2-5)}
# 
# sp {plan-memory*apply*build_barracks0-trigger-build_marines2-5
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name build_barracks0-trigger-build_marines2-5)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name build_marines2
#         ^instance-of build_marines
#         ^params <p>
#          ^dep build_barracks0)
#   (<p>  ^num 0)}
# 
# sp {plan-memory*propose*build_marines2-trigger-attack4-6
#   (state <s> ^name sorts
#              ^planning <pl>)
#   (<pl> ^execution-buffer <eb>
#         ^retrieval-buffer <rb>
#         ^completed <c>)
#   (<nc> ^task.name build_marines2)
#  -(<eb> ^task.name attack4)
#  -(<rb> ^task.name attack4)
#  -(<c> ^task.name attack4)
# -->
#   (<s> ^operator <o> +)
#   (<o> ^name build_marines2-trigger-attack4-6)}
# 
# sp {plan-memory*apply*build_marines2-trigger-attack4-6
#   (state <s> ^name sorts
#              ^operator <o>
#              ^planning.retrieval-buffer <rb>)
#   (<o> ^name build_marines2-trigger-attack4-6)
# -->
#   (<rb> ^task <rt>)
#   (<rt> ^name attack4
#         ^instance-of attack
#          ^start-dep build_marines2 ^dep explore1)
#   }
## vsExtract.pl: extracting from file x_planning.soar
## vsExtract.pl: file has been disabled with x_ prefix
# sp {propose*complete-task
#    (state <s> ^name sorts
#               ^planning <p>)
#    (<p> ^execution-buffer.task <ct>)
#    (<ct> ^completed)
# -->
#    (<s> ^operator <o> +)
#    (<o> ^name planning-complete-task
#         ^task <ct>)}
# 
# sp {apply*complete-task
#    (state <s> ^name sorts
#               ^planning <p>
#               ^io.input-link.view-frame <vf>
#               ^operator <o>)
#    (<p> ^execution-buffer <eb>
#         ^completed <c>)
#    (<o> ^name planning-complete-task
#         ^task <t>)
#    #(<t> ^name <n> ^plan <pl>)
#    (<t> ^name <n>)
# -->
#    (<c> ^task <ct>)
#    (<ct> ^name <n>
#         # ^plan <pl>
#          ^completion-frame <vf>)
#    (<eb> ^task <t> -)}
# 
# sp {propose*resolve-dep
#    (state <s> ^name sorts
#               ^planning <pl>)
#    (<pl> ^retrieval-buffer.task <rt>
#          ^completed <c>)
#    (<rt> ^dep <d>)
#    (<c> ^task.name <d>)
# -->
#    (<s> ^operator <o> +)
#    (<o> ^name planning-resolve-dep
#         ^task <rt>
#         ^dep <d>)}
# 
# sp {apply*resolve-dep
#    (state <s> ^name sorts
#               ^operator <o>)
#    (<o> ^name planning-resolve-dep
#         ^task <t>
#         ^dep <p>)
# -->
#    (<t> ^dep <p> -)}
# 
# sp {propose*resolve-start-dep
#    (state <s> ^name sorts
#               ^planning <pl>)
#    (<pl> ^retrieval-buffer.task <rt>
#          ^execution-buffer.task <et>)
#    (<rt> ^start-dep <d>)
#    (<et> ^name <d>
#          ^started)
# -->
#    (<s> ^operator <o> +)
#    (<o> ^name planning-resolve-dep
#         ^task <rt>
#         ^start-dep <d>)}
# 
# sp {apply*resolve-start-dep
#    (state <s> ^name sorts
#               ^operator <o>)
#    (<o> ^name planning-resolve-dep
#         ^task <t>
#         ^start-dep <p>)
# -->
#    (<t> ^start-dep <p> -)}
# 
# 
# sp {propose*execute-task
#    (state <s> ^name sorts
#               ^planning <p>)
#    (<p> ^retrieval-buffer.task <rt>
#         ^execution-buffer <eb>)
#    (<rt> -^dep
#          -^start-dep)
# -->
#    (<s> ^operator <o> +)
#    (<o> ^name planning-execute-task
#         ^task <rt>)}
# 
# sp {apply*execute-task
#    (state <s> ^name sorts
#               ^planning <p>
#               ^operator <o>)
#    (<p> ^retrieval-buffer <rb>
#         ^execution-buffer <eb>)
#    (<o> ^name planning-execute-task
#         ^task <t>)
# -->
#    (<eb> ^task <t>)
#    (<rb> ^task <t> -)}
## vsExtract.pl: extracting from file apply-vision-commands.soar
sp {apply*enable-owner-grouping
   (state <s> ^operator <o>
              ^io <io>)
    (<o> ^name enable-owner-grouping)
-->
   (<io> ^output-link enable-owner-grouping)
}

sp {apply*look-at-feature
    (state <s> ^operator <o>
               ^io.output-link <ol>)
    (<o> ^name look-at-feature
         ^feature <feature>
         ^sector <sector>)
-->
   (<ol> ^look-feature <lf>)
   (<lf> ^feature <feature>
         ^sector <sector>)
}
sp {apply*move-to-feature
    (state <s> ^operator <o>
               ^io.output-link <ol>)
    (<o> ^name move-to-feature
         ^feature <feature>
         ^sector <sector>)
-->
   (<ol> ^move-feature <lf>)
   (<lf> ^feature <feature>
         ^sector <sector>)
}

sp {apply*change-view-width
    (state <s> ^operator <o>
               ^io.output-link <ol>)
    (<o> ^name change-view-width
         ^width <w>)
-->
   (<ol> ^view-width <vw>)
   (<vw> ^value <w>)
}


sp {apply*set-grouping-individuals
    (state <s> ^operator <o>
               ^io.output-link <ol>
               ^top-state <ts>)
    (<o> ^name set-grouping-individuals)
-->
   (<ts> ^grouping-level individuals)
   (<ts> ^grouping-level small-groups -)
   (<ts> ^grouping-level large-groups -)
   (<ol> ^grouping-radius <g>)
   (<g> ^value 0)
}

sp {apply*set-grouping-small-groups
    (state <s> ^operator <o>
               ^io.output-link <ol>
               ^top-state <ts>)
    (<o> ^name set-grouping-small-groups)
-->
   (<ts> ^grouping-level individuals -)
   (<ts> ^grouping-level small-groups)
   (<ts> ^grouping-level large-groups -)
   (<ol> ^grouping-radius <g>)
   (<g> ^value 32)
}

sp {apply*set-grouping-large-groups
    (state <s> ^operator <o>
               ^io.output-link <ol>
               ^top-state <ts>)
    (<o> ^name set-grouping-large-groups)
-->
   (<ts> ^grouping-level individuals -)
   (<ts> ^grouping-level small-groups -)
   (<ts> ^grouping-level large-groups)
   (<ol> ^grouping-radius <g>)
   (<g> ^value 64)
}

## vsExtract.pl: extracting from file initialize-sorts.soar
sp {propose*initialize-sorts
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> +)
   (<o> ^name initialize-sorts)
}

sp {apply*initialize-sorts
   (state <s> ^operator <op>)
   (<op> ^name initialize-sorts)
-->
   (<s> ^name sorts
        ^grouping-level small-groups
        ^planning <pl>
        ^opportunity-task-buffer <otb>
        ^group-memory <gm>)
   (<pl> ^retrieval-buffer <rb>
         ^execution-buffer <eb>
         ^completed <c>)
   (<gm> ^mine <mg>
         ^world <wg>)
}


