# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}

c['bots'] = [
	("winterbot", "4Xyplz"),
]
c['slavePortnum'] = 9989

from buildbot.changes.svnpoller import SVNPoller
from buildbot.scheduler import Scheduler
from buildbot.process import factory
from buildbot.steps import source, shell
from buildbot.status.mail import MailNotifier

c['sources'] = [SVNPoller(svnurl='http://soar.googlecode.com/svn', pollinterval=300)]

def isTrunk( change ):
	if 'trunk/SoarSuite' in change.asText():
		return True
	return False

def isEpmem( change ):
	if 'branches/nlderbin-wma-epmem' in change.asText():
		return True
	return False

def isSmem( change ):
	if 'branches/nlderbin-epmem-smem' in change.asText():
		return True
	return False

s1 = Scheduler(name = 'trunk', branch = None, treeStableTimer = 10*60, builderNames = ['trunk-ubuntu', ], fileIsImportant = isTrunk )
s2 = Scheduler(name = 'epmem', branch = None, treeStableTimer = 10*60, builderNames = ['epmem-ubuntu', ], fileIsImportant = isEpmem )
s3 = Scheduler(name = 'smem', branch = None, treeStableTimer = 10*60, builderNames = ['smem-ubuntu', ], fileIsImportant = isSmem )
c['schedulers'] = [ s1, s2, s3 ]
     
f1 = factory.BuildFactory()
f1.addStep(source.SVN, mode='update', 
	svnurl='http://soar.googlecode.com/svn/trunk/SoarSuite')
f1.addStep(shell.Compile, description='cleaning', descriptionDone='clean', 
	command="make clean")
f1.addStep(shell.Compile, description='building', descriptionDone='building', 
	command="make")
f1.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing', descriptionDone='Unit Tests', 
	command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f1.addStep(shell.Test, workdir='build/SoarLibrary/lib', description='Testing Java', descriptionDone='Test Java', 
	command='LD_LIBRARY_PATH="." java -jar soar-smljava-9.0.2.jar')

f2 = factory.BuildFactory()
f2.addStep(source.SVN, mode='update', 
	svnurl='http://soar.googlecode.com/svn/trunk/SoarSuite')
f2.addStep(shell.Compile, description='cleaning', descriptionDone='clean',
	command="make clean")
f2.addStep(shell.Compile, description='building', descriptionDone='building',
	command="make noscu")
f2.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing', descriptionDone='Unit Tests',
	command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f2.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing Java', descriptionDone='Test Java',
	command='LD_LIBRARY_PATH="." java -jar soar-smljava-9.0.2.jar')

f3 = factory.BuildFactory()
f3.addStep(source.SVN, mode='update',
        svnurl='http://soar.googlecode.com/svn/branches/nlderbin-wma-epmem')
f3.addStep(shell.Compile, description='cleaning', descriptionDone='clean',
        command="make clean")
f3.addStep(shell.Compile, description='building', descriptionDone='building',
        command="make")
f3.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing', descriptionDone='Unit Tests',
        command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f3.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing Java', descriptionDone='Test Java',
        command='LD_LIBRARY_PATH="." java -jar soar-smljava-9.0.2.jar')

f4 = factory.BuildFactory()
f4.addStep(source.SVN, mode='update',
        svnurl='http://soar.googlecode.com/svn/branches/nlderbin-wma-epmem')
f4.addStep(shell.Compile, description='cleaning', descriptionDone='clean',
        command="make clean")
f4.addStep(shell.Compile, description='building', descriptionDone='building',
        command="make noscu")
f4.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing', descriptionDone='Unit Tests',
        command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f4.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing Java', descriptionDone='Test Java',
        command='LD_LIBRARY_PATH="." java -jar soar-smljava-9.0.2.jar')

f5 = factory.BuildFactory()
f5.addStep(source.SVN, mode='update',
        svnurl='http://soar.googlecode.com/svn/branches/nlderbin-epmem-smem')
f5.addStep(shell.Compile, description='cleaning', descriptionDone='clean',
        command="make clean")
f5.addStep(shell.Compile, description='building', descriptionDone='building',
        command="make")
f5.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing', descriptionDone='Unit Tests',
        command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f5.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing Java', descriptionDone='Test Java',
        command='LD_LIBRARY_PATH="." java -jar soar-smljava-9.0.2.jar')

f6 = factory.BuildFactory()
f6.addStep(source.SVN, mode='update',
        svnurl='http://soar.googlecode.com/svn/branches/nlderbin-epmem-smem')
f6.addStep(shell.Compile, description='cleaning', descriptionDone='clean',
        command="make clean")
f6.addStep(shell.Compile, description='building', descriptionDone='building',
        command="make noscu")
f6.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing', descriptionDone='Unit Tests',
        command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f6.addStep(shell.Test, workdir='build/SoarLibrary/bin', description='Testing Java', descriptionDone='Test Java',
        command='LD_LIBRARY_PATH="." java -jar soar-smljava-9.0.2.jar')

c['builders'] = [
	{'name':'trunk-ubuntu', 'slavenames':['winterbot', ], 'builddir':'trunk-ubuntu', 'factory':f1 },
	{'name':'epmem-ubuntu', 'slavenames':['winterbot', ], 'builddir':'epmem-ubuntu', 'factory':f3 },
	{'name':'smem-ubuntu', 'slavenames':['winterbot', ], 'builddir':'smem-ubuntu', 'factory':f5 },
]

c['status'] = []

from buildbot.status import html, mail
c['status'].append(html.Waterfall(http_port=8010, css='/home/voigtjr/soar/buildbot/buildmaster/buildbot.css'))

mn = MailNotifier(fromaddr="soar@winter.eecs.umich.edu", sendToInterestedUsers=False, extraRecipients=['voigtjr@gmail.com'])
c['status'].append(mn)

c['projectName'] = "Soar"
c['projectURL'] = "http://soar.googlecode.com"

c['buildbotURL'] = "http://winter.eecs.umich.edu:8010/"
