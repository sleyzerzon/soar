echo "\nLoading explore/move.soar "

## Explore operator - attempt to move to square w/ earliest visit time


## move forward if both sides are blocked
sp {explore*propose*move*blocked-left-right
   (state <s> ^name explore
              ^io.input-link.blocked <b>)
   (<b> ^forward no
        ^left yes
        ^right yes)
-->
   (<s> ^operator <o> + =)
   (<o> ^name move
        ^actions.move.direction forward)}


## move forward if one side is blocked and other side's visit count is less than 'forward' square's visit count
## move forward if both sides are blocked
sp {explore*propose*move*blocked-one-side
   (state <s> ^name explore
              ^io.input-link <il>
              ^status.square <sq>
              ^direction-map <dm>)
   (<il> ^blocked <b>
         ^direction <heading>)
   (<b> ^forward no
        ^{<< left right >> <dir>} no
        ^<< left right >> yes)
   (<dm> ^<heading>.<dir> <adj>)
   (<sq> ^<heading>.visit <v>
        -^<adj>.visit < <v>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name move
        ^actions.move.direction forward)
#        ^actions.fire.weapon missile)
#  (write (crlf) |DEBUG|)
}



## move forward if one side is blocked and other side's visit count is less than 'forward' square's visit count
## move forward if both sides are blocked
sp {explore*propose*move*left-right-open
   (state <s> ^name explore
              ^io.input-link <il>
              ^status.square <sq>
              ^direction-map <dm>)
   (<il> ^blocked <b>
         ^direction <heading>)
   (<b> ^forward no
        ^left no
        ^right no)
   (<dm> ^<heading>.left <Rdir>
         ^<heading>.right <Ldir>)
   (<sq> ^<heading>.visit <v>
        -^<Ldir>.visit < <v>
        -^<Rdir>.visit < <v>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name move
        ^actions.move.direction forward)}



