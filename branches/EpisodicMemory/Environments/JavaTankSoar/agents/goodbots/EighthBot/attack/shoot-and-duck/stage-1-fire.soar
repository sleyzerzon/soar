echo "\nLoading attack/shoot-and-duck/stage-1-fire"


### initiate a shoot and duck...
sp {propose*shoot-and-duck*stage-one
   (state <s> ^name attack*shoot-and-duck
             -^status.manuever)
-->
   (<s> ^operator <o> + =)
   (<o> ^name shoot-and-duck-1-fire
        ^actions <a>)
   (<a> ^fire.weapon missile
        ^radar.switch on)  ## turn radar on to make to see enemy on next turn (overcomes a bug)
}

### initiate a shoot and duck...
sp {propose*shoot-and-duck*stage-one*resume
   (state <s> ^name attack*shoot-and-duck
              ^status.manuever.action fire)
-->
   (<s> ^operator <o> + =)
   (<o> ^name shoot-and-duck-1-fire
        ^actions <a>)
   (<a> ^fire.weapon missile
        ^radar.switch on)  ## turn radar on to make to see enemy on next turn (overcomes a bug)
#   (write (crlf) |resuming manuever|)
}
######################################################
### UPDATE - go to 'duck' if incoming or enemy is 1 square away
#########################################################

### duck incoming missiles
sp {update*shoot-and-duck*stage-one*duck-incoming
:o-support
   (state <s> ^operator.name shoot-and-duck-1-fire
              ^io.input-link <il>
              ^status <st>)
   (<il> ^clock <ck>
         ^incoming.forward yes)
   (<st> ^enemy-sighted <es>)
   (<es> ^direction forward
         ^position center
         ^distance <d>)
-->
   (<st> ^manuever <man>)
   (<man> ^action duck  
          ^time (+ 1 <ck>)
          ^delay (+ <ck> (/ <d> 1.3)))
}


### duck b/c enemy is at point blank range
sp {update*shoot-and-duck*stage-one*duck-point-blank
:o-support
   (state <s> ^operator.name shoot-and-duck-1-fire
              ^io.input-link <il>
              ^status <st>)
   (<il> ^clock <ck>)
   (<st> ^enemy-sighted <es>)
   (<es> ^direction forward
         ^position center
         ^distance 1)
-->
   (<st> ^manuever <man>)
   (<man> ^action duck  
          ^time (+ 1 <ck>)    
          ^delay (+ 1 <ck>))   # don't delay at all since enemy is so close
}




### keep shooting - no need to duck yet - mutually exclusive w/ above two conditions
sp {update*shoot-and-duck*stage-one*keep-firing
:o-support
   (state <s> ^operator.name shoot-and-duck-1-fire
              ^io.input-link <il>
              ^status <st>)
   (<il> ^clock <ck>
         ^incoming.forward no)
   (<st> ^enemy-sighted <es>)
   (<es> ^direction forward
         ^position center
         ^distance > 1)
-->
   (<st> ^manuever <man>)
   (<man> ^action fire      ## keep on firing
          ^time (+ 1 <ck>))
}