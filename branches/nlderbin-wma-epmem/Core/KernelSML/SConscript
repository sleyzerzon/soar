#!/usr/bin/python

import glob
import sys
import os

Import('env')
env = env.Copy()
env.Prepend(CPPPATH = ['src', 
		       'include', 
		       '../SoarKernel/include',
		       '../CLI/include',
		       '../ElementXML/include',
		       '../ConnectionSML/include'])

if sys.platform == 'cygwin':
	env.Append(CPPFLAGS = ' -D_USRDLL')
	env['no_import_lib'] = 1

if env[ 'processor' ] != 'powerpc':
	libadd = [
		   'ElementXML',
		   'ConnectionSML',
		   'CommandLineInterface',
		   'SoarKernel',
		   'sqlite3',
		   ]
	if sys.platform == "darwin":
		os.system( "ln -sf libsqlite.dylib.osx-intel ../../SoarLibrary/lib/libsqlite3.dylib" )
		os.system( "ln -sf libsqlite.dylib.osx-intel ../../SoarLibrary/lib/libsqlite3.0.dylib" )
		os.system( "ln -sf libsqlite.dylib.osx-intel ../../SoarLibrary/lib/libsqlite3.0.8.6.dylib" )
	else:
		os.system( "ln -sf libsqlite.so.linux ../../SoarLibrary/lib/libsqlite3.so" )
		os.system( "ln -sf libsqlite.so.linux ../../SoarLibrary/lib/libsqlite3.so.0" )
		os.system( "ln -sf libsqlite.so.linux ../../SoarLibrary/lib/libsqlite3.so.0.8.6" )
else:
	libadd = [
		   'ElementXML',
		   'ConnectionSML',
		   'CommandLineInterface',
		   'SoarKernel',
		   'sqlite3',
		   ]
	os.system( "ln -sf libsqlite.dylib.osx-ppc ../../SoarLibrary/lib/libsqlite3.dylib" )
	os.system( "ln -sf libsqlite.dylib.osx-ppc ../../SoarLibrary/lib/libsqlite3.0.dylib" )
	os.system( "ln -sf libsqlite.dylib.osx-ppc ../../SoarLibrary/lib/libsqlite3.0.8.6.dylib" )

if sys.platform == 'cygwin':
	   libadd.extend(['pcre',])

if sys.platform == 'cygwin':
	libadd.extend(['ws2_32',])
	 
libpath = [ 
	    '../SoarKernel',
	    '../CLI',
	    '../ConnectionSML',
	    '../ElementXML', 
	    '../pcre', 
	    '../../SoarLibrary/lib',
	    ]

if env['scu']:
	SoarKernelSML = env.SharedLibrary('SoarKernelSML', 'KernelSML.cxx', LIBS = libadd, LIBPATH = libpath)
else:
	SoarKernelSML = env.SharedLibrary('SoarKernelSML', glob.glob('src/*.cpp'), LIBS = libadd, LIBPATH = libpath)
env.Install('#SoarLibrary/lib', SoarKernelSML)

