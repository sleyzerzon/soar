gp-max 500000
gp {dice*rl*challenge-exact*after-bid*not-one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name [ challenge exact ])
   (<dcs> ^dice-count <dc1> <dc2> <dcu>)
   (<dc1> ^face <last-bid-face>
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dc2> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5])
   (<in> ^state.last-bid <bid>)
   (<bid> ^face { [ 2 3 4 5 6 ] <last-bid-face> }
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ])
-->
   (<s> ^operator <op> = 0)
}

gp {dice*rl*challenge-exact*after-bid*not-one*no-last-bid
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name [ challenge exact ])
   (<dcs> ^dice-count <dc1> <dc2> <dcu>)
   (<dc1> ^face <last-bid-face>
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dc2> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
   (<in> ^state.last-bid nil)
-->
   (<s> ^operator <op> = 0)
}


gp {dice*rl*challenge-exact*after-bid*one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name [ challenge exact ])
   (<dcs> ^dice-count <dc1> <dcu>)
   (<dc1> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
   (<in> ^state.last-bid <bid>)
   (<bid> ^face 1
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ])
-->
   (<s> ^operator <op> = 0)
}


gp {dice*rl*challenge-exact*after-bid*one*no-last-bid
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name [ challenge exact ])
   (<dcs> ^dice-count <dc1> <dcu>)
   (<dc1> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
   (<in> ^state.last-bid nil)
-->
   (<s> ^operator <op> = 0)
}


gp {dice*rl*bid*not-one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name bid
          ^face { <bid-face> [ 2 3 4 5 6 ] }
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ]     
         -^push-face)
   (<dcs> ^dice-count <dc1> <dc2> <dcu>)
   (<dc1> ^face <bid-face>
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dc2> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
-->
   (<s> ^operator <op> = 0)
}

gp {dice*rl*bid*one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name bid
          ^face 1
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ]
         -^push-face)
   (<dcs> ^dice-count <dc1> <dcu>)
   (<dc1> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
-->
   (<s> ^operator <op> = 0)
}

gp {dice*rl*bid-push*not-one*push-not-one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name bid
          ^face { <bid-face> [ 2 3 4 5 6 ] }
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ]
          ^push-face-count 1
          ^push-face <bid-face>)
   (<dcs> ^dice-count <dc1> <dc2> <dcu>)
   (<dc1> ^face <bid-face>
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dc2> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
-->
   (<s> ^operator <op> = 0)
}


gp {dice*rl*bid-push*not-one*push-one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name bid
          ^face { <bid-face> [ 2 3 4 5 6 ] }
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ]
          ^push-face-count 1
          ^push-face 1)
   (<dcs> ^dice-count <dc1> <dc2> <dcu>)
   (<dc1> ^face <bid-face>
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dc2> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
-->
   (<s> ^operator <op> = 0)
}

gp {dice*rl*bid-push*one*push-one
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name bid
          ^face 1 
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ]
          ^push-face-count 1
          ^push-face 1)
   (<dcs> ^dice-count <dc1> <dcu>)
   (<dc1> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
-->
   (<s> ^operator <op> = 0)
}

gp {dice*rl*bid-push*not-one*push-two
   (state <s> ^superstate nil
              ^true-dice-counts <dcs>
              ^operator <op> +
              ^io.input-link <in>)
   (<op> ^name bid
          ^face { <bid-face> [ 2 3 4 5 6 ] }
          ^multiplier [ 1 2 3 4 5 6 7 8 9 10 ]
          ^push-face-count 2
          ^push-face <bid-face>
          ^push-face 1)
   (<dcs> ^dice-count <dc1> <dc2> <dcu>)
   (<dc1> ^face <bid-face>
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dc2> ^face 1
          ^count [ 0 1 2 3 4 5 6 7 8 9 ])
   (<dcu> ^face unknown
          ^count [ 1 2 3 4 5 ])
-->
   (<s> ^operator <op> = 0)
}

gp {dice*rl*pass
   (state <s> ^superstate nil
              ^operator <op> +
              ^io.input-link.players.me <me>)
   (<op> ^name pass)
   (<me> ^pushed.count [ 0 1 2 3 4 5 ]
         ^cup.count [ 1 2 3 4 5 ])   
-->
   (<s> ^operator <op> = 0)
}
