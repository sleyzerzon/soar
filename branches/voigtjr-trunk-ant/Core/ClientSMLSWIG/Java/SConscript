#!/usr/bin/python
import glob
import os
import SCons.Script
import sys
import SoarSCons

Import('env')
env = env.Clone()

newcpppath = ['#Core/ClientSML/include', '#Core/ElementXML/include', '#Core/ConnectionSML/include', ]
env.Prepend(CPPPATH = newcpppath)

SWIGScanner = SCons.Scanner.ClassicCPP("SWIGScan",".i","CPPPATH",'^[ \t]*[%,#][ \t]*(?:include|import)[ \t]*(<|")([^>"]+)(>|")')
env.Append(SCANNERS=[SWIGScanner])

newcppflags = str()
if env['CPPFLAGS'].find('fvisibility') >= 0:
	newcppflags = ' -Wno-unused -fno-strict-aliasing -fvisibility=default'
else:
	newcppflags = ' -Wno-unused -fno-strict-aliasing'
env.Append(CPPFLAGS = newcppflags)

libadd = ['ClientSML', 'ConnectionSML', 'ElementXML', ]
libpath = ['#Core/ClientSML', '#Core/ConnectionSML', '#Core/ElementXML', ]
swigflags = '-c++ -java -Wall -package sml -ICore/ClientSML/include -ICore/ElementXML/include -ICore/ConnectionSML/include -outdir Core/ClientSMLSWIG/Java/src'
swigsources = ['Java_sml_ClientInterface.i', ]

env_jni = env.Clone()
targetname = 'Java_sml_ClientInterface'
if sys.platform == 'darwin':
	env_jni.Append(SHLINKFLAGS = ' -framework JavaVM')
	targetname = 'libJava_sml_ClientInterface.jnilib'
	#env_jni['SHLIBSUFFIX'] = '.jnilib'

# BUGBUG: Scons is interpreting the target of this to be "sml.java" I'm unable to fix it.
Java_sml_ClientInterface = env_jni.SharedLibrary(
    target = targetname, 
    source = swigsources, 
    LIBS = libadd, LIBPATH = libpath, SWIGFLAGS = swigflags, SWIGCXXFILESUFFIX = "_wrap.cpp")

# This dependency isn't getting picked up:
Depends(Java_sml_ClientInterface, '#Core/ElementXML')

# Build SML Jar using ant
theJar = '#Core/ClientSMLSWIG/Java/sml.jar'
Depends(theJar, 'build.xml')
Depends(theJar, Java_sml_ClientInterface)
env.Command(theJar, SoarSCons.JavaSources('src'), 'ant', chdir=1)
if env.GetOption('clean'):
	os.system('ant clean')

# Install the shared library to lib
env.Install('#SoarLibrary/lib', Java_sml_ClientInterface)

