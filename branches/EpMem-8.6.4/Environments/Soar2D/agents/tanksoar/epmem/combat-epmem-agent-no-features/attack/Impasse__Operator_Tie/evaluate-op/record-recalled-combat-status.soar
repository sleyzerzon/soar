#IF I've recalled an epmem
#AND I need to update my recalled info
#THEN propose doing an update
sp {evaluate-op*propose*record-recalled-combat-status
   (state <s> ^name evaluate-op
              ^io.input-link <il>
              ^recall-update needed
              ^epmem.retrieved <ret>)
   (<il> ^my-color <my-color>
         ^smell.color <enemy-color>)
   (<ret> ^io.input-link.current-score <cs>)
   (<cs> ^<enemy-color> <enemy-score>
         ^<my-color> <my-score>)
-->
   (<s> ^operator <op> +)
   (<op> ^name record-recalled-combat-status
         ^enemy-score <enemy-score>
         ^my-score <my-score>)
}

#IF the operator has been selected
#AND I've not recorded my score yet
#THEN record it and init the eval adjustment
sp {apply*record-recalled-combat-status*first-my-score
   (state <s> ^operator <op>
             -^my-score)
   (<op> ^name record-recalled-combat-status
         ^my-score <my-score>)
-->
   (<s> ^my-score <ms>)
   (<ms> ^current <my-score>
         ^change 0
         ^eval-adjust 0)
}

#IF the operator has been selected
#AND I've not recorded an enemy score yet
#THEN record one
sp {apply*record-recalled-combat-status*first-enemy-score
   (state <s> ^operator <op>
             -^enemy-score)
   (<op> ^name record-recalled-combat-status
         ^enemy-score <enemy-score>)
-->
   (<s> ^enemy-score <es>)
   (<es> ^current <enemy-score>
         ^change 0
         ^eval-adjust 0)
}


#Elaborate the epmem with the magnitude of
#change in my score between the current
#epmem and the previous onee
sp {elaborate*record-recalled-combat-status*my-score-change-one-step
   (state <s> ^operator <op> +
              ^epmem.retrieval-count <cycles>
              ^my-score.current <old-score>)
   (<op> ^name record-recalled-combat-status
         ^my-score <new-score>)
-->
   (<op> ^my-turn-change (abs (- <new-score> <old-score>))
         ^my-eval-adjust (/ (abs (- <new-score> <old-score>)) <cycles>))
}

#Elaborate the epmem with the magnitude of change in my 
#enemy's score between the current epmem and the previous 
#one.  Also create an elaboration that weights this change 
#based upon 
sp {elaborate*record-recalled-combat-status*enemy-score-change-one-step
   (state <s> ^operator <op> +
              ^epmem.retrieval-count <cycles>
              ^enemy-score.current <old-score>)
   (<op> ^name record-recalled-combat-status
         ^enemy-score <new-score>)
-->
   (<op> ^enemy-turn-change (abs (- <new-score> <old-score>))
         ^enemy-eval-adjust (/ (abs (- <new-score> <old-score>)) <cycles>))
}

#Elaborate the epmem with the largest
#change since the last epmem
sp {elaborate*record-recalled-combat-status*my-largest-score-change-one-step
   (state <s> ^operator <op> +)
   (<op> ^name record-recalled-combat-status
         ^my-turn-change <my-change>
         ^enemy-turn-change < <my-change>)
-->
   (<op> ^largest-turn-change <my-change>)
}

#Ibid
sp {elaborate*record-recalled-combat-status*enemy-largest-score-change-one-step
   (state <s> ^operator <op> +)
   (<op> ^name record-recalled-combat-status
         ^my-turn-change <= <enemy-change>
         ^enemy-turn-change <enemy-change>)
-->
   (<op> ^largest-turn-change <enemy-change>)
}

#IF the operator has been selected
#AND my score has changed
#AND neither my score or my enemy's score
#    has changed by more than 5
#THEN update the score and eval adjust
sp {apply*record-recalled-combat-status*my-score-change
   (state <s> ^operator <op>
              ^my-score <ms>)
   (<op> ^name record-recalled-combat-status
         ^my-score <new-score>
         ^my-eval-adjust <new-adj>
         ^largest-turn-change <= 5)
   (<ms> ^current <old-score> <> <new-score>
         ^change <old-change>
         ^eval-adjust <old-adj>)
-->
   (<ms> ^current <old-score> -
         ^current <new-score>
         ^change <old-change> -
         ^change (+ <old-change> (- <new-score> <old-score>))
         ^eval-adjust <old-adj> -
         ^eval-adjust (+ <old-adj> <new-adj>))
#   (write (crlf) |my score has changed by: | (+ <old-change> (- <new-score> <old-score>)) | so far.|)
}

#IF the operator has been selected
#AND my enemy's score has changed by 5 or less
#AND neither my score or my enemy's score
#    has changed by more than 5
#THEN update the score
sp {apply*record-recalled-combat-status*enemy-score-change
   (state <s> ^operator <op>
              ^enemy-score <es>)
   (<op> ^name record-recalled-combat-status
         ^enemy-score <new-score>
         ^enemy-eval-adjust <new-adj>
         ^largest-turn-change <= 5)
   (<es> ^current <old-score> <> <new-score>
         ^change <old-change>
         ^eval-adjust <old-adj>)
-->
   (<es> ^current <old-score> -
         ^current <new-score>
         ^change <old-change> -
         ^change (+ <old-change> (- <new-score> <old-score>))
         ^eval-adjust <old-adj> -
         ^eval-adjust (+ <old-adj> <new-adj>))
#   (write (crlf) |enemy score has changed by: | (+ <old-change> (- <new-score> <old-score>)) | so far.|)
}

#IF the operator has been selected
#AND this is the first retrieved epmem in a series
#THEN record info about this first match
sp {apply*record-recalled-combat-status*last-new-epmem
   (state <s> ^operator <op>
              ^epmem <epmem>)
  -(<s> ^last-new-epmem.id <mem-id>)
   (<op> ^name record-recalled-combat-status)
   (<epmem> ^retrieval-count 1
            ^memory-id <mem-id>
            ^match-cardinality <card>)
-->
   (<s> ^last-new-epmem <lne>)
   (<lne> ^id <mem-id>
          ^cardinality <card>)
}


#IF the operator has been selected
#AND I've retrieved sufficient epmems (%%%NOTE: hardcoded value here)
#AND the posted scores are up to date
#THEN Record that the combat result quantified as
#     the relative change in score
sp {apply*record-recalled-combat-status*end-of-combat-score-change
   (state <s> ^operator.name record-recalled-combat-status
              ^epmem.retrieval-count >= 10
              ^my-score <ms>
              ^enemy-score <es>
              ^score-record up-to-date)
   (<ms> ^change <my-change>
         ^eval-adjust <my-adj>)
   (<es> ^change <enemy-change>
         ^eval-adjust <enemy-adj>)
-->
   (<s> ^recalled-status certain
        ^recalled-score-change (- <my-change> <enemy-change>)
        ^recalled-evaluation (- <my-adj> <enemy-adj>))
   (write (crlf) |Stopping after 10 Turns -> EVALUATION: | <my-adj> | - | <enemy-adj> | = | (- <my-adj> <enemy-adj>))
#   (write (crlf) |Stopping after 10 Turns -> Total score change: | <my-change> | - | <enemy-change> | = | (- <my-change> <enemy-change>))
}

#IF the operator has been selected
#AND If there's been a significant overall change in my score
#AND the score is up to date
#AND I haven't died
#THEN Record the combat result quantified as
#     the relative change in score
sp {apply*record-recalled-combat-status*definitive-my-score-change
   (state <s> ^operator <op>
              ^epmem <epmem>
              ^my-score <ms>
              ^enemy-score <es>)
   (<op> ^name record-recalled-combat-status)
   (<epmem> ^retrieval-count <num-turns> > 1
            ^retrieved.io.input-link.resurrect no)
   (<ms> ^change <my-change> >= 5
         ^eval-adjust <my-adj>)
   (<es> ^change <enemy-change>
         ^eval-adjust <enemy-adj>)
-->
   (<s> ^recalled-status certain
        ^recalled-score-change (- <my-change> <enemy-change>)
        ^recalled-evaluation (- <my-adj> <enemy-adj>))
   (write (crlf) |Significant increase in my score after | <num-turns> | Turns -> EVALUATION: | <my-adj> | - | <enemy-adj> | = | (- <my-adj> <enemy-adj>))
#   (write (crlf) |Significant increase in my score after | <num-turns> | Turns -> Total score change: | <my-change> | - | <enemy-change> | = | (- <my-change> <enemy-change>))
}

#IF the operator has been selected
#AND If there's been a significant change in the enemy's score
#AND the score is up to date
#AND I haven't died
#THEN Record the combat result quantified as
#     the relative change in score
sp {apply*record-recalled-combat-status*definitive-enemy-score-change
   (state <s> ^operator <op>
              ^epmem <epmem>
              ^my-score <ms>
              ^enemy-score <es>)
   (<op> ^name record-recalled-combat-status)
   (<epmem> ^retrieval-count <num-turns> > 1
            ^retrieved.io.input-link.resurrect no)
   (<ms> ^change <my-change>
         ^eval-adjust <my-adj>)
   (<es> ^change <enemy-change> >= 5
         ^eval-adjust <enemy-adj>)
-->
   (<s> ^recalled-status certain
        ^recalled-score-change (- <my-change> <enemy-change>)
        ^recalled-evaluation (- <my-adj> <enemy-adj>))
   (write (crlf) |Significant increase in enemy score after | <num-turns> | Turns -> EVALUATION: | <my-adj> | - | <enemy-adj> | = | (- <my-adj> <enemy-adj>))
#   (write (crlf) |Significant increase in enemy's score after | <num-turns> | Turns -> Total score change: | <my-change> | - | <enemy-change> | = | (- <my-change> <enemy-change>))
}


#IF the operator has been selected
#AND If there's been a sudden unaccountably 
#    large change in score (more than 5)
#THEN Record the combat result quantified as
#     the relative change in score
sp {apply*record-recalled-combat-status*before-radical-score-change
   (state <s> ^operator <op>
              ^epmem.retrieval-count <num-turns> > 1
              ^my-score <ms>
              ^enemy-score <es>)
   (<op> ^name record-recalled-combat-status
         ^largest-turn-change > 5)
   (<ms> ^change <my-change>
         ^eval-adjust <my-adj>)
   (<es> ^change <enemy-change>
         ^eval-adjust <enemy-adj>)
-->
   (<s> ^recalled-status certain
        ^recalled-score-change (- <my-change> <enemy-change>)
        ^recalled-evaluation (- <my-adj> <enemy-adj>))
   (write (crlf) |End of game? after | <num-turns> | Turns -> EVALUATION: | <my-adj> | - | <enemy-adj> | = | (- <my-adj> <enemy-adj>))
#   (write (crlf) |End of game? after | <num-turns> | Turns -> Total score change: | <my-change> | - | <enemy-change> | = | (- <my-change> <enemy-change>))
}

#IF the operator has been selected
#AND I've retrieved a memory of having been resurrected
#AND the posted scores are up to date
#THEN Record that the combat result quantified as
##    the relative change in score
sp {apply*record-recalled-combat-status*ressurrect-score-change
   (state <s> ^operator.name record-recalled-combat-status
              ^epmem <epmem>
              ^my-score <ms>
              ^enemy-score <es>
              ^score-record up-to-date)
   (<epmem> ^retrieval-count > 1
            ^retrieved.io.input-link.resurrect yes)
   (<ms> ^change <my-change>
         ^eval-adjust <my-adj>)
   (<es> ^change <enemy-change>
         ^eval-adjust <enemy-adj>)
-->
   (<s> ^recalled-status certain
        ^recalled-score-change (- <my-change> <enemy-change>)
        ^recalled-evaluation (- <my-adj> <enemy-adj>))
   (write (crlf) |Resurrected -> EVALUATION: | <my-adj> | - | <enemy-adj> | = | (- <my-adj> <enemy-adj>))
#   (write (crlf) |Resurrected -> Total score change: | <my-change> | - | <enemy-change> | = | (- <my-change> <enemy-change>))
}


##IF the operator has been selected
##AND I'm not confident in it
##THEN Record an inconclusive status
##%%% NOTE: Hard-coded confidence threshold
#sp {apply*record-recalled-combat-status*note-low-confidence
#   (state <s> ^operator <op>
#              ^epmem.normalized-match-score < -100)  #-100 Disables this rule for the time being
#                                            (<op> ^name record-recalled-combat-status)
#-->
#   (<s> ^recalled-status uncertain)
#   (write (crlf) |I have low confidence in this epmem.|)
#}

#IF the operator has been selected
#AND it's too recent
#THEN Record an inconclusive status
#%%% NOTE: Hard-coded recency threshold
sp {apply*record-recalled-combat-status*note-too-recent
   (state <s> ^operator <op>
              ^epmem.recency < 15)
   (<op> ^name record-recalled-combat-status)
-->
   (<s> ^recalled-status uncertain)
   (write (crlf) |This episode occurred too recently.|)
}



