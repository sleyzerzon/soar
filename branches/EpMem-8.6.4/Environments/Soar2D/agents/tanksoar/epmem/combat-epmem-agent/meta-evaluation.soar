#IF there is a pending meta-evaluation for
#   this clock time
#THEN propose doing the meta-evaluation.
sp {heurll-epmem-bot3*propose*meta-evaluation*init
   (state <s> ^name tanksoar
              ^meta-eval-time <t>
              ^pending-meta-evals.pme <pme>
              ^meta-evaluations <mes>)
   (<pme> ^clock <t>
          ^mem-id <mem-id>)
  -(<mes> ^<any>.mem-id <mem-id>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name meta-evaluation
         ^pme <pme>
         ^old-value none)
}

#Ibid but for mes already exists
sp {heurll-epmem-bot3*propose*meta-evaluation*iterative
   (state <s> ^name tanksoar
              ^meta-eval-time <t>
              ^pending-meta-evals.pme <pme>
              ^meta-evaluations.<any> <me>)
   (<pme> ^clock <t>
          ^mem-id <mem-id>)
   (<me> ^mem-id <mem-id>
         ^value <val>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name meta-evaluation
         ^pme <pme>
         ^old-value <val>)
}

#Perform meta-evals before taking actions
#in the world
sp {heurll-epmem-bot3*compare*meta-evaluation
   (state <s> ^name tanksoar
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name meta-evaluation)
   (<op2> ^name << attack chase retreat wander >>)
-->
   (<s> ^operator <op1> > <op2>)
}

#IF the operator is selected
#AND the PME's associated evaluation exists
#THEN remove the PME
sp {apply*meta-evaluation*remove-pending-eval
   (state <s> ^operator <op>
              ^pending-meta-evals <pmes>
              ^meta-evaluations <mes>)
   (<op> ^name meta-evaluation
         ^pme <pme>)
   (<pmes> ^pme <pme>)
   (<pme> ^mem-id <mem-id>)
   (<mes> ^<any>.mem-id <mem-id>)
-->
   (<pmes> ^pme <pme> -)
#   (write (crlf) |Removing pme | <pme>)
}

#IF the operator is selected
#AND no initial meta-evaluation exists
#THEN create one
sp {apply*meta-evaluation*create-initial-eval
   (state <s> ^operator <op>
              ^meta-evaluations <mes>)
   (<op> ^name meta-evaluation
         ^pme.mem-id <mem-id>)
  -(<mes> ^<any>.mem-id <mem-id>)
-->
   (<mes> ^(make-constant-symbol) <new-me>)
   (<new-me> ^mem-id <mem-id>
             ^value 0)
   (write (crlf) |Meta-evaluation of epmem #| <mem-id> | initialized to: 0|)
#   (interrupt)
}



#IF the operator is selected
#AND it correctly predicted a positive outcome
#THEN adjust the meta-evaluation appropriately
sp {apply*meta-evaluation*correct-eval
   (state <s> ^operator <op>
              ^meta-evaluations <mes>)
   (<op> ^name meta-evaluation
         ^pme <pme>)
   (<pme> ^mem-id <mem-id>
          ^curr-value > 0)
   (<mes> ^<any> <me>)
   (<me> ^mem-id <mem-id>
         ^value <old-score>)
-->
   (<me> ^value <old-score> -)
   (<me> ^value (+ 1 <old-score>))
   (write (crlf) |Meta-evaluation of epmem #| <mem-id> | increased to: | (+ 1 <old-score>))
#   (interrupt)
}

#IF the operator is selected
#AND it incorrectly predicted a positive outcome
#THEN adjust the meta-evaluation appropriately
sp {apply*meta-evaluation*incorrect-eval
   (state <s> ^operator <op>
              ^meta-evaluations <mes>)
   (<op> ^name meta-evaluation
         ^pme <pme>)
   (<pme> ^mem-id <mem-id>
          ^curr-value < 0)
   (<mes> ^<any> <me>)
   (<me> ^mem-id <mem-id>
         ^value <old-score>)
-->
   (<me> ^value <old-score> -)
   (<me> ^value (- <old-score> 1))
   (write (crlf) |Meta-evaluation of epmem #| <mem-id> | decreased to: | (- <old-score> 1))
#   (interrupt)
}

