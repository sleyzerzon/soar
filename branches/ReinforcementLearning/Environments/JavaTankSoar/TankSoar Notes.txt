Notes on TankSoar
Alex Roper
August 11, 2005

[] = on my list but not yet done

This brief file describes in varying detail the changes I made to the TankSoar sim.

I also caused buttons to be greyed when they may not be clicked (eg, you cannot stop if you're not running,
you cannot run if there are no agents)

[Human eaters: I took a fair amount of leeway in designing the Soar implementation of this because there were
no human eaters in the Tcl implementation. John had programmed the interface into this Java version, however.
You CANNOT RUN OR STEP THE SIMULATION WITHOUT ANY SOAR TANKS. I can't imagine anyone wanting to play TankSoar
single player and it would be surprisingly difficult to implement so I didn't bother. You also cannot run
with human tanks in the game, it will automatically step after all human controlled tanks have moved. Each
time it is your turn, make a move on the human eater window(s). After you have made a choice for an eater,
its window will grey so you cannot make another move. Once all human eaters have moved, the simulation will
advance a turn. (One note: there is no defined order for eaters to move, although it will be the same each
turn. Even if your eater doesn't move as soon as you give it a command, it will move before the next turn is
processed, the interface simply caches your move selection and feeds it to the sim when asked for it.)]

[Stank files: Stank files allow you to choose the startup location and color of a tank in addition to its
.soar file. If an invalid (blocked, or out of bounds) location is specified, the tank is assigned a random position.
The same goes for color, if you choose a color that isn't in the sim or that a tank already has
the sim will generate a random color. Pass the --warn-stank option on the commandline
to generate warnings when these random replaces occur or --error-stank to exit the sim with fatal error
if they occur. You can also specify more than one location and/or color in the hopes that one of them will
be valid. The one chosen for the sim will be the LAST VALID option. See complex.stank for a needlessly
complex but quite thorough and well-commented example.]

I also had color prepended to the agent name, which wasn't in the original specification but can aid
command-line operation when using stank files.

I removed the -e commandline options; it's obsolete with .stank files.
The -c option is commented out; the only time you wouldn't have a control panel is if you're running with
--windows off.

This may me needlessly complicated, but there are currently two logs. The log controlled by the TankSoarLogger class
is useful for debugging TankSoar; and keeps track of information such as SML notifications, Java exceptions, etc.
The log controlled by the Logger class (the one specified on the command line) is useful for debugging Soar agents,
running tournaments, et cetera. The TankSoar logger will always be TSOutLog.txt in the TankSoar directory, but the game
log must be specified as explained below.

Andy mode: Andy wanted a mode similar to the one in Eaters, where each tank gets only one Soar cycle per turn. This can
be invoked with the option -e, --andy-mode, or --no-time-to-think

New commandline options:
-e				Andy mode - see above
[-c				Clear log before writing (default is to append, such as for running a series of sims)]
[-r 				Run as soon as loaded. Will also quit automatically if windows are off.]
[-l <file>		Log game events to file]
[--warn-stank	Log any times stank files must be overridden]
[--error-stank	Exit fatally if stank must be overriden]
[-v <#>			Set log verbosity (no effect without -l flag).]
	0: Log tanks' final scores
	1: Log tanks' deaths
	2: Log hits (only those that penetrate shields)
	3: Log any damage tanks receive
	4: Log all hits
	5: Log missiles picked up, and when tank spends turn on charger
	6: Log all missiles fired
	7: Log all tanks' moves
	8: Log complete tank status every turn
	
I also added spelled-out versions to make the command line more human-readable.

--andy-mode			-e
--no-time-to-think	-e
--run				-r
--log				-l
--verbosity			-v
--board				-b
--map				-m
--windows			-w
--agent				-a
--clear-log			-c

Known Issues:
[ * Attempting to exit while running in Andy mode gives a popup "You must stop the simulation first". The logical behavior would be to stop the sim
   then quit, but due to threading issues this is fairly complex.]
[ * You can't run TankSoar with only human agents]