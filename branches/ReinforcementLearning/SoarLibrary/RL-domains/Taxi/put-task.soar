############# Sub-task proposals ###################

sp {propose*navigate*put
  (state <s> ^superoperator.name put ^info-link <i>)
  (<i> ^destination <x> -^location <x>)
  -->
  (<s> ^operator <o> + =)
  (<o> ^name navigate ^to <x>)}
  
############## Primitive Ops ###########################

sp {propose*putdown
  (state <s> ^superoperator.name put)
 -->
  (<s> ^operator <o> + =)
  (<o> ^name putdown)}
  
sp {apply*putdown*success
  (state <s> ^operator.name putdown ^info-link <i>)
  (<i> ^location <x> ^destination <x>)
  -->
   (<i> ^passenger taxi -)
   (<i> ^passenger <x>)}
   
sp {apply*putdown*failure*no*location
  (state <s> ^operator <o> ^info-link <i>)
  (<i> -^location)
  (<o> ^name putdown)
 -->
  (<o> ^result failure)}
  
sp {apply*putdown*failure*wrong*location
  (state <s> ^operator <o> ^info-link <i>)
  (<i> ^location <x> ^destination <> <x>)
  (<o> ^name putdown)
 -->
  (<o> ^result failure)}
  
############ RL template #################

sp {RL*putdown
  :template
(state <s> ^superoperator.name put ^info-link <i> ^operator <o> +)
(<i> ^destination <dest> ^x-coor <x> ^y-coor <y>)
(<o> ^name putdown)
-->
(<s> ^operator <o> = 0)}

sp {RL*put*navigate
:template
(state <s> ^superoperator.name put ^info-link <i> ^operator <o> +)
(<o> ^name navigate)
(<i> ^x-coor <x> ^y-coor <y> ^destination <dest>)
-->
(<s> ^operator <o> = 0)}