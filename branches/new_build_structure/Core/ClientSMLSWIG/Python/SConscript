#!/usr/bin/python
# Project: Soar <http://soar.googlecode.com>
# Author: Jonathan Voigt <voigtjr@gmail.com>
#
import distutils.sysconfig
import os, sys
import SCons.Script

Import('env')
clone = env.Clone()

python_home = os.path.split(distutils.sysconfig.get_python_inc())[0]
python_inc = os.path.join(python_home, 'include')
python_lib = os.path.join(python_home, 'libs')
lib_install_dir = os.path.join(clone['PREFIX'], 'lib')

clone.Append(
	CPPPATH = python_inc, 
	LIBPATH = [python_lib, lib_install_dir],
	LIBS = 'Soar python27'.split(),
	SHLIBPREFIX = '_',
)
if os.name == 'posix':
	clone.Append(CPPFLAGS = Split('-Wno-unused -fno-strict-aliasing'))

if sys.platform == 'darwin':
	clone.Replace(SHLINKFLAGS = Split('$LINKFLAGS -bundle -flat_namespace -undefined suppress'))
	clone.Replace(SHLIBSUFFIX = ['.so'])
	# As of 4/2009, python binaries available on mac are not x86_64 and
	# therefore cannot load x86_64 targeted libraries. Verbosely warn.
	if GetOption('platform') == '64':
		print "* Warning: 64-bit python binaries may not be available on your system."
		print "* You may need to rebuild with m64=no to use Python Soar bindings."

name = 'Python_sml_ClientInterface'
interface = env.File(name + '.i')
wrapper = env.File(name + '_wrap.cpp')
source = env.File(name + '.py')

incs = ' '.join('-I%s' % GetBuildPath(d) for d in env['CPPPATH'])
swig_cmdline = 'swig %s -o %s -c++ -python -Wall %s' % (incs, wrapper, interface)

# Scanner for dependencies in .i files
SWIGScanner = SCons.Scanner.ClassicCPP("SWIGScan",".i","CPPPATH",'^[ \t]*[%,#][ \t]*(?:include|import)[ \t]*(<|")([^>"]+)(>|")')
clone.Append(SCANNERS=[SWIGScanner])

clone.Command([wrapper, source], interface, swig_cmdline)
shlib = clone.SharedLibrary(name, wrapper) 
install_source = env.Install(lib_install_dir, source)
install_lib = env.Install(lib_install_dir, shlib)

env.Alias('sml_python', [install_source, install_lib])