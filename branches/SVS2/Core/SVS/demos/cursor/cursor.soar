waitsnc -e

#sp {cursor-target-bbox-int
#	(state <s> 
#		^superstate nil
#		^svs (
#			^command <c>
#			^spatial-scene (
#				^child.id cursor
#				^child.id target
#			)
#		)
#	)
#-->
#	(<c> ^extract <e>)
#	(<e> ^negate t
#	     ^type bbox_int
#	     ^a <a>
#	     ^b <b>)
#	(<a> ^type bbox ^node <anode>) (<anode> ^type node ^name cursor)
#	(<b> ^type bbox ^node <bnode>) (<bnode> ^type node ^name target)
#}

sp {cursor-target-intersect
	(state <s> 
		^superstate nil
		^svs (
			^command <c>
			^spatial-scene (
				^child.id cursor
				^child.id target
			)
		)
	)
-->
	(<c> ^extract <e>)
	(<e> ^type intersect
	     ^a <a>
	     ^b <b>)
	(<a> ^type node ^name cursor)
	(<b> ^type all_nodes)
	#(<b> ^type node ^name target)
}

sp {create-velocity-model
	(state <s> ^superstate nil
	           ^svs.command <c>)
-->
	(<c> ^create-model <m>)
	(<m> ^type velocity
	     ^name vel)
}

sp {assign-vel-model
	(state <s> ^superstate nil
	           ^svs.command <c>)
-->
	(<c> ^assign-model <m>)
	(<m> ^name vel ^inputs <in> ^outputs <out>)
	(<in> ^px cursor:px
	      ^py cursor:py
		  ^pz cursor:pz
		  ^vx vx
		  ^vy vy
		  ^vz vz)
	(<out> ^px cursor:px
	       ^py cursor:py
		   ^pz cursor:pz)
}

sp {seek-target
	(state <s>
		^superstate nil
		^svs (
			^command <c>
			^spatial-scene (
				^child.id cursor
				^child.id target
			)
		)
	)
-->
	(<c> ^control <ctrl>)
	(<ctrl> ^outputs <out>
	        ^objective <obj>
	        ^model <mdl>
	        ^depth 1
	        ^type simplex)
	(<out> ^vx <vx> ^vy <vy> ^vz <vz>)
	(<vx> ^min -3.0 ^max 3.0 ^inc 1.0)
	(<vy> ^min -3.0 ^max 3.0 ^inc 1.0)
	(<vz> ^min -3.0 ^max 3.0 ^inc 1.0)
	(<obj> ^name euclidean
	       ^a cursor
	       ^b target)
}
