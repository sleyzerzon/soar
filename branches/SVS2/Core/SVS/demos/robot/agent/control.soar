sp {output
   (state <s> ^superstate nil
              ^svs.command <c>)
-->
   (<c> ^output <out>)
   (<out> ^left <l> ^right <r>)
   (<l> ^min -1.0 ^max 1.0 ^default 0.0)
   (<r> ^min -1.0 ^max 1.0 ^default 0.0)}

sp {move-to-box
   (state <s> ^superstate nil
              ^auto-control t
              ^svs <svs>)
   (<svs> ^command <c>
          ^spatial-scene <scn>)
   (<c> ^assign-model <am>)
   (<am> ^name manual ^status success)
   (<scn> ^child.id splinter
          ^child.id target1)
   -{(<s> ^intersect <i>)
     (<i> ^a splinter ^b box1)}
-->
   (<c> ^seek <sk>)
   (<sk> ^type simplex
         ^depth 50
         ^objective <bhnd>)
   (<bhnd> ^next <clnr>)
   (<clnr> ^next <intr>)
#   (<face> ^next <intr>)
   
   (<bhnd> ^name behind
           ^a box1
           ^b target1
           ^c splinter)
   (<clnr> ^name collinear
           ^a splinter
           ^b box1
           ^c target1)
#   (<face> ^name align_facing
#           ^a splinter
#           ^b box1
#           ^c target1)
   (<intr> ^name euclidean
           ^a splinter
           ^b box1)}

sp {push-box-to-target
   (state <s> ^superstate nil
              ^auto-control t
              ^svs <svs>
              ^intersect <int>)
   (<svs> ^command <c>
          ^spatial-scene <scn>)
   (<scn> ^child.id splinter
		  ^child.id box1
		  ^child.id target1)
   (<int> ^a splinter ^b box1)
-->
   (<c> ^seek <sk>)
   (<sk> ^type simplex
         ^depth 50
         ^objective <obj>)
   (<obj> ^name euclidean
          ^a box1
          ^b target1)}

sp {manual
   (state <s> ^superstate nil 
              ^svs.command <c>
             -^auto-control t)
-->
   (<c> ^manual_control <mc>)}
