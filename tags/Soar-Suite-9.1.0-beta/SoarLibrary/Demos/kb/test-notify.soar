sp {kb*propose*test-notify
   (state <s> ^name kb
              ^phase test
              ^sub-phase notify
              ^result <result>
              ^step <step>
              ^max-tests <max>
              ^current-test {<c> <= <max>}
              ^tests.test <t>)
   (<t> ^id <c>
        ^steps {>= <step>})
-->
   (<s> ^operator <op> + =)
   (<op> ^name test-notify
         ^test <c>
         ^step <step>
         ^result <result>)
}

sp {apply*test-notify*success
   (state <s> ^operator <op>
              ^tests.test <t>)
   (<op> ^name test-notify
         ^test <c>
         ^step <step>
         ^result success)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>)
   
-->
   (<s> ^step <step> -
        ^step (+ <step> 1)
        ^result success -
        ^sub-phase notify -
        ^sub-phase cue)
   (write | | <step> |: complete.| (crlf) | |)
}

##

sp {apply*test-notify*clean*query
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^query <q>)
-->
   (<cmd> ^query <q> -)
}

sp {apply*test-notify*clean*neg-query
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^neg-query <q>)
-->
   (<cmd> ^neg-query <q> -)
}

sp {apply*test-notify*clean*retrieve
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^retrieve <q>)
-->
   (<cmd> ^retrieve <q> -)
}


sp {apply*test-notify*clean*next
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^next <q>)
-->
   (<cmd> ^next <q> -)
}


sp {apply*test-notify*clean*previous
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^previous <q>)
-->
   (<cmd> ^previous <q> -)
}


sp {apply*test-notify*clean*before
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^before <q>)
-->
   (<cmd> ^before <q> -)
}

sp {apply*test-notify*clean*after
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^after <q>)
-->
   (<cmd> ^after <q> -)
}

sp {apply*test-notify*clean*prohibit
   (state <s> ^operator <op>
              ^epmem.command <cmd>)
   (<op> ^name test-notify
         ^result success)
   (<cmd> ^prohibit <q>)
-->
   (<cmd> ^prohibit <q> -)
}

##

sp {apply*test-notify*failure
   (state <s> ^operator <op>
              ^tests.test <t>)
   (<op> ^name test-notify
         ^test <c>
         ^step <step>
         ^result failure)
   (<t> ^id <c>
        ^step <st>)
   (<st> ^id <step>)
   
-->
   (write | | <step> |: failed.| (crlf) | |)
   (halt)
}
