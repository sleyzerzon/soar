# -*- python -*-
# ex: set syntax=python:

c = BuildmasterConfig = {}

c['bots'] = [
	("winterbot", "4Xyplz"),
]
c['slavePortnum'] = 9989

from buildbot.changes.pb import PBChangeSource
from buildbot.scheduler import Scheduler
from buildbot.process import factory
from buildbot.steps import source, shell

c['sources'] = [PBChangeSource()]

def isSoarSuiteTrunk( change ):
	if 'trunk/SoarSuite' in change.asText():
		if 'trunk/SoarSuite/.settings' in change.asText():
			return False
		if 'trunk/SoarSuite/Resources' in change.asText():
			return False
		if 'trunk/SoarSuite/SoarLibrary/CLIHelp' in change.asText():
			return False
		if 'trunk/SoarSuite/Tools/tcl' in change.asText():
			return False
		if 'trunk/SoarSuite/Tools/FilterTcl' in change.asText():
			return False
		if 'trunk/SoarSuite/TSI' in change.asText():
			return False
		if 'trunk/SoarSuite/JavaTOH/tutorial' in change.asText():
			return False
		if 'trunk/SoarSuite/Soar2D/doc' in change.asText():
			return False
		return True
	return False

s1 = Scheduler(
	name = 'main', 
	branch = None, 
	treeStableTimer = 2*60, # 2 minutes 
	builderNames = 
		[ 
			'SoarSuite-4', 
		],
	fileIsImportant = isSoarSuiteTrunk )
c['schedulers'] = [ s1 ]
     
f1 = factory.BuildFactory()
f1.addStep(
	source.SVN, 
	mode='update', 
	svnurl='https://winter.eecs.umich.edu/svn/soar/trunk/SoarSuite') 
f1.addStep(
	shell.Compile, 
	description='scons (clean swig)', 
	descriptionDone='scons (clean swig)', 
	command="scons -c Core/ClientSMLSWIG")
f1.addStep(
	shell.Compile, 
	description='scons (java)', 
	descriptionDone='scons (java)', 
	command="scons Core/ClientSMLSWIG/Java/libJava_sml_ClientInterface.so")
f1.addStep(
	shell.Compile, 
	description='scons (python)', 
	descriptionDone='scons (python)', 
	command="scons Core/ClientSMLSWIG/Python/libPython_sml_ClientInterface.so")
f1.addStep(
	shell.Compile, 
	description='scons', 
	descriptionDone='scons', 
	command="scons")
f1.addStep(
	shell.Test, 
	workdir='build/SoarLibrary/bin', 
	description='Unit Tests', 
	descriptionDone='Unit Tests', 
	command='LD_LIBRARY_PATH="../lib" ./Tests --nopause')
f1.addStep(
	shell.Test, 
	workdir='build/SoarLibrary/bin', 
	description='TestJavaSML', 
	descriptionDone='TestJavaSML', 
	command='LD_LIBRARY_PATH="../lib" java -jar TestJavaSML.jar')

c['builders'] = [
	{'name':'SoarSuite-4', 'slavenames':['winterbot', ], 'builddir':'SoarSuite-4', 'factory':f1 },
]

c['status'] = []

from buildbot.status import html, mail
c['status'].append(html.Waterfall(http_port=8010, css='/var/lib/buildbot/buildmaster/buildbot.css'))
c['status'].append(mail.MailNotifier(fromaddr="soar@winter.eecs.umich.edu", extraRecipients=["voigtjr@gmail.com","nlderbin@umich.edu", "rmarinie@umich.edu"]))

c['projectName'] = "Soar"
c['projectURL'] = "http://sitemaker.umich.edu/soar"

c['buildbotURL'] = "http://winter.eecs.umich.edu:8010/"
