sp {elaborations*elaborate*pending
   (state <s> ^name robot)
-->
   (<s> ^pending <p>)
}

sp {elaborations*elaborate*gotos
   (state <s> ^name robot)
-->
   (<s> ^gotos <g>)
}

sp {clean-house*elaborate*state*current-location
   (state <s> ^name robot
              ^parameters.areas-held-in wm
              ^top-state.areas.area <area>
              ^io.input-link.self.area <area-id>)
   (<area> ^id <area-id>)
-->
   (<s> ^current-location <area>)
}

sp {clean-house*elaborate*current-location
   (state <s> ^name <> robot
              ^top-state.current-location <ca>)
-->
   (<s> ^current-location <ca>)
}

sp {clean-house*elaborate*area*compute-x-y*four-walls
   :o-support
   (state <s> ^name robot
              ^current-location <area>)
   (<area> -^type door
            ^wall <w1> <w2> <w3> <w4>)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction east ^x <ex>)
   (<w4> ^direction west ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}

sp {clean-house*elaborate*area*compute-x-y*north-south-walls
   :o-support
   (state <s> ^name robot
              ^current-location <area>)
   (<area> -^type door
            ^wall <w1> <w2>
            ^gateway <w3> <w4>)
  -(<area> ^wall.direction east
           ^wall.direction west)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction east ^x <ex>)
   (<w4> ^direction west ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}

sp {clean-house*elaborate*area*compute-x-y*east-west-walls
   :o-support
   (state <s> ^name robot
              ^current-location <area>)
   (<area> -^type door
            ^gateway <w1> <w2>
            ^wall <w3> <w4>)
  -(<area> ^wall.direction north
           ^wall.direction south)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction east ^x <ex>)
   (<w4> ^direction west ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}

sp {clean-house*elaborate*area*compute-x-y*no-west-walls
   :o-support
   (state <s> ^name robot
              ^current-location <area>)
   (<area> -^type door
            ^wall <w1> <w2> <w3>
            ^gateway  <w4>)
  -(<area> ^wall.direction west)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction east ^x <ex>)
   (<w4> ^direction west ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}

sp {clean-house*elaborate*area*compute-x-y*no-east-walls
   :o-support
   (state <s> ^name robot
              ^current-location <area>)
   (<area> -^type door
            ^wall <w1> <w2> <w3>
            ^gateway  <w4>)
  -(<area> ^wall.direction east)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction west ^x <ex>)
   (<w4> ^direction east  ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}

sp {clean-house*elaborate*area*compute-x-y*no-north-walls
   :o-support
   (state <s> ^name robot
              ^areas.area <area>)
   (<area> -^type door
            ^wall <w4> <w2> <w3>
            ^gateway  <w1>)
  -(<area> ^wall.direction north)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction east ^x <ex>)
   (<w4> ^direction west ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}

sp {clean-house*elaborate*area*compute-x-y*no-south-walls
   :o-support
   (state <s> ^name robot
              ^current-location <area>)
   (<area> -^type door
            ^wall <w1> <w4> <w3>
            ^gateway  <w2>)
  -(<area> ^wall.direction south)
   (<w1> ^direction north ^y <ny>)
   (<w2> ^direction south ^y <sy>)
   (<w3> ^direction east ^x <ex>)
   (<w4> ^direction west ^x <wx>)
-->
   (<area> ^x (/ (+ <ny> <sy>) 2)
           ^y (/ (+ <ex> <wx>) 2))
}
sp {clean-house*elaborate*area*next
   :o-support
   (state <s> ^name robot
              ^parameters.areas-held-in wm
              ^current-location <ca>
              ^areas <aa>)
   (<aa> ^area { <> <ca> <garea> } { <> <ca> <> <garea> <narea> })
   (<ca> -^type door
          ^gateway <g1>
          ^id <caid>)
   (<g1> ^to { <> <caid> <gid> })
   (<garea> ^id <gid>
            ^type door
            ^gateway { <> <g1> <g2> })
   (<g2> ^to { <nid> <> <caid> })
   (<narea> ^id <nid>)
-->
   (<ca> ^next <narea>)
   (<narea> ^next <ca>)
}


sp {clean-house*elaborate*area*next*smem
   :o-support
   (state <s> ^name robot
              ^parameters.areas-held-in smem
              ^current-location <ca>)
   (<ca> ^neighbor-area <na>
         ^type room)
   (<na> ^neighbor-area { <nna> <> <ca> }
         ^type door)
-->
   (<ca> ^next <nna>)
   (<nna> ^next <ca>)
}